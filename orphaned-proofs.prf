("nominalunif" |nominalunif| |c_unify_complete_cor| 0 (|c_unify_complete_cor-1| NIL 3758280884 NIL ("" (SKEEP) (("" (LEMMA "c_unify_complete") (("" (INST? -1) (("" (PROP) (("" (HIDE -1 2) (("" (EXPAND "valid_quadruple?") (("" (PROP) (("1" (EXPAND "well_behaved?") (("1" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((C_UNIFY_COMPLETE FORMULA-DECL NIL NOMINALUNIF NIL) (VALID_QUADRUPLE? CONST-DECL "bool" NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (UNION CONST-DECL "set" SETS NIL) (INTERSECTION CONST-DECL "set" SETS NIL) (EMPTY? CONST-DECL "bool" SETS NIL) (DISJOINT? CONST-DECL "bool" SETS NIL) (FINITE_INTERSECTION1 APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (WELL_BEHAVED? CONST-DECL "bool" SUBSTITUTION NIL) (VARS_DOM_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (SUBS DEF-DECL "term" SUBSTITUTION NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (SINGLETON CONST-DECL "(singleton?)" SETS NIL) (CONS ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" LIST_ADT NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (SUB TYPE-EQ-DECL NIL SUBSTITUTION NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (FRESH_CONTEXT TYPE-EQ-DECL NIL FRESHNESS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (>= CONST-DECL "bool" REALS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_complete| 0 (|c_unify_complete-2| " no" 3757928133 NIL ("" (MEASURE-INDUCT+ "lex2(card(vars_lst(append(unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))), size_lst(unif_prb_lst))" ("unif_prb_lst" "fix_pnt_eq_lst")) (("" (SKEEP) (("" (EXPAND "c_unify" 1) (("" (CASE "null?(x!1)") (("1" (INST 1 "Delta" "sigma" "x!2") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "member" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE -3) (("2" (HIDE -4 -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME-REPLACE "t_alg" "car(x!1)`1") (("1" (NAME-REPLACE "s_alg" "car(x!1)`2") (("1" (CASE "susp?(s_alg) AND NOT occurs(V(s_alg), t_alg)") (("1" (NAME-REPLACE "sigma1_alg" "(: (V(s_alg), ext(reverse(p(s_alg)))(t_alg) ) :)") (("1" (NAME-REPLACE "new_sigma_alg" "append(sigma1_alg, sigma)") (("1" (NAME-REPLACE "Delta1_alg" "fresh_subs?(sigma1_alg, Delta)`1") (("1" (NAME-REPLACE "bool1_alg" "fresh_subs?(sigma1_alg, Delta)`2") (("1" (NAME-REPLACE "unif_prb_lst1_alg" "apply_sub_prb_lst(sigma1_alg, cdr(x!1))") (("1" (NAME-REPLACE "unif_prb_lst2_alg" "apply_sub_prb_lst(sigma1_alg, fix_pnt2unif_prb(x!2))") (("1" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(unif_prb_lst1_alg, unif_prb_lst2_alg)") (("1" (HIDE 2) (("1" (INST -2 "new_unif_prb_lst_alg" "(::)") (("1" (INST -2 "new_Delta_alg" "Nabla" "new_sigma_alg" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 1) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -1 -2 -3 -4 -6 1 3 4 5 6) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (EXPAND "bool1_alg") (("1" (HIDE -3) (("1" (EXPAND "apply_sub_prb_lst" -2) (("1" (LEMMA "aux_lemma_fresh_sub2") (("1" (INST -1 "Delta" "Nabla" "sigma1_alg" "sigma1") (("1" (PROP) (("1" (HIDE -3) (("1" (HIDE -1 2) (("1" (EXPAND "sigma1_alg") (("1" (LEMMA "suf_cond_more_gen_nuc_sub") (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -20 -21) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REVEAL -8) (("2" (LEMMA "term_times_eta") (("2" (INST? -1) (("2" (REPLACE -1 -3 RL T) (("2" (HIDE -1) (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (REWRITE "alpha_symmetric" -1) (("2" (INST? -2) (("2" (INST -2 "sigma1_alg") (("2" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE -3 1 2) (("3" (REVEAL 4) (("3" (HIDE -2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 2) (("2" (EXPAND "sigma1_alg") (("2" (LEMMA "suf_cond_idempotent") (("2" (INST -1 "sigma1_alg") (("2" (EXPAND "sigma1_alg") (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND* "vars_range_sub" "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 4) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("1" (EXPAND "new_Delta_alg") (("1" (EXPAND "Delta1_alg") (("1" (LEMMA "aux_lemma_fresh_sub") (("1" (REWRITE "fresh_subs_append_context" 1) (("1" (PROP) (("1" (INST -1 "Delta" "Nabla" "sigma1_alg" "sigma1") (("1" (PROP) (("1" (LEMMA "suf_cond_more_gen_nuc_sub") (("1" (HIDE -2 -3 -4 -5 -6 -7 2 3 4) (("1" (INST? -1) (("1" (EXPAND "sigma1_alg") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 1) (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL -5) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2 1) (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -22 -23) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REVEAL -5) (("2" (LEMMA "term_times_eta") (("2" (INST -1 "s_alg") (("2" (REPLACE -1 -3 RL T) (("2" (HIDE -1) (("2" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND* "sigma1_alg" "vars_range_sub" "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -5 -6 2 3) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (CASE "more_gen_sub?(Nabla)(sigma1_alg, sigma1)") (("1" (PROP) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (LEMMA "apply_sub_prb_lst_cons_calls_add") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND* "sigma1_alg" "vars_range_sub" "vars_dom_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (REVEAL 3) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (LEMMA "apply_sub_prb_lst_cons_calls_add") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND* "vars_range_sub" "sigma1_alg" "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (LEMMA "suf_cond_more_gen_nuc_sub") (("2" (EXPAND "sigma1_alg") (("2" (INST -1 "Nabla" "V(s_alg)" "sigma1" "p(s_alg)" "sigma1_alg" "t_alg") (("2" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 1) (("3" (REVEAL 3) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REVEAL -2 -4 -18 -19) (("4" (LEMMA "term_times_eta") (("4" (INST? -1) (("4" (EXPAND "apply_sub_prb_lst" -2) (("4" (LIFT-IF) (("4" (REVEAL 4) (("4" (PROP) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (HIDE -2) (("4" (REPLACE -4 -1 NIL T) (("4" (REPLACE -4 -1 NIL T) (("4" (REPLACE -2 -1 RL T) (("4" (HIDE -2) (("4" (HIDE 1 2) (("4" (EXPAND "alpha_eq_lst?") (("4" (PROP) (("4" (HIDE -2) (("4" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "fix_pnt2unif_prb") (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE -1 -2 -3 -4 -6 2 3) (("4" (EXPAND "new_sigma_alg") (("4" (LEMMA "suf_cond_more_gen_append") (("4" (INST? -1) (("4" (EXPAND "sigma1_alg" 1) (("4" (INST -1 "V(s_alg)" "p(s_alg)" "t_alg") (("4" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE -2 1) (("3" (REVEAL 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1 2) (("4" (REVEAL -6) (("4" (EXPAND "apply_sub_prb_lst" -1) (("4" (LIFT-IF) (("4" (REVEAL 3) (("4" (PROP) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (REVEAL -4 -19 -20) (("4" (LEMMA "term_times_eta") (("4" (INST? -1) (("4" (REPLACE -3 -5 NIL T) (("4" (REPLACE -3 -4 NIL T) (("4" (REPLACE -1 -3 RL T) (("4" (HIDE -3 1 2) (("4" (HIDE -1) (("4" (EXPAND "alpha_eq_lst?") (("4" (PROP) (("4" (HIDE -2) (("4" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -1 2) (("5" (REVEAL -8) (("5" (EXPAND "valid_quadruple?") (("5" (PROP) (("5" (HIDE -1) (("5" (REWRITE "vars_lst_append") (("5" (EXPAND "vars_lst" -1 1) (("5" (LIFT-IF) (("5" (REVEAL 3) (("5" (PROP) (("5" (HIDE 1 2) (("5" (REVEAL -5 -20 -21) (("5" (REPLACE -2 -4 NIL T) (("5" (REPLACE -2 -3 NIL T) (("5" (LEMMA "term_times_eta") (("5" (INST? -1) (("5" (REPLACE -1 -3 RL T) (("5" (HIDE -1) (("5" (EXPAND* "disjoint?" "empty?") (("5" (SKEEP) (("5" (INST -1 "x") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2 2 3) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("1" (EXPAND "new_sigma_alg") (("1" (LEMMA "suf_cond_idempotent?_append") (("1" (INST -1 "sigma" "sigma1_alg") (("1" (PROP) (("1" (HIDE -1 -2 2) (("1" (LEMMA "subs_add_alg_well_behaved?") (("1" (EXPAND "sigma1_alg") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 1) (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" -1 1) (("2" (LIFT-IF) (("2" (REVEAL 3) (("2" (PROP) (("2" (HIDE 1 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_dom_sub" 1 1) (("2" (EXPAND "vars_dom_sub" 1 1) (("2" (EXPAND "vars_range_sub" 1) (("2" (EXPAND "vars_range_sub" 1) (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL -3 -15 -16) (("2" (LEMMA "term_times_eta") (("2" (INST? -1) (("2" (REPLACE -3 -5 NIL T) (("2" (REPLACE -3 -4 NIL T) (("2" (REPLACE -1 -3 RL T) (("2" (HIDE -1) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (INST -1 "x") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND* "member" "intersection") (("2" (PROP) (("1" (EXPAND "new_sigma_alg") (("1" (LEMMA "vars_dom_sub_append") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -2 1) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" -2) (("1" (EXPAND "union" -2) (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "unif_prb_lst1_alg") (("1" (EXPAND "unif_prb_lst2_alg") (("1" (LEMMA "apply_sub_elim_var") (("1" (EXPAND "member" -2) (("1" (EXPAND "union" -2) (("1" (PROP) (("1" (INST -2 "x" "sigma1_alg" "cdr(x!1)") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub" -2) (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 2) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL 2) (("2" (LEMMA "Vars_occurs") (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_sigma_alg") (("2" (LEMMA "vars_dom_sub_append") (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -2 1) (("1" (EXPAND "fix_pnt2unif_prb") (("1" (REWRITE "append_null") (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "unif_prb_lst1_alg") (("1" (EXPAND "unif_prb_lst2_alg") (("1" (LEMMA "apply_sub_elim_var") (("1" (EXPAND "member" -3) (("1" (EXPAND "union" -3) (("1" (PROP) (("1" (INST? -2) (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "vars_dom_sub" -2) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL 2) (("2" (LEMMA "Vars_occurs") (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub" -2) (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_dom_sub") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "fix_pnt2unif_prb" -2) (("2" (REWRITE "append_null") (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "unif_prb_lst1_alg") (("2" (EXPAND "unif_prb_lst2_alg") (("2" (LEMMA "vars_lst_sub_subset") (("2" (EXPAND "member" -3) (("2" (EXPAND "union" -3) (("2" (PROP) (("1" (INST? -2) (("1" (EXPAND "subset?") (("1" (INST -2 "x") (("1" (PROP) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (HIDE -2 1) (("1" (REVEAL -6) (("1" (INST? -1) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub" -1) (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "member" 1) (("1" (EXPAND "intersection" 1) (("1" (PROP) (("1" (HIDE -2) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "vars_lst" 1 1) (("1" (LIFT-IF) (("1" (REVEAL 3) (("1" (PROP) (("1" (HIDE 1 3) (("1" (EXPAND "t_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (EXPAND "vars_lst" 1 1) (("2" (LIFT-IF) (("2" (REVEAL 2) (("2" (PROP) (("2" (ASSERT) (("2" (HIDE 1 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (EXPAND "subset?" -2) (("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (HIDE 1) (("1" (REVEAL -6) (("1" (INST? -1) (("1" (EXPAND "member" 1) (("1" (EXPAND "intersection" 1) (("1" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub" -1) (("1" (REWRITE "ext_preserves_Vars") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "vars_lst" 1 1) (("1" (LIFT-IF) (("1" (REVEAL 3) (("1" (PROP) (("1" (HIDE -2 1 3) (("1" (EXPAND "t_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (CASE "bool1_alg") (("1" (LEMMA "c_unify_TCC1") (("1" (INST -1 "Delta" "sigma" "x!1" "x!2") (("1" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "sigma1_alg") (("1" (PROP) (("1" (INST -1 "Delta1_alg" "bool1_alg") (("1" (PROP) (("1" (INST -1 "new_Delta_alg") (("1" (PROP) (("1" (INST -1 "new_sigma_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst2_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_sigma_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_Delta_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "bool1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND "Delta1_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -4) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL 1) (("3" (PROPAX) NIL NIL)) NIL) ("4" (EXPAND "s_alg") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL -2) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -3) (("2" (EXPAND "bool1_alg") (("2" (EXPAND "apply_sub_prb_lst" -2) (("2" (LEMMA "aux_lemma_fresh_sub2") (("2" (INST -1 "Delta" "Nabla" "sigma1_alg" "sigma1") (("2" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "suf_cond_more_gen_nuc_sub") (("1" (INST? -1) (("1" (EXPAND "sigma1_alg" 1) (("1" (INST? -1) (("1" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL 3) (("3" (HIDE 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REVEAL -4) (("4" (LIFT-IF) (("4" (REVEAL 5) (("4" (PROP) (("4" (HIDE 1 2) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (HIDE -2) (("4" (EXPAND "alpha_eq_lst?") (("4" (PROP) (("4" (HIDE -2) (("4" (REVEAL -10 -23 -24) (("4" (LEMMA "term_times_eta") (("4" (INST? -1) (("4" (REPLACE -3 -5 NIL T) (("4" (REPLACE -3 -4 NIL T) (("4" (HIDE -2) (("4" (REPLACE -1 -2 RL) (("4" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 4) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "atom?(t_alg)") (("1" (HIDE 3) (("1" (LEMMA "term_at_eta") (("1" (INST? -1) (("1" (CASE "s_alg = at(a(t_alg))") (("1" (INST -4 "cdr(x!1)" "x!2") (("1" (INST -4 "Delta" "Nabla" "sigma" "sigma1") (("1" (HIDE 1) (("1" (PROP) (("1" (REVEAL 2) (("1" (SKEEP) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 1) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -5 2) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -1 -3 -4) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (REVEAL 1) (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 2) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2 -3 -4 2) (("3" (LEMMA "valid_quadruple?_cdr") (("3" (INST? -1) (("3" (PROP) (("3" (REVEAL 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC2") (("4" (HIDE -2 -3 -4 -5 -6 2) (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "a(t_alg)") (("1" (PROP) (("1" (REVEAL -5) (("1" (PROPAX) NIL NIL)) NIL) ("2" (LEMMA "term_at_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -7) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 -5 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -3 -5 2 3) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -3 -5 -6) (("2" (EXPAND "apply_sub_prb_lst" -3) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -8 -9) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REPLACE -2 -1 RL T) (("2" (REWRITE "Subs_atom") (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2 -3 1) (("2" (REVEAL 1) (("2" (LEMMA "Subs_atom2") (("2" (EXPAND "alpha" -2) (("2" (INST? -1) (("2" (PROP) (("2" (HIDE -2 -3 1) (("2" (REVEAL -6) (("2" (REPLACE -1 -2 RL) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "susp?(t_alg)") (("1" (HIDE 4 -2) (("1" (LEMMA "term_times_eta") (("1" (INST -1 "t_alg") (("1" (CASE "NOT occurs(V(t_alg), s_alg)") (("1" (HIDE -1 -2 1 2 3 4) (("1" (REVEAL 5) (("1" (NAME-REPLACE "sigma1_alg" "(: (V(t_alg), ext(reverse(p(t_alg)))(s_alg) ) :)") (("1" (NAME-REPLACE "new_sigma_alg" "append(sigma1_alg, sigma)") (("1" (NAME-REPLACE "Delta1_alg" "fresh_subs?(sigma1_alg, Delta)`1") (("1" (NAME-REPLACE "bool1_alg" "fresh_subs?(sigma1_alg, Delta)`2") (("1" (NAME-REPLACE "unif_prb_lst1_alg" "apply_sub_prb_lst(sigma1_alg, cdr(x!1))") (("1" (NAME-REPLACE "unif_prb_lst2_alg" "apply_sub_prb_lst(sigma1_alg, fix_pnt2unif_prb(x!2))") (("1" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(unif_prb_lst1_alg, unif_prb_lst2_alg)") (("1" (CASE "bool1_alg") (("1" (REVEAL -12) (("1" (HIDE 1) (("1" (INST -1 "new_unif_prb_lst_alg" "(::)") (("1" (INST -1 "new_Delta_alg" "Nabla" "new_sigma_alg" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 5) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL -11 1 2 3 4) (("1" (ASSERT) (("1" (SPLIT 5) (("1" (PROP) NIL NIL) ("2" (FLATTEN) (("2" (LIFT-IF) (("2" (HIDE 1 3 4 5 6) (("2" (EXPAND "bool1_alg" -4) (("2" (EXPAND "sigma1_alg") (("2" (PROP) (("2" (ASSERT) (("2" (HIDE -1 -2 -5 -7) (("2" (HIDE -2 -3) (("2" (EXPAND* "new_Delta_alg" "new_sigma_alg" "new_unif_prb_lst_alg") (("2" (EXPAND* "Delta1_alg" "sigma1_alg" "unif_prb_lst1_alg" "unif_prb_lst2_alg") (("2" (ASSERT) (("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3) (("2" (EXPAND "sol_prb_quad?") (("2" (CASE "more_gen_sub?(Nabla)(sigma1_alg, sigma1)") (("1" (PROP) (("1" (EXPAND "new_Delta_alg") (("1" (REWRITE "fresh_subs_append_context") (("1" (PROP) (("1" (EXPAND "Delta1_alg") (("1" (LEMMA "aux_lemma_fresh_sub") (("1" (INST -1 "Delta" "Nabla" "sigma1_alg" "sigma1") (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (EXPAND "unif_prb_lst1_alg") (("2" (EXPAND "unif_prb_lst2_alg") (("2" (LEMMA "apply_sub_prb_lst_cons_calls_add") (("2" (HIDE -3 -6) (("2" (PROP) (("1" (HIDE -4) (("1" (INST? -1) (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (REVEAL 5) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (INST? -1) (("2" (PROP) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL) ("4" (LEMMA "suf_cond_more_gen_append") (("4" (HIDE -3 -4 -5 -6) (("4" (EXPAND "new_sigma_alg") (("4" (INST? -1) (("4" (EXPAND "sigma1_alg" 1) (("4" (INST? -1) (("4" (PROP) (("1" (EXPAND "sigma1_alg" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg" 1) (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE -2 1) (("3" (REVEAL 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1 2) (("4" (REVEAL -5 -19 -23 -24) (("4" (EXPAND "apply_sub_prb_lst" -1) (("4" (LIFT-IF) (("4" (REVEAL 5) (("4" (PROP) (("4" (HIDE 1 2) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (HIDE -2) (("4" (REPLACE -3 -1 NIL T) (("4" (REPLACE -3 -1 NIL T) (("4" (REPLACE -2 -1 RL) (("4" (HIDE -2) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -1 2) (("5" (REVEAL -9) (("5" (EXPAND "valid_quadruple?" -1) (("5" (PROP) (("5" (HIDE -1) (("5" (REWRITE "vars_lst_append") (("5" (EXPAND "vars_lst" -1 1) (("5" (LIFT-IF) (("5" (REVEAL 5) (("5" (PROP) (("5" (HIDE 1 2) (("5" (REVEAL -20) (("5" (REVEAL -25) (("5" (REPLACE -1 -3 NIL T) (("5" (REPLACE -1 -2 RL T) (("5" (EXPAND "s_alg") (("5" (EXPAND* "disjoint?" "empty?") (("5" (SKEEP) (("5" (INST -1 "x") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (REVEAL -6) (("6" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (LEMMA "suf_cond_more_gen_nuc_sub") (("2" (INST? -1) (("2" (EXPAND "sigma1_alg" 1) (("2" (INST? -1) (("2" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 1) (("3" (REVEAL 3) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REVEAL -3) (("4" (PROP) (("4" (HIDE -1 -3 -4) (("4" (EXPAND "apply_sub_prb_lst" -1) (("4" (LIFT-IF) (("4" (REVEAL 6) (("4" (PROP) (("4" (HIDE 1 2) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (HIDE -2) (("4" (REVEAL -19 -23 -24) (("4" (REPLACE -2 -4 NIL T) (("4" (REPLACE -2 -3 NIL T) (("4" (REPLACE -1 -2 RL T) (("4" (EXPAND "alpha_eq_lst?") (("4" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("1" (EXPAND "new_sigma_alg") (("1" (LEMMA "suf_cond_idempotent?_append") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -1 2) (("1" (LEMMA "subs_add_alg_well_behaved?") (("1" (EXPAND "sigma1_alg") (("1" (INST? -1) (("1" (PROP) (("1" (REWRITE "ext_preserves_Vars") (("1" (HIDE -2 1) (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 1 1) (("2" (LIFT-IF) (("2" (REVEAL 5) (("2" (PROP) (("2" (HIDE 1 3) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub" -1) (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_dom_sub" -1 1) (("2" (EXPAND "s_alg") (("2" (REVEAL -15 -20) (("2" (REPLACE -2 1 NIL T) (("2" (REPLACE -1 1 RL T) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND* "member" "intersection") (("2" (FLATTEN -1) (("2" (EXPAND "new_sigma_alg") (("2" (LEMMA "vars_dom_sub_append") (("2" (INST -1 "x" "sigma" "sigma1_alg") (("2" (PROP) (("1" (HIDE -2 2) (("1" (HIDE 1) (("1" (EXPAND "fix_pnt2unif_prb") (("1" (REWRITE "append_null") (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "unif_prb_lst1_alg") (("1" (EXPAND "unif_prb_lst2_alg") (("1" (LEMMA "apply_sub_elim_var") (("1" (EXPAND "member" -3) (("1" (EXPAND "union" -3) (("1" (PROP) (("1" (INST? -2) (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub" -1) (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "vars_dom_sub") (("1" (REVEAL 2) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_dom_sub") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 2) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 1) (("2" (EXPAND "fix_pnt2unif_prb") (("2" (REWRITE "append_null") (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "unif_prb_lst2_alg") (("2" (EXPAND "unif_prb_lst1_alg") (("2" (LEMMA "apply_sub_elim_var") (("2" (EXPAND "member" -3) (("2" (EXPAND "union" -3) (("2" (PROP) (("1" (INST? -2) (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL 2) (("1" (LEMMA "Vars_occurs") (("1" (EXPAND "sigma1_alg" -2) (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "sigma1_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND* "sigma1_alg" "vars_range_sub" "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 2) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2) (("3" (EXPAND "fix_pnt2unif_prb" -2) (("3" (REWRITE "append_null") (("3" (LEMMA "vars_lst_sub_subset") (("3" (EXPAND "new_unif_prb_lst_alg") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "unif_prb_lst1_alg") (("3" (EXPAND "unif_prb_lst2_alg") (("3" (CASE "member(x, vars_range_sub(sigma1_alg))") (("1" (HIDE -2 -4 1) (("1" (REVEAL -5) (("1" (INST -1 "x") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "vars_lst" 1 1) (("1" (LIFT-IF) (("1" (REVEAL 5) (("1" (PROP) (("1" (HIDE 1 3) (("1" (EXPAND "sigma1_alg" -1) (("1" (EXPAND "vars_range_sub" -1) (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "s_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member" -3) (("2" (EXPAND "union" -3) (("2" (PROP) (("1" (INST? -2) (("1" (EXPAND "subset?") (("1" (INST -2 "x") (("1" (PROP) (("1" (HIDE -2 -3) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (EXPAND "member" 2) (("1" (EXPAND "union" 2) (("1" (PROP) (("1" (EXPAND "vars_lst" 2) (("1" (LIFT-IF) (("1" (REVEAL 4) (("1" (PROP) (("1" (HIDE 1 3 4 5) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (EXPAND "subset?" -2) (("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2 -3) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC3") (("4" (INST -1 "Delta" "sigma" "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "p(t_alg)" "V(t_alg)") (("1" (PROP) (("1" (INST -1 "sigma1_alg") (("1" (PROP) (("1" (INST -1 "Delta1_alg" "bool1_alg") (("1" (PROP) (("1" (INST -1 "new_Delta_alg") (("1" (PROP) (("1" (INST -1 "new_sigma_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst2_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_sigma_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_Delta_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "bool1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND "Delta1_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -14) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -15) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 4) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "bool1_alg") (("2" (HIDE -2) (("2" (EXPAND "sol_prb_quad?") (("2" (LEMMA "aux_lemma_fresh_sub2") (("2" (INST? -1) (("2" (PROP) (("2" (INST -1 "sigma1_alg") (("2" (PROP) (("1" (HIDE -1 -2 -3 -4 2) (("1" (LEMMA "suf_cond_more_gen_nuc_sub") (("1" (INST? -1) (("1" (EXPAND "sigma1_alg" 1) (("1" (INST? -1) (("1" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL 2) (("3" (HIDE 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REVEAL -4 -18 6) (("4" (EXPAND "apply_sub_prb_lst") (("4" (LIFT-IF) (("4" (PROP) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (REPLACE -3 3 NIL T) (("4" (EXPAND "t_alg") (("4" (EXPAND "s_alg") (("4" (HIDE -2 1 2) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND* "sigma1_alg" "vars_dom_sub" "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 4) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "susp?(s_alg)") (("1" (LEMMA "term_times_eta") (("1" (INST -1 "s_alg") (("1" (HIDE -1 -2 -3 -4 -5 1 2 3) (("1" (REVEAL -7) (("1" (NAME-REPLACE "new_fix_pnt_eq_alg" "(: (append(reverse(p(s_alg)), p(t_alg)), V(t_alg)) :)") (("1" (NAME-REPLACE "new_fix_pnt_eq_lst_alg" "append(new_fix_pnt_eq_alg, x!2)") (("1" (INST -1 "cdr(x!1)" "new_fix_pnt_eq_lst_alg") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 4) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 3) (("1" (ASSERT) (("1" (REVEAL 2) (("1" (LIFT-IF) (("1" (REVEAL -8) (("1" (HIDE 1) (("1" (SPLIT) (("1" (REVEAL 2) (("1" (ASSERT) (("1" (PROP) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (REVEAL -6) (("2" (ASSERT) (("2" (REVEAL -5) (("2" (ASSERT) (("2" (HIDE -1 -2 -3 -4 -6 -7 -8 2) (("2" (EXPAND "new_fix_pnt_eq_lst_alg") (("2" (EXPAND "new_fix_pnt_eq_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("1" (HIDE -1 -3 -4) (("1" (REVEAL 3) (("1" (EXPAND "apply_sub_prb_lst" -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -4) (("2" (EXPAND "new_fix_pnt_eq_lst_alg") (("2" (REWRITE "fix_pnt2unif_prb_append") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "new_fix_pnt_eq_alg") (("2" (EXPAND "fix_pnt2unif_prb" 1) (("2" (EXPAND "fix_pnt2unif_prb" 1) (("2" (REWRITE "append_null") (("2" (REVEAL 3) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (HIDE 1 2) (("2" (EXPAND "apply_sub_prb_lst") (("2" (EXPAND "apply_sub_prb_lst" 1) (("2" (REWRITE "append_null") (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -17 -18) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REVEAL -10 -13) (("2" (REPLACE -1 -3 RL) (("2" (REPLACE -2 -3 RL) (("2" (CASE "V(s_alg) = V(t_alg)") (("1" (REPLACE -1 -4) (("1" (LEMMA "ext_reverse_alpha") (("1" (REWRITE "alpha_symmetric" -5) (("1" (LEMMA "Subs_perm_Var_aux") (("1" (INST -1 "V(t_alg)" "p(s_alg)" "sigma1") (("1" (REPLACE -1 -6 NIL T) (("1" (INST? -1) (("1" (REPLACE -1 -5) (("1" (REWRITE "Subs_perm_comm" -5 :DIR RL) (("1" (EXPAND "ext" -5) (("1" (REWRITE "alpha_symmetric" -5) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 2) (("2" (REVEAL -13) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1) (("3" (REVEAL 3) (("3" (EXPAND "new_fix_pnt_eq_lst_alg") (("3" (EXPAND "new_fix_pnt_eq_alg") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "vars_lst" -1 1) (("3" (LIFT-IF) (("3" (PROP) (("3" (REWRITE "fix_pnt2unif_prb_append") (("3" (REWRITE "vars_lst_append" 3) (("3" (HIDE 1 2) (("3" (REVEAL -6 -9 -13 -14) (("3" (REPLACE -3 -5 NIL T) (("3" (REPLACE -3 -4 NIL T) (("3" (REPLACE -1 -3 RL T) (("3" (REPLACE -1 -2 RL T) (("3" (EXPAND "fix_pnt2unif_prb" 1 1) (("3" (EXPAND "fix_pnt2unif_prb" 1 1) (("3" (REWRITE "append_null") (("3" (EXPAND "vars_lst" 1 2) (("3" (EXPAND* "disjoint?" "empty?") (("3" (SKEEP) (("3" (INST -1 "x") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC4") (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "p(t_alg)" "V(t_alg)") (("1" (PROP) (("1" (INST -1 "new_fix_pnt_eq_alg") (("1" (PROP) (("1" (INST -1 "new_fix_pnt_eq_lst_alg") (("1" (PROP) (("1" (EXPAND "new_fix_pnt_eq_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_fix_pnt_eq_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -9) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -10) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -11) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -12) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -5) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -2) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 -5 2 3 4) (("2" (LEMMA "suf_cond_term_is_sub") (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -4 -6 -7) (("2" (REVEAL 3) (("2" (EXPAND "apply_sub_prb_lst" -4) (("2" (LIFT-IF) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE 1 2) (("2" (EXPAND "alpha_eq_lst?" -1) (("2" (PROP) (("2" (HIDE -2 -3) (("2" (REVEAL -10 -11) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REPLACE -4 -1 RL) (("2" (INST? -2) (("2" (PROP) (("2" (HIDE -1 -3 2) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "unit?(t_alg)") (("1" (CASE "unit?(s_alg)") (("1" (HIDE 5) (("1" (HIDE -1 -2 1 2 3 4) (("1" (INST -1 "cdr(x!1)" "x!2") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 5) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 4) (("1" (ASSERT) (("1" (REVEAL 3) (("1" (LIFT-IF) (("1" (SPLIT 3) (("1" (PROP) NIL NIL) ("2" (FLATTEN) (("2" (REVEAL 2) (("2" (HIDE 4) (("2" (HIDE 2) (("2" (SPLIT) (("1" (PROP) NIL NIL) ("2" (FLATTEN) (("2" (HIDE 1 3) (("2" (REVEAL 1) (("2" (SPLIT) (("1" (PROP) NIL NIL) ("2" (FLATTEN) (("2" (REVEAL -4) (("2" (PROP) (("2" (REVEAL -3) (("2" (HIDE -2 -3 -4 -5 -6 -7 2 3 4 5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -1 -3 -4) (("2" (REVEAL 4) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1) (("3" (LEMMA "valid_quadruple?_cdr") (("3" (REVEAL 4) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC5") (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (REVEAL -6) (("1" (ASSERT) NIL NIL)) NIL) ("2" (REVEAL -7) (("2" (ASSERT) NIL NIL)) NIL) ("3" (REVEAL 3) (("3" (ASSERT) NIL NIL)) NIL) ("4" (EXPAND "s_alg") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 4) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 4) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -4) (("2" (HIDE 2 3 4 5 6) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -2 -4 -5) (("2" (REVEAL 3) (("2" (LEMMA "alpha_Subs_ord") (("2" (REVEAL 4) (("2" (EXPAND "apply_sub_prb_lst" -3) (("2" (LIFT-IF) (("2" (HIDE 2) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -7 -8) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (EXPAND "alpha_eq_lst?" -1) (("2" (PROP) (("2" (HIDE -2) (("2" (INST -2 "Nabla" "s_alg" "sigma1" "t_alg") (("2" (PROP) (("1" (REVEAL 3) (("1" (ASSERT) (("1" (HIDE -2 -3 1 2 3 4) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 1 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE -2 1 2 3) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "pair?(t_alg)") (("1" (HIDE 6) (("1" (HIDE -2) (("1" (CASE "pair?(s_alg)") (("1" (HIDE 1 2 3 4 5) (("1" (LEMMA "term_pair_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST-CP -1 "s_alg") (("1" (HIDE -1) (("1" (NAME-REPLACE "unif_prb1_alg" "(: (term1(t_alg), term1(s_alg)) :)") (("1" (NAME-REPLACE "unif_prb2_alg" "(: (term2(t_alg), term2(s_alg)) :)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(append(unif_prb1_alg, unif_prb2_alg), cdr(x!1))") (("1" (REVEAL -5) (("1" (INST -1 "new_unif_prb_lst_alg" "x!2") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1") (("1" (HIDE -2 -3 -4 -5 -6 -7) (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 6) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 5) (("1" (ASSERT) (("1" (HIDE 1) (("1" (REVEAL 4) (("1" (HIDE 1) (("1" (SPLIT) (("1" (REVEAL 4) (("1" (PROP) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 1) (("2" (REVEAL 3) (("2" (ASSERT) (("2" (HIDE 1) (("2" (REVEAL 2) (("2" (ASSERT) (("2" (REVEAL 1) (("2" (ASSERT) (("2" (REVEAL -4) (("2" (ASSERT) (("2" (REVEAL -3) (("2" (ASSERT) (("2" (HIDE -1 -2 -4 1 2) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (EXPAND "unif_prb1_alg") (("2" (EXPAND "unif_prb2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -5) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("1" (HIDE -1 -3 -4) (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (EXPAND "unif_prb1_alg") (("1" (EXPAND "unif_prb2_alg") (("1" (EXPAND "apply_sub_prb_lst" -1) (("1" (LIFT-IF) (("1" (REVEAL 5) (("1" (PROP) (("1" (HIDE 1 2) (("1" (REWRITE "alpha_eq_lst?_append" -1) (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "alpha_eq_lst?" -1) (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL -6 -7 -18 -19) (("1" (REPLACE -3 -5 NIL T) (("1" (REPLACE -3 -4 NIL T) (("1" (REPLACE -1 -3 RL T) (("1" (REPLACE -1 -2 RL T) (("1" (REWRITE "Subs_pair") (("1" (REWRITE "Subs_pair") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 -4) (("2" (REVEAL 5) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REVEAL -6) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1) (("3" (EXPAND "disjoint?") (("3" (EXPAND "empty?") (("3" (SKEEP) (("3" (INST -2 "x") (("3" (EXPAND "new_unif_prb_lst_alg") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "vars_lst" 1 1) (("3" (LIFT-IF) (("3" (REVEAL 5) (("3" (PROP) (("3" (HIDE 1 3) (("3" (REVEAL -3 -4 -15 -16) (("3" (REPLACE -3 1 NIL T) (("3" (REPLACE -3 1 NIL T) (("3" (REPLACE -1 1 RL T) (("3" (REPLACE -1 1 RL T) (("3" (EXPAND "unif_prb1_alg") (("3" (EXPAND "unif_prb2_alg") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC6") (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "term1(t_alg)" "term2(t_alg)") (("1" (PROP) (("1" (INST -1 "unif_prb1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb2_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -7) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -6) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -8) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 4) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 5) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 2 3 4 6) (("2" (LEMMA "alpha_Subs_ord") (("2" (EXPAND "sol_prb_quad?") (("2" (FLATTEN -3) (("2" (HIDE -3 -5 -6) (("2" (REVEAL 4) (("2" (EXPAND "apply_sub_prb_lst" -3) (("2" (HIDE 3) (("2" (LIFT-IF) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "alpha_eq_lst?" -1) (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -8 -9) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (INST? -2) (("2" (PROP) (("1" (REVEAL 1) (("1" (HIDE -2 -3 3 4 5) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 1 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE -2 1 2 3) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "abs?(t_alg)") (("1" (HIDE -2 7) (("1" (CASE "NOT abs?(s_alg)") (("1" (HIDE -3 2 3 4 5 7) (("1" (LEMMA "alpha_Subs_ord") (("1" (EXPAND "sol_prb_quad?") (("1" (HIDE 2) (("1" (PROP) (("1" (HIDE -3 -5 -6) (("1" (REVEAL -6 -7 6) (("1" (EXPAND "apply_sub_prb_lst" -5) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE 1 2) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "alpha_eq_lst?" -1) (("1" (PROP) (("1" (HIDE -2) (("1" (REPLACE -2 -1 NIL T) (("1" (REPLACE -2 -1 NIL T) (("1" (INST? -2) (("1" (PROP) (("1" (REVEAL 1) (("1" (HIDE -2 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE -2 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "term_abs_eta") (("2" (INST -1 "s_alg") (("2" (LEMMA "term_abs_eta") (("2" (INST -1 "t_alg") (("2" (CASE "abstr(t_alg) = abstr(s_alg)") (("1" (NAME-REPLACE "new_unif_prb_alg" "(: (body(t_alg), body(s_alg)) :)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(new_unif_prb_alg, cdr(x!1))") (("1" (HIDE -1 -2 -3 -4 -5 1 2 3 4 5 6) (("1" (REVEAL -9) (("1" (INST -1 "new_unif_prb_lst_alg" "x!2") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 7) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 6) (("1" (ASSERT) (("1" (HIDE 1) (("1" (SPLIT) (("1" (REVEAL 5) (("1" (PROP) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL 1 2 3 4) (("2" (ASSERT) (("2" (REVEAL -5 -6) (("2" (ASSERT) (("2" (REVEAL -2) (("2" (ASSERT) (("2" (HIDE -1 -2 -3 -5 -6 -7 1 2 3 4 5) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -1 -3 -4) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (EXPAND "new_unif_prb_alg") (("2" (REVEAL 6) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (REVEAL -6 -7 -8 -15 -16) (("2" (GRIND) (("2" (REPLACE -1 -2 RL) (("2" (HIDE -4 -5) (("2" (HIDE 1) (("2" (REPLACE -2 -4 RL) (("2" (REPLACE -3 -4 RL) (("2" (REPLACE -1 -4 NIL T) (("2" (REWRITE "Subs_abs") (("2" (REWRITE "Subs_abs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1) (("3" (EXPAND "disjoint?") (("3" (EXPAND "empty?") (("3" (SKEEP) (("3" (INST -2 "x") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (REVEAL 6) (("3" (EXPAND "vars_lst" 2 1) (("3" (LIFT-IF) (("3" (PROP) (("3" (HIDE 1 3) (("3" (REVEAL -6 -7 -14 -15) (("3" (REPLACE -3 1 NIL T) (("3" (REPLACE -3 1 NIL T) (("3" (REPLACE -1 1 RL T) (("3" (REPLACE -1 1 RL T) (("3" (EXPAND "new_unif_prb_lst_alg") (("3" (EXPAND "new_unif_prb_alg") (("3" (REWRITE "vars_lst_append") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC7") (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "abstr(t_alg)" "body(t_alg)") (("1" (PROP) (("1" (INST -1 "new_unif_prb_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -6) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -9) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -7) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -10) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 5) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 6) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 6) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME-REPLACE "bool1_alg" "fresh?(abstr(t_alg), body(s_alg))`2") (("2" (NAME-REPLACE "Delta1_alg" "fresh?(abstr(t_alg), body(s_alg))`1") (("2" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("2" (NAME-REPLACE "new_unif_prb_alg" "(: (body(t_alg), ext((: (abstr(t_alg), abstr(s_alg)) :)) (body(s_alg))) :)") (("2" (NAME-REPLACE "new_unif_prb_lst_alg" "append(new_unif_prb_alg, cdr(x!1))") (("1" (HIDE-ALL-BUT -5) (("1" (CASE "bool1_alg") (("1" (REVEAL -12) (("1" (INST -1 "new_unif_prb_lst_alg" "x!2") (("1" (INST -1 "new_Delta_alg" "Nabla" "sigma" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 8) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 7) (("1" (SPLIT) (("1" (PROP) NIL NIL) ("2" (HIDE 2) (("2" (FLATTEN) (("2" (HIDE 1) (("2" (SPLIT) (("1" (REVEAL 6) (("1" (PROP) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 1) (("2" (REVEAL 5 4 3 2 1) (("2" (ASSERT) (("2" (REVEAL -5) (("2" (ASSERT) (("2" (REVEAL -4) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (EXPAND "bool1_alg" -5) (("2" (ASSERT) (("2" (HIDE -1 -2 -4 -5 -6 1 2 3 4 5) (("2" (EXPAND "new_Delta_alg") (("2" (EXPAND "Delta1_alg") (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("1" (EXPAND "new_Delta_alg") (("1" (REWRITE "fresh_subs_append_context") (("1" (PROP) (("1" (EXPAND "Delta1_alg") (("1" (HIDE -4 -5) (("1" (REVEAL 7) (("1" (EXPAND "apply_sub_prb_lst" -3) (("1" (LIFT-IF) (("1" (PROP) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2 1 2) (("1" (REVEAL -5 -6 -17 -18) (("1" (REPLACE -3 -5 NIL T) (("1" (REPLACE -3 -4 NIL T) (("1" (REPLACE -1 -3 RL T) (("1" (REPLACE -1 -2 RL T) (("1" (EXPAND "alpha_eq_lst?" -1) (("1" (PROP) (("1" (HIDE -2) (("1" (REWRITE "Subs_abs") (("1" (REWRITE "Subs_abs") (("1" (EXPAND "alpha" -1) (("1" (REVEAL 1) (("1" (PROP) (("1" (HIDE -2) (("1" (LEMMA "aux_lemma_fresh_sub1") (("1" (INST? -1) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 -5) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (EXPAND "new_unif_prb_alg") (("2" (REVEAL 7) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE 1 3) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL -19 -20) (("1" (REPLACE -1 -3 NIL T) (("1" (REPLACE -1 -2 NIL T) (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (REWRITE "append_null") (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL -8 -9) (("1" (REPLACE -1 -3 RL T) (("1" (REPLACE -1 -2 RL T) (("1" (REWRITE "Subs_abs") (("1" (REWRITE "Subs_abs") (("1" (REVEAL 1) (("1" (EXPAND "alpha" -1) (("1" (PROP) (("1" (ASSERT) (("1" (HIDE -1 1 2) (("1" (REWRITE "Subs_perm_comm") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 1 3) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REVEAL -6 7) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1 -3 -4) (("3" (EXPAND "disjoint?") (("3" (EXPAND "empty?") (("3" (SKEEP) (("3" (INST -2 "x") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "vars_lst" 2 1) (("3" (LIFT-IF) (("3" (PROP) (("3" (EXPAND "new_unif_prb_lst_alg") (("3" (REWRITE "vars_lst_append") (("3" (HIDE 1 3) (("3" (EXPAND "new_unif_prb_alg") (("3" (REVEAL -6 -7 -18 -19) (("3" (REPLACE -3 1 NIL T) (("3" (REPLACE -3 1 NIL T) (("3" (REPLACE -1 1 RL T) (("3" (REPLACE -1 1 RL T) (("3" (EXPAND "vars_lst" -1 1) (("3" (REWRITE "ext_preserves_Vars") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC8") (("4" (INST -1 "Delta" "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "abstr(t_alg)" "body(t_alg)") (("1" (PROP) (("1" (INST -1 "Delta1_alg" "bool1_alg") (("1" (PROP) (("1" (INST -1 "new_Delta_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_Delta_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "bool1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (EXPAND "Delta1_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -8) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -6) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -9) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 6) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 7) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (REVEAL 7) (("2" (EXPAND "apply_sub_prb_lst" -2) (("2" (LIFT-IF) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2 1 2) (("2" (REVEAL -2 -3 -14 -15 1) (("2" (REPLACE -3 -5 NIL T) (("2" (REPLACE -3 -4 NIL T) (("2" (EXPAND "alpha_eq_lst?" -3) (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "bool1_alg") (("2" (REPLACE -2 -1 RL) (("2" (REPLACE -3 -1 RL) (("2" (REWRITE "Subs_abs") (("2" (REWRITE "Subs_abs") (("2" (EXPAND "alpha" -1) (("2" (PROP) (("2" (LEMMA "Subs_fresh") (("2" (INST? -1) (("2" (INST -1 "sigma1") (("2" (PROP) (("2" (HIDE 2 3 4) (("2" (LEMMA "fresh?_complete") (("2" (INST? -1) (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 7) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "app?(t_alg)") (("1" (HIDE -2 8) (("1" (LEMMA "term_app_eta") (("1" (INST -1 "t_alg") (("1" (CASE "NOT app?(s_alg) OR sym(t_alg) /= sym(s_alg)") (("1" (HIDE -3 -5 1 2 3 4 5 7) (("1" (ASSERT) (("1" (LEMMA "alpha_Subs_ord") (("1" (EXPAND "sol_prb_quad?") (("1" (FLATTEN -4) (("1" (HIDE -4 -6 -7) (("1" (REVEAL 6) (("1" (EXPAND "apply_sub_prb_lst" -4) (("1" (LIFT-IF) (("1" (HIDE 2) (("1" (PROP) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2 1 3) (("1" (REVEAL -9 -10) (("1" (REPLACE -1 -3 NIL T) (("1" (REPLACE -1 -2 NIL T) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (HIDE -2) (("1" (INST? -2) (("1" (PROP) (("1" (REVEAL 1) (("1" (ASSERT) (("1" (HIDE -2 -3 -4 2) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE -2 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "term_app_eta") (("2" (INST -1 "s_alg") (("2" (HIDE 1 3) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -3) (("2" (REVEAL -9 -10) (("2" (REPLACE -1 -4 NIL T) (("2" (REPLACE -1 -3 NIL T) (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (HIDE -3) (("2" (REPLACE -2 -1 RL T) (("2" (REPLACE -2 -1 RL T) (("2" (REWRITE "Subs_app") (("2" (REWRITE "Subs_app") (("2" (EXPAND "alpha" -1) (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 8) (("2" (REVEAL -1) (("2" (CASE "app?(s_alg)") (("1" (NAME-REPLACE "new_unif_prb_alg" "(: (arg(t_alg), arg(s_alg)) :)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(new_unif_prb_alg, cdr(x!1))") (("1" (LEMMA "term_app_eta") (("1" (INST -1 "s_alg") (("1" (HIDE -1 -2 -3) (("1" (REVEAL -10) (("1" (INST -1 "new_unif_prb_lst_alg" "x!2") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 8) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (HIDE -2) (("1" (HIDE -1) (("1" (ASSERT) (("1" (HIDE 2) (("1" (SPLIT) (("1" (REVEAL 8) (("1" (PROP) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 1) (("2" (REVEAL 3 4 5 6 7) (("2" (ASSERT) (("2" (HIDE 1 2 3 4 5) (("2" (REVEAL -9) (("2" (ASSERT) (("2" (SPLIT) (("1" (REVEAL 2) (("1" (PROP) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -1 -2) (("2" (PROP) (("2" (HIDE -2 -3 -4 -5) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -8) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -1 -3 -4) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "new_unif_prb_alg") (("2" (EXPAND "apply_sub_prb_lst") (("2" (EXPAND "apply_sub_prb_lst") (("2" (REWRITE "append_null") (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -7 -11 -17 -18) (("2" (REPLACE -3 -5 NIL T) (("2" (REPLACE -3 -4 NIL T) (("2" (REPLACE -1 -3 RL T) (("2" (REPLACE -1 -2 RL T) (("2" (REWRITE "Subs_app") (("2" (REWRITE "Subs_app") (("2" (EXPAND "alpha" -1) (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REVEAL -9) (("3" (HIDE 2) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1) (("3" (EXPAND* "disjoint?" "empty?") (("3" (SKEEP) (("3" (INST -2 "x") (("3" (EXPAND "new_unif_prb_lst_alg") (("3" (REVEAL 1) (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "vars_lst" 2 1) (("3" (LIFT-IF) (("3" (PROP) (("3" (HIDE 1 3) (("3" (EXPAND "new_unif_prb_alg") (("3" (REVEAL -14 -15 -4 -8) (("3" (REPLACE -3 1 NIL T) (("3" (REPLACE -3 1 NIL T) (("3" (REPLACE -1 1 RL T) (("3" (REPLACE -1 1 RL T) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (LEMMA "c_unify_TCC9") (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "sym(t_alg)" "arg(t_alg)") (("1" (PROP) (("1" (INST -1 "new_unif_prb_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -7) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL 2) (("3" (REVEAL -7) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (REVEAL -10) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -11) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 8) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (HIDE 3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "c_app?(t_alg)") (("1" (HIDE -2 9) (("1" (LEMMA "term_c_app_eta") (("1" (INST -1 "t_alg") (("1" (CASE "NOT c_app?(s_alg) OR c_sym(t_alg) /= c_sym(s_alg)") (("1" (HIDE -3 -5 1 2 3 4 5 6 8) (("1" (LEMMA "alpha_Subs_ord") (("1" (REVEAL 7) (("1" (HIDE 2) (("1" (EXPAND "sol_prb_quad?") (("1" (FLATTEN -4) (("1" (HIDE -4 -6 -7) (("1" (EXPAND "apply_sub_prb_lst" -4) (("1" (LIFT-IF) (("1" (SPLIT -4) (("1" (PROP) NIL NIL) ("2" (FLATTEN -1) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (FLATTEN -1) (("2" (HIDE -2 1 2) (("2" (EXPAND "alpha_eq_lst?" -1) (("2" (HIDE -3) (("2" (PROP) (("2" (REVEAL -10 -11) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (HIDE -2) (("2" (INST? -2) (("2" (PROP) (("1" (REVEAL 1) (("1" (HIDE -2 -3) (("1" (ASSERT) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -3) (("2" (PROP) (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (CASE "c_app?(s_alg)") (("1" (LEMMA "term_c_app_eta") (("1" (INST -1 "s_alg") (("1" (REPLACE -5 -4 RL T) (("1" (REPLACE -1 -4 RL T) (("1" (HIDE -1 -2) (("1" (CASE "c_arg(t_alg) = pair(term1(c_arg(t_alg)), term2(c_arg(t_alg)))") (("1" (REPLACE -1 -2) (("1" (REWRITE "Subs_c_app") (("1" (CASE "c_arg(s_alg) = pair(term1(c_arg(s_alg)), term2(c_arg(s_alg)))") (("1" (REPLACE -1 -3) (("1" (REWRITE "Subs_c_app") (("1" (EXPAND "alpha" -3) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (TYPEPRED "c_arg(s_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 2) (("2" (TYPEPRED "c_arg(t_alg)") (("2" (HIDE -1) (("2" (GRIND) (("2" (LEMMA "term_pair_eta") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "c_app?(s_alg)") (("1" (LEMMA "term_c_app_eta") (("1" (INST -1 "s_alg") (("1" (HIDE -5 -6 1 2 3 4 5 6 7 8 9) (("1" (CASE "c_arg(t_alg) = pair(term1(c_arg(t_alg)), term2(c_arg(t_alg)))") (("1" (CASE "c_arg(s_alg) = pair(term1(c_arg(s_alg)), term2(c_arg(s_alg)))") (("1" (REVEAL -1) (("1" (NAME-REPLACE "unif_prb1_1_alg" "(: (term1(c_arg(t_alg)), term1(c_arg(s_alg))) :)") (("1" (NAME-REPLACE "unif_prb2_2_alg" "(: (term2(c_arg(t_alg)), term2(c_arg(s_alg))) :)") (("1" (NAME-REPLACE "unif_prb_lst1_alg" "append(append(unif_prb1_1_alg, unif_prb2_2_alg),cdr(x!1))") (("1" (NAME-REPLACE "unif_prb1_2_alg" "(: (term1(c_arg(t_alg)), term2(c_arg(s_alg))) :)") (("1" (NAME-REPLACE "unif_prb2_1_alg" "(: (term2(c_arg(t_alg)), term1(c_arg(s_alg))) :)") (("1" (NAME-REPLACE "unif_prb_lst2_alg" "append(append(unif_prb1_2_alg, unif_prb2_1_alg),cdr(x!1))") (("1" (NAME-REPLACE "sol1_alg" "c_unify(Delta, sigma, unif_prb_lst1_alg, x!2)") (("1" (NAME-REPLACE "sol2_alg" "c_unify(Delta, sigma, unif_prb_lst2_alg, x!2)") (("1" (HIDE-ALL-BUT -1) (("1" (REVEAL 9) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -1 -3 -4) (("1" (EXPAND "apply_sub_prb_lst" -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE 1 2) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL -5 -6 -7 -9 -23 -24) (("1" (REPLACE -5 -7 NIL T) (("1" (REPLACE -5 -6 NIL T) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (HIDE -2) (("1" (REPLACE -4 -1 RL) (("1" (REPLACE -5 -1 RL) (("1" (REPLACE -2 -1) (("1" (REPLACE -3 -1) (("1" (REWRITE "Subs_c_app") (("1" (REWRITE "Subs_c_app") (("1" (REPLACE -2 -1 RL) (("1" (REPLACE -3 -1 RL) (("1" (EXPAND "alpha" -1) (("1" (PROP) (("1" (ASSERT) (("1" (HIDE -1 -2 -3 -4 -5 -6 -7) (("1" (REVEAL -26) (("1" (INST -1 "unif_prb_lst1_alg" "x!2") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 10) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 9) (("1" (ASSERT) (("1" (HIDE -2 1) (("1" (REWRITE "append_member") (("1" (PROP) (("1" (ASSERT) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (EXPAND "unif_prb1_1_alg") (("1" (EXPAND "unif_prb2_2_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -24) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -1 -3 -4) (("2" (EXPAND "unif_prb_lst1_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (REVEAL -6) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (EXPAND "unif_prb1_1_alg") (("2" (EXPAND "unif_prb2_2_alg") (("2" (HIDE -1 -2) (("2" (EXPAND "apply_sub_prb_lst") (("2" (EXPAND "apply_sub_prb_lst") (("2" (REWRITE "append_null") (("2" (REWRITE "append_null") (("2" (REVEAL -3 -4) (("2" (REVEAL -11 -12) (("2" (REPLACE -1 -3) (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (REPLACE -1 -4) (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (REPLACE -2 -3) (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (REPLACE -2 -4) (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REVEAL -25) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1) (("3" (EXPAND* "disjoint?" "empty?") (("3" (SKEEP) (("3" (INST -2 "x") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "unif_prb_lst1_alg") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "unif_prb1_1_alg") (("3" (EXPAND "unif_prb2_2_alg") (("3" (REVEAL 9) (("3" (EXPAND "vars_lst" 2 1) (("3" (LIFT-IF) (("3" (PROP) (("3" (HIDE 1 3) (("3" (REVEAL -12 -13 -14 -16 -30 -31) (("3" (REPLACE -5 1 NIL T) (("3" (REPLACE -5 1 NIL T) (("3" (REPLACE -3 1 RL T) (("3" (REPLACE -3 1 RL T) (("3" (REPLACE -1 1 NIL T) (("3" (REPLACE -1 1 NIL T) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC10") (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "c_sym(t_alg)" "c_arg(t_alg)") (("1" (PROP) (("1" (INST -1 "unif_prb1_1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb2_2_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb2_2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -17) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -17 1) (("3" (ASSERT) NIL NIL)) NIL) ("4" (REVEAL -18) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 8) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 9) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 -5 -6 -7) (("2" (REVEAL -26) (("2" (INST -1 "unif_prb_lst2_alg" "x!2") (("2" (INST -1 "Delta" "Nabla" "sigma" "sigma1") (("2" (PROP) (("1" (SKEEP) (("1" (HIDE -2) (("1" (REVEAL 10) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (REVEAL 9) (("1" (ASSERT) (("1" (HIDE 1) (("1" (SPLIT) (("1" (REVEAL 8) (("1" (PROP) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (REVEAL -16) (("2" (ASSERT) (("2" (HIDE 1) (("2" (REVEAL 1) (("2" (SPLIT) (("1" (PROP) NIL NIL) ("2" (FLATTEN 1) (("2" (HIDE 2) (("2" (REWRITE "append_member") (("2" (PROP) (("1" (HIDE -1 -2 -3) (("1" (ASSERT) (("1" (EXPAND "unif_prb_lst2_alg") (("1" (EXPAND* "unif_prb1_2_alg" "unif_prb2_1_alg") NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -24) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -1 -3 -4) (("2" (EXPAND "unif_prb_lst2_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (EXPAND "unif_prb1_2_alg") (("2" (EXPAND "unif_prb2_1_alg") (("2" (HIDE -1) (("2" (REVEAL -3 -4 -7) (("2" (REVEAL -11 -12) (("2" (REPLACE -1 -3) (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (REPLACE -1 -4) (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (REPLACE -2 -3) (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (REPLACE -2 -4) (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (HIDE -1 -2 -5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REVEAL -25) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1) (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND* "disjoint?" "empty?") (("3" (SKEEP) (("3" (INST -2 "x") (("3" (EXPAND "unif_prb_lst2_alg") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "unif_prb1_2_alg") (("3" (EXPAND "unif_prb2_1_alg") (("3" (REVEAL 9) (("3" (EXPAND "vars_lst" 2 1) (("3" (LIFT-IF) (("3" (PROP) (("3" (HIDE 1 3) (("3" (REVEAL -12 -13 -14 -16 -30 -31) (("3" (REPLACE -5 1 NIL T) (("3" (REPLACE -5 1 NIL T) (("3" (REPLACE -3 1 RL) (("3" (REPLACE -4 1 RL) (("3" (HIDE -3 -4) (("3" (REPLACE -1 1 NIL T) (("3" (REPLACE -1 1 NIL T) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC11") (("4" (INST -1 "Delta" "sigma" "x!1" "x!2" "c_unify") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "c_sym(t_alg)" "c_arg(t_alg)") (("1" (PROP) (("1" (INST -1 "unif_prb1_1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb2_2_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (INST -1 "sol1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb1_2_alg") (("1" (PROP) (("1" (INST -1 "unif_prb2_1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst2_alg") (("1" (PROP) (("1" (EXPAND "unif_prb_lst2_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb2_1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "sol1_alg") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb2_2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -17) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -8) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -18) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -19) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 8) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 9) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 9) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 9) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c_arg(s_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c_arg(t_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4 5 6 7 8 9 10) (("2" (HIDE -4) (("2" (EXPAND "sol_prb_quad?" -3) (("2" (PROP) (("2" (HIDE -3 -5 -6) (("2" (REVEAL 9) (("2" (EXPAND "apply_sub_prb_lst" -3) (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 2) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -9 -10) (("2" (LEMMA "alpha_Subs_ord") (("2" (REPLACE -2 -4 NIL T) (("2" (REPLACE -2 -3 NIL T) (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -2 -3 -4 2) (("1" (REVEAL 9) (("1" (ASSERT) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE -2 -3 1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 10) (("2" (HIDE 8) (("2" (HIDE -1 -2 -3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 3) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((ATOM? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (TERM_AT_ETA FORMULA-DECL NIL TERM_ADT NIL) (AT ADT-CONSTRUCTOR-DECL "[atom -> (atom?)]" TERM_ADT NIL) (A ADT-ACCESSOR-DECL "[(atom?) -> atom]" TERM_ADT NIL) (VALID_QUADRUPLE?_CDR FORMULA-DECL NIL NOMINALUNIF NIL) (C_UNIFY_TCC2 TERMINATION-TCC NIL NOMINALUNIF NIL) (X!1 SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (SUBS_ATOM2 FORMULA-DECL NIL SUBSTITUTION NIL) (ALPHA DEF-DECL "bool" ALPHA_EQUIVALENCE NIL) (SUBS_ATOM FORMULA-DECL NIL SUBSTITUTION NIL) (UNIT? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (ALPHA_SUBS_ORD FORMULA-DECL NIL SUBSTITUTION NIL) (ORD CONST-DECL "upto(6)" TERM_ADT NIL) (WELL_BEHAVED? CONST-DECL "bool" SUBSTITUTION NIL) (C_UNIFY_TCC5 TERMINATION-TCC NIL NOMINALUNIF NIL) (ABS? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (BODY ADT-ACCESSOR-DECL "[(abs?) -> term]" TERM_ADT NIL) (FRESH? DEF-DECL "[fresh_context, bool]" FRESHNESS NIL) (BOOL1_ALG SKOLEM-CONST-DECL "bool" NOMINALUNIF NIL) (DELTA1_ALG SKOLEM-CONST-DECL "fresh_context" NOMINALUNIF NIL) (NEW_UNIF_PRB_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (NEW_DELTA_ALG SKOLEM-CONST-DECL "list[[atom, variable]]" NOMINALUNIF NIL) (AUX_LEMMA_FRESH_SUB1 FORMULA-DECL NIL SUBSTITUTION NIL) (C_UNIFY_TCC8 TERMINATION-TCC NIL NOMINALUNIF NIL) (FRESH?_COMPLETE FORMULA-DECL NIL FRESHNESS NIL) (SUBS_FRESH FORMULA-DECL NIL SUBSTITUTION NIL) (NEW_UNIF_PRB_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (SUBS_ABS FORMULA-DECL NIL SUBSTITUTION NIL) (C_UNIFY_TCC7 TERMINATION-TCC NIL NOMINALUNIF NIL) (ABSTR ADT-ACCESSOR-DECL "[(abs?) -> atom]" TERM_ADT NIL) (TERM_ABS_ETA FORMULA-DECL NIL TERM_ADT NIL) (C_APP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (TERM_C_APP_ETA FORMULA-DECL NIL TERM_ADT NIL) (C_SYM ADT-ACCESSOR-DECL "[(c_app?) -> commutative_symbol]" TERM_ADT NIL) (C_ARG ADT-ACCESSOR-DECL "[(c_app?) -> pair]" TERM_ADT NIL) (PAIR ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" TERM_ADT NIL) (SUBS_C_APP FORMULA-DECL NIL SUBSTITUTION NIL) (UNIF_PRB1_2_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (UNIF_PRB2_1_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (UNIF_PRB_LST2_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (RESTRICT CONST-DECL "R" RESTRICT NIL) (SOL1_ALG SKOLEM-CONST-DECL "list[nominal_sol_typ]" NOMINALUNIF NIL) (C_UNIFY_TCC11 TERMINATION-TCC NIL NOMINALUNIF NIL) (C_UNIFY_TCC10 TERMINATION-TCC NIL NOMINALUNIF NIL) (UNIF_PRB_LST1_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (UNIF_PRB2_2_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (UNIF_PRB1_1_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (APPEND_MEMBER FORMULA-DECL NIL STRUCTURE_EXTRA NIL) (C_UNIFY_TCC9 TERMINATION-TCC NIL NOMINALUNIF NIL) (NEW_UNIF_PRB_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (ARG ADT-ACCESSOR-DECL "[(app?) -> term]" TERM_ADT NIL) (SUBS_APP FORMULA-DECL NIL SUBSTITUTION NIL) (SYM ADT-ACCESSOR-DECL "[(app?) -> symbol]" TERM_ADT NIL) (/= CONST-DECL "boolean" NOTEQUAL NIL) (OR CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (TERM_APP_ETA FORMULA-DECL NIL TERM_ADT NIL) (APP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (TERM_PAIR_ETA FORMULA-DECL NIL TERM_ADT NIL) (TERM1 ADT-ACCESSOR-DECL "[pair -> term]" TERM_ADT NIL) (PAIR TYPE-EQ-DECL NIL TERM_ADT NIL) (C_UNIFY_TCC6 TERMINATION-TCC NIL NOMINALUNIF NIL) (SUBS_PAIR FORMULA-DECL NIL SUBSTITUTION NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (UNIF_PRB2_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (UNIF_PRB1_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (TERM2 ADT-ACCESSOR-DECL "[pair -> term]" TERM_ADT NIL) (PAIR? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (C_UNIFY_TCC4 TERMINATION-TCC NIL NOMINALUNIF NIL) (EXT_REVERSE_ALPHA FORMULA-DECL NIL ALPHA_EQUIVALENCE NIL) (SUBS_PERM_VAR_AUX FORMULA-DECL NIL SUBSTITUTION NIL) (SUBS_PERM_COMM FORMULA-DECL NIL SUBSTITUTION NIL) (FIX_PNT2UNIF_PRB_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (NEW_FIX_PNT_EQ_LST_ALG SKOLEM-CONST-DECL "list[[list[[atom, atom]], variable]]" NOMINALUNIF NIL) (NEW_FIX_PNT_EQ_ALG SKOLEM-CONST-DECL "(cons?[[list[[atom, atom]], variable]])" NOMINALUNIF NIL) (SUF_COND_TERM_IS_SUB FORMULA-DECL NIL SUBSTITUTION NIL) (C_UNIFY_TCC3 TERMINATION-TCC NIL NOMINALUNIF NIL) (BOOL1_ALG SKOLEM-CONST-DECL "bool" NOMINALUNIF NIL) (NEW_SIGMA_ALG SKOLEM-CONST-DECL "list[[variable, term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (NEW_DELTA_ALG SKOLEM-CONST-DECL "list[[atom, variable]]" NOMINALUNIF NIL) (DELTA1_ALG SKOLEM-CONST-DECL "fresh_context" NOMINALUNIF NIL) (UNIF_PRB_LST1_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (UNIF_PRB_LST2_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (SIGMA1_ALG SKOLEM-CONST-DECL "(cons?[[variable, term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (P ADT-ACCESSOR-DECL "[(susp?) -> perm]" TERM_ADT NIL) (REVERSE DEF-DECL "list[T]" LIST_PROPS NIL) (EXT DEF-DECL "term" NOMINAL_TERM NIL) (CONS ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" LIST_ADT NIL) (FRESH_SUBS? DEF-DECL "[fresh_context, bool]" SUBSTITUTION NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (APPLY_SUB_PRB_LST DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (C_UNIFY_TCC1 TERMINATION-TCC NIL NOMINALUNIF NIL) (S_ALG SKOLEM-CONST-DECL "term[atom, perm, variable, symbol, commutative_symbol]" NOMINALUNIF NIL) (SUF_COND_IDEMPOTENT?_APPEND FORMULA-DECL NIL SUBSTITUTION NIL) (SUBS_ADD_ALG_WELL_BEHAVED? FORMULA-DECL NIL SUBSTITUTION NIL) (VARS_DOM_SUB_APPEND FORMULA-DECL NIL SUBSTITUTION NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (APPLY_SUB_ELIM_VAR FORMULA-DECL NIL NOMINALUNIF NIL) (APPEND_NULL FORMULA-DECL NIL LIST_PROPS NIL) (SUBSET? CONST-DECL "bool" SETS NIL) (T_ALG SKOLEM-CONST-DECL "term[atom, perm, variable, symbol, commutative_symbol]" NOMINALUNIF NIL) (VARS_LST_SUB_SUBSET FORMULA-DECL NIL NOMINALUNIF NIL) (SUF_COND_MORE_GEN_APPEND FORMULA-DECL NIL SUBSTITUTION NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (NONEMPTY_FINITE_UNION2 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (NEW_SIGMA_ALG SKOLEM-CONST-DECL "list[[variable, term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (APPLY_SUB_PRB_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (MORE_GEN_SUB? CONST-DECL "bool" SUBSTITUTION NIL) (UNIF_PRB_LST2_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (UNIF_PRB_LST1_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (APPLY_SUB_PRB_LST_CONS_CALLS_ADD FORMULA-DECL NIL NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (NEW_DELTA_ALG SKOLEM-CONST-DECL "list[[atom, variable]]" NOMINALUNIF NIL) (AUX_LEMMA_FRESH_SUB FORMULA-DECL NIL SUBSTITUTION NIL) (FRESH_SUBS_APPEND_CONTEXT FORMULA-DECL NIL SUBSTITUTION NIL) (DELTA1_ALG SKOLEM-CONST-DECL "fresh_context" NOMINALUNIF NIL) (BOOL1_ALG SKOLEM-CONST-DECL "bool" NOMINALUNIF NIL) (SUF_COND_IDEMPOTENT FORMULA-DECL NIL SUBSTITUTION NIL) (EXT_PRESERVES_VARS FORMULA-DECL NIL NOMINAL_TERM NIL) (REAL_GE_IS_TOTAL_ORDER NAME-JUDGEMENT "(total_order?[real])" REAL_PROPS NIL) (DISJOINT? CONST-DECL "bool" SETS NIL) (EMPTY? CONST-DECL "bool" SETS NIL) (INTERSECTION CONST-DECL "set" SETS NIL) (SINGLETON CONST-DECL "(singleton?)" SETS NIL) (UNION CONST-DECL "set" SETS NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (NONEMPTY_FINITE_UNION1 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (NONEMPTY_SINGLETON_FINITE APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (FINITE_INTERSECTION1 APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (VARS_RANGE_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (VARS_DOM_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (SIGMA1_ALG SKOLEM-CONST-DECL "(cons?[[variable, term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (SUBS DEF-DECL "term" SUBSTITUTION NIL) (ALPHA_EQ_LST?_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (* ADT-CONSTRUCTOR-DECL "[[perm, variable] -> (susp?)]" TERM_ADT NIL) (ALPHA_SYMMETRIC FORMULA-DECL NIL ALPHA_EQUIVALENCE NIL) (MEMBER CONST-DECL "bool" SETS NIL) (VARS_OCCURS FORMULA-DECL NIL NOMINAL_TERM NIL) (ALPHA_EQ_LST? DEF-DECL "bool" NOMINALUNIF NIL) (TERM_TIMES_ETA FORMULA-DECL NIL TERM_ADT NIL) (SUF_COND_MORE_GEN_NUC_SUB FORMULA-DECL NIL SUBSTITUTION NIL) (AUX_LEMMA_FRESH_SUB2 FORMULA-DECL NIL SUBSTITUTION NIL) (V ADT-ACCESSOR-DECL "[(susp?) -> variable]" TERM_ADT NIL) (OCCURS DEF-DECL "bool" NOMINAL_TERM NIL) (NOT CONST-DECL "[bool -> bool]" BOOLEANS NIL) (SUSP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (CAR ADT-ACCESSOR-DECL "[(cons?) -> T]" LIST_ADT NIL) (FRESH_CONTEXT TYPE-EQ-DECL NIL FRESHNESS NIL) (SUB TYPE-EQ-DECL NIL SUBSTITUTION NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (SOL_PRB_QUAD? CONST-DECL "bool" NOMINALUNIF NIL) (VALID_QUADRUPLE? CONST-DECL "bool" NOMINALUNIF NIL) (MEMBER DEF-DECL "bool" LIST_PROPS NIL) (FIX_PNT_EQ TYPE-EQ-DECL NIL ALPHA_EQUIVALENCE NIL) (NOMINAL_SOL_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (C_UNIFY DEF-DECL "list[nominal_sol_typ]" NOMINALUNIF NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (WELL_FOUNDED_LE FORMULA-DECL NIL ORDINALS NIL) (< DEF-DECL "bool" ORDINALS NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (LEX2 CONST-DECL "ordinal" LEX2 NIL) (ORDINAL NONEMPTY-TYPE-EQ-DECL NIL ORDINALS NIL) (ORDINAL? DEF-DECL "bool" ORDINALS NIL) (ORDSTRUCT TYPE-DECL NIL ORDSTRUCT_ADT NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (>= CONST-DECL "bool" REALS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (MEASURE_INDUCTION FORMULA-DECL NIL MEASURE_INDUCTION NIL) (WELL_FOUNDED? CONST-DECL "bool" ORDERS NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL)) NIL NIL NIL SHOSTAK) (|c_unify_complete-1| NIL 3756579151 NIL ("" (MEASURE-INDUCT+ "lex2(card(vars_lst(append(unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))), size_lst(unif_prb_lst))" ("unif_prb_lst" "fix_pnt_eq_lst")) (("" (SKEEP) (("" (EXPAND "c_unify" 1) (("" (CASE "null?(x!1)") (("1" (INST 1 "Delta" "sigma" "x!2") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "member" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE -3) (("2" (HIDE -4 -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME-REPLACE "t_alg" "car(x!1)`1") (("1" (NAME-REPLACE "s_alg" "car(x!1)`2") (("1" (CASE "susp?(s_alg) AND NOT occurs(V(s_alg), t_alg)") (("1" (NAME-REPLACE "sigma1_alg" "(: (V(s_alg), ext(reverse(p(s_alg)))(t_alg) ) :)") (("1" (NAME-REPLACE "new_sigma_alg" "append(sigma1_alg, sigma)") (("1" (NAME-REPLACE "Delta1_alg" "fresh_subs?(sigma1_alg, Delta)`1") (("1" (NAME-REPLACE "bool1_alg" "fresh_subs?(sigma1_alg, Delta)`2") (("1" (NAME-REPLACE "unif_prb_lst1_alg" "apply_sub_prb_lst(sigma1_alg, cdr(x!1))") (("1" (NAME-REPLACE "unif_prb_lst2_alg" "apply_sub_prb_lst(sigma1_alg, fix_pnt2unif_prb(x!2))") (("1" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(unif_prb_lst1_alg, unif_prb_lst2_alg)") (("1" (HIDE 2) (("1" (INST -2 "new_unif_prb_lst_alg" "(::)") (("1" (INST -2 "new_Delta_alg" "Nabla" "new_sigma_alg" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 1) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -1 -2 -3 -4 -6 1 3 4 5 6) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (EXPAND "bool1_alg") (("1" (HIDE -3) (("1" (EXPAND "apply_sub_prb_lst" -2) (("1" (LEMMA "aux_lemma_fresh_sub2") (("1" (INST -1 "Delta" "Nabla" "sigma1_alg" "sigma1") (("1" (PROP) (("1" (HIDE -3) (("1" (HIDE -1 2) (("1" (EXPAND "sigma1_alg") (("1" (LEMMA "suf_cond_more_gen_nuc_sub") (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -20 -21) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REVEAL -8) (("2" (LEMMA "term_times_eta") (("2" (INST? -1) (("2" (REPLACE -1 -3 RL T) (("2" (HIDE -1) (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (REWRITE "alpha_symmetric" -1) (("2" (INST? -2) (("2" (INST -2 "sigma1_alg") (("2" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE -3 1 2) (("3" (REVEAL 4) (("3" (HIDE -2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 2) (("2" (EXPAND "sigma1_alg") (("2" (LEMMA "suf_cond_idempotent") (("2" (INST -1 "sigma1_alg") (("2" (EXPAND "sigma1_alg") (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND* "vars_range_sub" "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 4) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("1" (EXPAND "new_Delta_alg") (("1" (EXPAND "Delta1_alg") (("1" (LEMMA "aux_lemma_fresh_sub") (("1" (REWRITE "fresh_subs_append_context" 1) (("1" (PROP) (("1" (INST -1 "Delta" "Nabla" "sigma1_alg" "sigma1") (("1" (PROP) (("1" (LEMMA "suf_cond_more_gen_nuc_sub") (("1" (HIDE -2 -3 -4 -5 -6 -7 2 3 4) (("1" (INST? -1) (("1" (EXPAND "sigma1_alg") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 1) (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL -5) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2 1) (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -22 -23) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REVEAL -5) (("2" (LEMMA "term_times_eta") (("2" (INST -1 "s_alg") (("2" (REPLACE -1 -3 RL T) (("2" (HIDE -1) (("2" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND* "sigma1_alg" "vars_range_sub" "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -5 -6 2 3) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (CASE "more_gen_sub?(Nabla)(sigma1_alg, sigma1)") (("1" (PROP) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (LEMMA "apply_sub_prb_lst_cons_calls_add") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND* "sigma1_alg" "vars_range_sub" "vars_dom_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (REVEAL 3) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (LEMMA "apply_sub_prb_lst_cons_calls_add") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND* "vars_range_sub" "sigma1_alg" "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (LEMMA "suf_cond_more_gen_nuc_sub") (("2" (EXPAND "sigma1_alg") (("2" (INST -1 "Nabla" "V(s_alg)" "sigma1" "p(s_alg)" "sigma1_alg" "t_alg") (("2" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 1) (("3" (REVEAL 3) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REVEAL -2 -4 -18 -19) (("4" (LEMMA "term_times_eta") (("4" (INST? -1) (("4" (EXPAND "apply_sub_prb_lst" -2) (("4" (LIFT-IF) (("4" (REVEAL 4) (("4" (PROP) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (HIDE -2) (("4" (REPLACE -4 -1 NIL T) (("4" (REPLACE -4 -1 NIL T) (("4" (REPLACE -2 -1 RL T) (("4" (HIDE -2) (("4" (HIDE 1 2) (("4" (EXPAND "alpha_eq_lst?") (("4" (PROP) (("4" (HIDE -2) (("4" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "fix_pnt2unif_prb") (("3" (GRIND) NIL NIL)) NIL)) NIL) ("4" (HIDE -1 -2 -3 -4 -6 2 3) (("4" (EXPAND "new_sigma_alg") (("4" (LEMMA "suf_cond_more_gen_append") (("4" (INST? -1) (("4" (EXPAND "sigma1_alg" 1) (("4" (INST -1 "V(s_alg)" "p(s_alg)" "t_alg") (("4" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE -2 1) (("3" (REVEAL 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1 2) (("4" (REVEAL -6) (("4" (EXPAND "apply_sub_prb_lst" -1) (("4" (LIFT-IF) (("4" (REVEAL 3) (("4" (PROP) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (REVEAL -4 -19 -20) (("4" (LEMMA "term_times_eta") (("4" (INST? -1) (("4" (REPLACE -3 -5 NIL T) (("4" (REPLACE -3 -4 NIL T) (("4" (REPLACE -1 -3 RL T) (("4" (HIDE -3 1 2) (("4" (HIDE -1) (("4" (EXPAND "alpha_eq_lst?") (("4" (PROP) (("4" (HIDE -2) (("4" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -1 2) (("5" (REVEAL -8) (("5" (EXPAND "valid_quadruple?") (("5" (PROP) (("5" (HIDE -1) (("5" (REWRITE "vars_lst_append") (("5" (EXPAND "vars_lst" -1 1) (("5" (LIFT-IF) (("5" (REVEAL 3) (("5" (PROP) (("5" (HIDE 1 2) (("5" (REVEAL -5 -20 -21) (("5" (REPLACE -2 -4 NIL T) (("5" (REPLACE -2 -3 NIL T) (("5" (LEMMA "term_times_eta") (("5" (INST? -1) (("5" (REPLACE -1 -3 RL T) (("5" (HIDE -1) (("5" (EXPAND* "disjoint?" "empty?") (("5" (SKEEP) (("5" (INST -1 "x") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2 2 3) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("1" (EXPAND "new_sigma_alg") (("1" (LEMMA "suf_cond_idempotent?_append") (("1" (INST -1 "sigma" "sigma1_alg") (("1" (PROP) (("1" (HIDE -1 -2 2) (("1" (LEMMA "subs_add_alg_well_behaved?") (("1" (EXPAND "sigma1_alg") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 1) (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" -1 1) (("2" (LIFT-IF) (("2" (REVEAL 3) (("2" (PROP) (("2" (HIDE 1 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_dom_sub" 1 1) (("2" (EXPAND "vars_dom_sub" 1 1) (("2" (EXPAND "vars_range_sub" 1) (("2" (EXPAND "vars_range_sub" 1) (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL -3 -15 -16) (("2" (LEMMA "term_times_eta") (("2" (INST? -1) (("2" (REPLACE -3 -5 NIL T) (("2" (REPLACE -3 -4 NIL T) (("2" (REPLACE -1 -3 RL T) (("2" (HIDE -1) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (INST -1 "x") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND* "member" "intersection") (("2" (PROP) (("1" (EXPAND "new_sigma_alg") (("1" (LEMMA "vars_dom_sub_append") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -2 1) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" -2) (("1" (EXPAND "union" -2) (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "unif_prb_lst1_alg") (("1" (EXPAND "unif_prb_lst2_alg") (("1" (LEMMA "apply_sub_elim_var") (("1" (EXPAND "member" -2) (("1" (EXPAND "union" -2) (("1" (PROP) (("1" (INST -2 "x" "sigma1_alg" "cdr(x!1)") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub" -2) (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 2) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL 2) (("2" (LEMMA "Vars_occurs") (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_sigma_alg") (("2" (LEMMA "vars_dom_sub_append") (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -2 1) (("1" (EXPAND "fix_pnt2unif_prb") (("1" (REWRITE "append_null") (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "unif_prb_lst1_alg") (("1" (EXPAND "unif_prb_lst2_alg") (("1" (LEMMA "apply_sub_elim_var") (("1" (EXPAND "member" -3) (("1" (EXPAND "union" -3) (("1" (PROP) (("1" (INST? -2) (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "vars_dom_sub" -2) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL 2) (("2" (LEMMA "Vars_occurs") (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub" -2) (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_dom_sub") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "fix_pnt2unif_prb" -2) (("2" (REWRITE "append_null") (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "unif_prb_lst1_alg") (("2" (EXPAND "unif_prb_lst2_alg") (("2" (LEMMA "vars_lst_sub_subset") (("2" (EXPAND "member" -3) (("2" (EXPAND "union" -3) (("2" (PROP) (("1" (INST? -2) (("1" (EXPAND "subset?") (("1" (INST -2 "x") (("1" (PROP) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (HIDE -2 1) (("1" (REVEAL -6) (("1" (INST? -1) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub" -1) (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "member" 1) (("1" (EXPAND "intersection" 1) (("1" (PROP) (("1" (HIDE -2) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "vars_lst" 1 1) (("1" (LIFT-IF) (("1" (REVEAL 3) (("1" (PROP) (("1" (HIDE 1 3) (("1" (EXPAND "t_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3) (("2" (EXPAND "vars_lst" 1 1) (("2" (LIFT-IF) (("2" (REVEAL 2) (("2" (PROP) (("2" (ASSERT) (("2" (HIDE 1 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (EXPAND "subset?" -2) (("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (HIDE 1) (("1" (REVEAL -6) (("1" (INST? -1) (("1" (EXPAND "member" 1) (("1" (EXPAND "intersection" 1) (("1" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub" -1) (("1" (REWRITE "ext_preserves_Vars") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "vars_lst" 1 1) (("1" (LIFT-IF) (("1" (REVEAL 3) (("1" (PROP) (("1" (HIDE -2 1 3) (("1" (EXPAND "t_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (CASE "bool1_alg") (("1" (LEMMA "c_unify_TCC1") (("1" (INST -1 "Delta" "sigma" "x!1" "x!2") (("1" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "sigma1_alg") (("1" (PROP) (("1" (INST -1 "Delta1_alg" "bool1_alg") (("1" (PROP) (("1" (INST -1 "new_Delta_alg") (("1" (PROP) (("1" (INST -1 "new_sigma_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst2_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_sigma_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_Delta_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "bool1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND "Delta1_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -4) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL 1) (("3" (PROPAX) NIL NIL)) NIL) ("4" (EXPAND "s_alg") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL -2) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -3) (("2" (EXPAND "bool1_alg") (("2" (EXPAND "apply_sub_prb_lst" -2) (("2" (LEMMA "aux_lemma_fresh_sub2") (("2" (INST -1 "Delta" "Nabla" "sigma1_alg" "sigma1") (("2" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "suf_cond_more_gen_nuc_sub") (("1" (INST? -1) (("1" (EXPAND "sigma1_alg" 1) (("1" (INST? -1) (("1" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL 3) (("3" (HIDE 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REVEAL -4) (("4" (LIFT-IF) (("4" (REVEAL 5) (("4" (PROP) (("4" (HIDE 1 2) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (HIDE -2) (("4" (EXPAND "alpha_eq_lst?") (("4" (PROP) (("4" (HIDE -2) (("4" (REVEAL -10 -23 -24) (("4" (LEMMA "term_times_eta") (("4" (INST? -1) (("4" (REPLACE -3 -5 NIL T) (("4" (REPLACE -3 -4 NIL T) (("4" (HIDE -2) (("4" (REPLACE -1 -2 RL) (("4" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 4) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "atom?(t_alg)") (("1" (HIDE 3) (("1" (LEMMA "term_at_eta") (("1" (INST? -1) (("1" (CASE "s_alg = at(a(t_alg))") (("1" (INST -4 "cdr(x!1)" "x!2") (("1" (INST -4 "Delta" "Nabla" "sigma" "sigma1") (("1" (HIDE 1) (("1" (PROP) (("1" (REVEAL 2) (("1" (SKEEP) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 1) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -5 2) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -1 -3 -4) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (REVEAL 1) (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 2) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2 -3 -4 2) (("3" (LEMMA "valid_quadruple?_cdr") (("3" (INST? -1) (("3" (PROP) (("3" (REVEAL 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC2") (("4" (HIDE -2 -3 -4 -5 -6 2) (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "a(t_alg)") (("1" (PROP) (("1" (REVEAL -5) (("1" (PROPAX) NIL NIL)) NIL) ("2" (LEMMA "term_at_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -7) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 -5 2) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -3 -5 2 3) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -3 -5 -6) (("2" (EXPAND "apply_sub_prb_lst" -3) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -8 -9) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REPLACE -2 -1 RL T) (("2" (REWRITE "Subs_atom") (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2 -3 1) (("2" (REVEAL 1) (("2" (LEMMA "Subs_atom2") (("2" (EXPAND "alpha" -2) (("2" (INST? -1) (("2" (PROP) (("2" (HIDE -2 -3 1) (("2" (REVEAL -6) (("2" (REPLACE -1 -2 RL) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "susp?(t_alg)") (("1" (HIDE 4 -2) (("1" (LEMMA "term_times_eta") (("1" (INST -1 "t_alg") (("1" (CASE "NOT occurs(V(t_alg), s_alg)") (("1" (HIDE -1 -2 1 2 3 4) (("1" (REVEAL 5) (("1" (NAME-REPLACE "sigma1_alg" "(: (V(t_alg), ext(reverse(p(t_alg)))(s_alg) ) :)") (("1" (NAME-REPLACE "new_sigma_alg" "append(sigma1_alg, sigma)") (("1" (NAME-REPLACE "Delta1_alg" "fresh_subs?(sigma1_alg, Delta)`1") (("1" (NAME-REPLACE "bool1_alg" "fresh_subs?(sigma1_alg, Delta)`2") (("1" (NAME-REPLACE "unif_prb_lst1_alg" "apply_sub_prb_lst(sigma1_alg, cdr(x!1))") (("1" (NAME-REPLACE "unif_prb_lst2_alg" "apply_sub_prb_lst(sigma1_alg, fix_pnt2unif_prb(x!2))") (("1" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(unif_prb_lst1_alg, unif_prb_lst2_alg)") (("1" (CASE "bool1_alg") (("1" (REVEAL -12) (("1" (HIDE 1) (("1" (INST -1 "new_unif_prb_lst_alg" "(::)") (("1" (INST -1 "new_Delta_alg" "Nabla" "new_sigma_alg" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 5) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL -11 1 2 3 4) (("1" (ASSERT) (("1" (SPLIT 5) (("1" (PROP) NIL NIL) ("2" (FLATTEN) (("2" (LIFT-IF) (("2" (HIDE 1 3 4 5 6) (("2" (EXPAND "bool1_alg" -4) (("2" (EXPAND "sigma1_alg") (("2" (PROP) (("2" (ASSERT) (("2" (HIDE -1 -2 -5 -7) (("2" (HIDE -2 -3) (("2" (EXPAND* "new_Delta_alg" "new_sigma_alg" "new_unif_prb_lst_alg") (("2" (EXPAND* "Delta1_alg" "sigma1_alg" "unif_prb_lst1_alg" "unif_prb_lst2_alg") (("2" (ASSERT) (("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3) (("2" (EXPAND "sol_prb_quad?") (("2" (CASE "more_gen_sub?(Nabla)(sigma1_alg, sigma1)") (("1" (PROP) (("1" (EXPAND "new_Delta_alg") (("1" (REWRITE "fresh_subs_append_context") (("1" (PROP) (("1" (EXPAND "Delta1_alg") (("1" (LEMMA "aux_lemma_fresh_sub") (("1" (INST -1 "Delta" "Nabla" "sigma1_alg" "sigma1") (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (EXPAND "unif_prb_lst1_alg") (("2" (EXPAND "unif_prb_lst2_alg") (("2" (LEMMA "apply_sub_prb_lst_cons_calls_add") (("2" (HIDE -3 -6) (("2" (PROP) (("1" (HIDE -4) (("1" (INST? -1) (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (REVEAL 5) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (INST? -1) (("2" (PROP) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL) ("4" (LEMMA "suf_cond_more_gen_append") (("4" (HIDE -3 -4 -5 -6) (("4" (EXPAND "new_sigma_alg") (("4" (INST? -1) (("4" (EXPAND "sigma1_alg" 1) (("4" (INST? -1) (("4" (PROP) (("1" (EXPAND "sigma1_alg" -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg" 1) (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE -2 1) (("3" (REVEAL 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1 2) (("4" (REVEAL -5 -19 -23 -24) (("4" (EXPAND "apply_sub_prb_lst" -1) (("4" (LIFT-IF) (("4" (REVEAL 5) (("4" (PROP) (("4" (HIDE 1 2) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (HIDE -2) (("4" (REPLACE -3 -1 NIL T) (("4" (REPLACE -3 -1 NIL T) (("4" (REPLACE -2 -1 RL) (("4" (HIDE -2) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -1 2) (("5" (REVEAL -9) (("5" (EXPAND "valid_quadruple?" -1) (("5" (PROP) (("5" (HIDE -1) (("5" (REWRITE "vars_lst_append") (("5" (EXPAND "vars_lst" -1 1) (("5" (LIFT-IF) (("5" (REVEAL 5) (("5" (PROP) (("5" (HIDE 1 2) (("5" (REVEAL -20) (("5" (REVEAL -25) (("5" (REPLACE -1 -3 NIL T) (("5" (REPLACE -1 -2 RL T) (("5" (EXPAND "s_alg") (("5" (EXPAND* "disjoint?" "empty?") (("5" (SKEEP) (("5" (INST -1 "x") (("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (REVEAL -6) (("6" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (LEMMA "suf_cond_more_gen_nuc_sub") (("2" (INST? -1) (("2" (EXPAND "sigma1_alg" 1) (("2" (INST? -1) (("2" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 1) (("3" (REVEAL 3) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REVEAL -3) (("4" (PROP) (("4" (HIDE -1 -3 -4) (("4" (EXPAND "apply_sub_prb_lst" -1) (("4" (LIFT-IF) (("4" (REVEAL 6) (("4" (PROP) (("4" (HIDE 1 2) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (HIDE -2) (("4" (REVEAL -19 -23 -24) (("4" (REPLACE -2 -4 NIL T) (("4" (REPLACE -2 -3 NIL T) (("4" (REPLACE -1 -2 RL T) (("4" (EXPAND "alpha_eq_lst?") (("4" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("1" (EXPAND "new_sigma_alg") (("1" (LEMMA "suf_cond_idempotent?_append") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -1 2) (("1" (LEMMA "subs_add_alg_well_behaved?") (("1" (EXPAND "sigma1_alg") (("1" (INST? -1) (("1" (PROP) (("1" (REWRITE "ext_preserves_Vars") (("1" (HIDE -2 1) (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 1 1) (("2" (LIFT-IF) (("2" (REVEAL 5) (("2" (PROP) (("2" (HIDE 1 3) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub" -1) (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_dom_sub" -1 1) (("2" (EXPAND "s_alg") (("2" (REVEAL -15 -20) (("2" (REPLACE -2 1 NIL T) (("2" (REPLACE -1 1 RL T) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND* "member" "intersection") (("2" (FLATTEN -1) (("2" (EXPAND "new_sigma_alg") (("2" (LEMMA "vars_dom_sub_append") (("2" (INST -1 "x" "sigma" "sigma1_alg") (("2" (PROP) (("1" (HIDE -2 2) (("1" (HIDE 1) (("1" (EXPAND "fix_pnt2unif_prb") (("1" (REWRITE "append_null") (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "unif_prb_lst1_alg") (("1" (EXPAND "unif_prb_lst2_alg") (("1" (LEMMA "apply_sub_elim_var") (("1" (EXPAND "member" -3) (("1" (EXPAND "union" -3) (("1" (PROP) (("1" (INST? -2) (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub" -1) (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "vars_dom_sub") (("1" (REVEAL 2) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_dom_sub") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 2) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 1) (("2" (EXPAND "fix_pnt2unif_prb") (("2" (REWRITE "append_null") (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "unif_prb_lst2_alg") (("2" (EXPAND "unif_prb_lst1_alg") (("2" (LEMMA "apply_sub_elim_var") (("2" (EXPAND "member" -3) (("2" (EXPAND "union" -3) (("2" (PROP) (("1" (INST? -2) (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL 2) (("1" (LEMMA "Vars_occurs") (("1" (EXPAND "sigma1_alg" -2) (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "sigma1_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND* "sigma1_alg" "vars_range_sub" "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 2) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2) (("3" (EXPAND "fix_pnt2unif_prb" -2) (("3" (REWRITE "append_null") (("3" (LEMMA "vars_lst_sub_subset") (("3" (EXPAND "new_unif_prb_lst_alg") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "unif_prb_lst1_alg") (("3" (EXPAND "unif_prb_lst2_alg") (("3" (CASE "member(x, vars_range_sub(sigma1_alg))") (("1" (HIDE -2 -4 1) (("1" (REVEAL -5) (("1" (INST -1 "x") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "vars_lst" 1 1) (("1" (LIFT-IF) (("1" (REVEAL 5) (("1" (PROP) (("1" (HIDE 1 3) (("1" (EXPAND "sigma1_alg" -1) (("1" (EXPAND "vars_range_sub" -1) (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "s_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member" -3) (("2" (EXPAND "union" -3) (("2" (PROP) (("1" (INST? -2) (("1" (EXPAND "subset?") (("1" (INST -2 "x") (("1" (PROP) (("1" (HIDE -2 -3) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (EXPAND "member" 2) (("1" (EXPAND "union" 2) (("1" (PROP) (("1" (EXPAND "vars_lst" 2) (("1" (LIFT-IF) (("1" (REVEAL 4) (("1" (PROP) (("1" (HIDE 1 3 4 5) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST? -2) (("2" (EXPAND "subset?" -2) (("2" (INST? -2) (("2" (PROP) (("2" (HIDE -2 -3) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC3") (("4" (INST -1 "Delta" "sigma" "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "p(t_alg)" "V(t_alg)") (("1" (PROP) (("1" (INST -1 "sigma1_alg") (("1" (PROP) (("1" (INST -1 "Delta1_alg" "bool1_alg") (("1" (PROP) (("1" (INST -1 "new_Delta_alg") (("1" (PROP) (("1" (INST -1 "new_sigma_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst2_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_sigma_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_Delta_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "bool1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND "Delta1_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -14) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -15) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 4) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "bool1_alg") (("2" (HIDE -2) (("2" (EXPAND "sol_prb_quad?") (("2" (LEMMA "aux_lemma_fresh_sub2") (("2" (INST? -1) (("2" (PROP) (("2" (INST -1 "sigma1_alg") (("2" (PROP) (("1" (HIDE -1 -2 -3 -4 2) (("1" (LEMMA "suf_cond_more_gen_nuc_sub") (("1" (INST? -1) (("1" (EXPAND "sigma1_alg" 1) (("1" (INST? -1) (("1" (PROP) (("1" (EXPAND "sigma1_alg") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL 2) (("3" (HIDE 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REVEAL -4 -18 6) (("4" (EXPAND "apply_sub_prb_lst") (("4" (LIFT-IF) (("4" (PROP) (("4" (REWRITE "alpha_eq_lst?_append") (("4" (PROP) (("4" (REPLACE -3 3 NIL T) (("4" (EXPAND "t_alg") (("4" (EXPAND "s_alg") (("4" (HIDE -2 1 2) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND* "sigma1_alg" "vars_dom_sub" "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (EXPAND* "disjoint?" "empty?") (("2" (SKEEP) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 4) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "susp?(s_alg)") (("1" (LEMMA "term_times_eta") (("1" (INST -1 "s_alg") (("1" (HIDE -1 -2 -3 -4 -5 1 2 3) (("1" (REVEAL -7) (("1" (NAME-REPLACE "new_fix_pnt_eq_alg" "(: (append(reverse(p(s_alg)), p(t_alg)), V(t_alg)) :)") (("1" (NAME-REPLACE "new_fix_pnt_eq_lst_alg" "append(new_fix_pnt_eq_alg, x!2)") (("1" (INST -1 "cdr(x!1)" "new_fix_pnt_eq_lst_alg") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1") (("1" (PROP) (("1" (SKEEP) (("1" (REVEAL 4) (("1" (INST 1 "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (LIFT-IF) (("1" (REVEAL 3) (("1" (ASSERT) (("1" (REVEAL 2) (("1" (LIFT-IF) (("1" (REVEAL -8) (("1" (HIDE 1) (("1" (SPLIT) (("1" (REVEAL 2) (("1" (ASSERT) (("1" (PROP) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (REVEAL -6) (("2" (ASSERT) (("2" (REVEAL -5) (("2" (ASSERT) (("2" (HIDE -1 -2 -3 -4 -6 -7 -8 2) (("2" (EXPAND "new_fix_pnt_eq_lst_alg") (("2" (EXPAND "new_fix_pnt_eq_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("1" (HIDE -1 -3 -4) (("1" (REVEAL 3) (("1" (EXPAND "apply_sub_prb_lst" -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -4) (("2" (EXPAND "new_fix_pnt_eq_lst_alg") (("2" (REWRITE "fix_pnt2unif_prb_append") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "new_fix_pnt_eq_alg") (("2" (EXPAND "fix_pnt2unif_prb" 1) (("2" (EXPAND "fix_pnt2unif_prb" 1) (("2" (REWRITE "append_null") (("2" (REVEAL 3) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (HIDE 1 2) (("2" (EXPAND "apply_sub_prb_lst") (("2" (EXPAND "apply_sub_prb_lst" 1) (("2" (REWRITE "append_null") (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) (("2" (HIDE -2) (("2" (REVEAL -17 -18) (("2" (REPLACE -1 -3 NIL T) (("2" (REPLACE -1 -2 NIL T) (("2" (REVEAL -10 -13) (("2" (REPLACE -1 -3 RL) (("2" (REPLACE -2 -3 RL) (("2" (CASE "V(s_alg) = V(t_alg)") (("1" (REPLACE -1 -4) (("1" (LEMMA "ext_reverse_alpha") (("1" (REWRITE "alpha_symmetric" -5) (("1" (LEMMA "Subs_perm_Var_aux") (("1" (INST -1 "V(t_alg)" "p(s_alg)" "sigma1") (("1" (REPLACE -1 -6 NIL T) (("1" (INST? -1) (("1" (REPLACE -1 -5) (("1" (REWRITE "Subs_perm_comm" -5 :DIR RL) (("1" (EXPAND "ext" -5) (("1" (REWRITE "alpha_symmetric" -5) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 2) (("2" (REVEAL -13) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1) (("3" (REVEAL 3) (("3" (EXPAND "new_fix_pnt_eq_lst_alg") (("3" (EXPAND "new_fix_pnt_eq_alg") (("3" (REWRITE "vars_lst_append") (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "vars_lst" -1 1) (("3" (LIFT-IF) (("3" (PROP) (("3" (REWRITE "fix_pnt2unif_prb_append") (("3" (REWRITE "vars_lst_append" 3) (("3" (HIDE 1 2) (("3" (REVEAL -6 -9 -13 -14) (("3" (REPLACE -3 -5 NIL T) (("3" (REPLACE -3 -4 NIL T) (("3" (REPLACE -1 -3 RL T) (("3" (REPLACE -1 -2 RL T) (("3" (EXPAND "fix_pnt2unif_prb" 1 1) (("3" (EXPAND "fix_pnt2unif_prb" 1 1) (("3" (REWRITE "append_null") (("3" (EXPAND "vars_lst" 1 2) (("3" (EXPAND* "disjoint?" "empty?") (("3" (SKEEP) (("3" (INST -1 "x") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "c_unify_TCC4") (("4" (INST -1 "x!1" "x!2") (("4" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "p(t_alg)" "V(t_alg)") (("1" (PROP) (("1" (INST -1 "new_fix_pnt_eq_alg") (("1" (PROP) (("1" (INST -1 "new_fix_pnt_eq_lst_alg") (("1" (PROP) (("1" (EXPAND "new_fix_pnt_eq_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_fix_pnt_eq_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -9) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -10) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -11) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -12) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -5) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -2) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 -5 2 3 4) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "unit?(t_alg)") (("1" (CASE "unit?(s_alg)") (("1" (POSTPONE) NIL NIL) ("2" (HIDE -2 -4) (("2" (HIDE 2 3 4 5 6) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "pair?(t_alg)") (("1" (HIDE 6) (("1" (HIDE -2) (("1" (CASE "pair?(s_alg)") (("1" (POSTPONE) NIL NIL) ("2" (HIDE -3 2 3 4 6) (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "abs?(t_alg)") (("1" (HIDE -2 7) (("1" (CASE "NOT abs?(s_alg)") (("1" (HIDE -3 2 3 4 5 7) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (LEMMA "term_abs_eta") (("2" (INST -1 "s_alg") (("2" (LEMMA "term_abs_eta") (("2" (INST -1 "t_alg") (("2" (CASE "abstr(t_alg) = abstr(s_alg)") (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "app?(t_alg)") (("1" (HIDE -2 8) (("1" (LEMMA "term_app_eta") (("1" (INST -1 "t_alg") (("1" (CASE "NOT app?(s_alg) OR sym(t_alg) /= sym(s_alg)") (("1" (HIDE -3 -5 1 2 3 4 5 7) (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "c_app?(t_alg)") (("1" (HIDE -2 9) (("1" (LEMMA "term_c_app_eta") (("1" (INST -1 "t_alg") (("1" (CASE "NOT c_app?(s_alg) OR c_sym(t_alg) /= c_sym(s_alg)") (("1" (HIDE -3 -5 1 2 3 4 5 6 8) (("1" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 10) (("2" (HIDE 8) (("2" (HIDE -1 -2 -3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 3) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_sound_cor| 0 (|c_unify_sound_cor-1| NIL 3757410503 NIL ("" (LEMMA "c_unify_sound") (("" (SKEEP) (("" (INST -1 "(::)" "Nabla" "(::)" "(::)" "sigma1" "(: (t, s) :)" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("" (PROP) (("" (HIDE -1 -2 2) (("" (EXPAND "valid_quadruple?") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((VALID_QUADRUPLE? CONST-DECL "bool" NOMINALUNIF NIL) (SUBS DEF-DECL "term" SUBSTITUTION NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (SINGLETON CONST-DECL "(singleton?)" SETS NIL) (WELL_BEHAVED? CONST-DECL "bool" SUBSTITUTION NIL) (VARS_DOM_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (UNION CONST-DECL "set" SETS NIL) (INTERSECTION CONST-DECL "set" SETS NIL) (EMPTY? CONST-DECL "bool" SETS NIL) (DISJOINT? CONST-DECL "bool" SETS NIL) (FINITE_INTERSECTION1 APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (CONS ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" LIST_ADT NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (SUB TYPE-EQ-DECL NIL SUBSTITUTION NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (FRESH_CONTEXT TYPE-EQ-DECL NIL FRESHNESS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (>= CONST-DECL "bool" REALS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (C_UNIFY_SOUND FORMULA-DECL NIL NOMINALUNIF NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_sound| 0 (|c_unify_sound-3| "" 3756457423 NIL ("" (MEASURE-INDUCT+ "lex2(card(vars_lst(append(unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))), size_lst(unif_prb_lst))" ("unif_prb_lst" "fix_pnt_eq_lst")) (("" (HIDE -1) (("" (SKEEP) (("" (EXPAND "c_unify") (("" (LIFT-IF) (("" (SPLIT) (("1" (PROP) (("1" (HIDE -4) (("1" (EXPAND "member" -2) (("1" (PROP) (("1" (REPLACE -1 1 RL) (("1" (REPLACE -2 1 RL) (("1" (REPLACE -3 1 RL) (("1" (HIDE -1 -2 -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -1) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (NAME-REPLACE "t_alg" "car(x!1)`1") (("1" (NAME-REPLACE "s_alg" "car(x!1)`2") (("1" (SPLIT) (("1" (PROP) (("1" (NAME-REPLACE "sigma1_alg" "(: (V(s_alg), ext(reverse(p(s_alg)))(t_alg) ) :)") (("1" (NAME-REPLACE "new_sigma_alg" "append(sigma1_alg, sigma)") (("1" (NAME-REPLACE "Delta1_alg" "fresh_subs?(sigma1_alg, Delta)`1") (("1" (NAME-REPLACE "bool1_alg" "fresh_subs?(sigma1_alg, Delta)`2") (("1" (NAME-REPLACE "unif_prb_lst1_alg" "apply_sub_prb_lst(sigma1_alg, cdr(x!1))") (("1" (NAME-REPLACE "unif_prb_lst2_alg" "apply_sub_prb_lst(sigma1_alg, fix_pnt2unif_prb(x!2))") (("1" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(unif_prb_lst1_alg, unif_prb_lst2_alg)") (("1" (REVEAL -11) (("1" (INST -1 "new_unif_prb_lst_alg" "(::)") (("1" (INST -1 "new_Delta_alg" "Nabla" "new_sigma_alg" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (PROP) (("1" (HIDE -5) (("1" (EXPAND "sol_prb_quad?" 3) (("1" (PROP) (("1" (HIDE -2 -3 -4 -5 2 3) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -2 -3 -4) (("1" (EXPAND "new_Delta_alg") (("1" (REWRITE "fresh_subs_append_context") (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 -5 2 3) (("2" (EXPAND "sol_prb_quad?") (("2" (PROP) (("2" (HIDE -1 -3 -4) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (EXPAND "unif_prb_lst1_alg") (("2" (HIDE -2) (("2" (EXPAND "apply_sub_prb_lst" 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("1" (HIDE -1) (("1" (CASE "more_gen_sub?(Nabla)(sigma1_alg, sigma1)") (("1" (EXPAND "more_gen_sub?" -1) (("1" (SKEEP) (("1" (LEMMA "alpha_Subs_invariance") (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (LEMMA "alpha_transitive") (("2" (INST-CP -1 "Nabla" "Subs(sigma1)(car(x!1)`1)" "Subs(append(lambda1, sigma1_alg))(car(x!1)`1)" "Subs(sigma1)(car(x!1)`2)") (("2" (PROP) (("1" (HIDE 2 -1) (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (SKEEP) (("1" (INST -1 "X") (("1" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INST-CP -1 "Nabla" "Subs(append(lambda1, sigma1_alg))(car(x!1)`1)" "Subs(append(lambda1, sigma1_alg))(car(x!1)`2)" "Subs(sigma1)(car(x!1)`2)") (("2" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (REWRITE "Subs_append") (("1" (REWRITE "Subs_append") (("1" (REVEAL -23 -24) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (HIDE -1 -2) (("1" (CASE "Subs(sigma1_alg)(t_alg) = t_alg") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "Subs" 1 3) (("1" (EXPAND "Subs" 1 3) (("1" (REVEAL -12) (("1" (LEMMA "term_times_eta") (("1" (INST? -1) (("1" (REPLACE -1 1 RL) (("1" (EXPAND "subs") (("1" (LEMMA "alpha_ext_invariance_right") (("1" (REWRITE "ext_append" :DIR RL) (("1" (REWRITE "Subs_perm_comm") (("1" (INST -1 "Nabla" "append(p(s_alg), reverse(p(s_alg)))" "(::)" "Subs(lambda1)(t_alg)" "Subs(lambda1)(t_alg)") (("1" (PROP) (("1" (REPLACE -1 1) (("1" (REWRITE "ext_identity") (("1" (REWRITE "alpha_reflexivity") NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "act_reverse_aux1") (("2" (INST -1 "p(s_alg)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sub_skip_term") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_dom_sub") (("2" (REVEAL 5) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (INST -1 "Nabla" "sigma1" "append(lambda1, sigma1_alg)" "car(x!1)`2") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL -5) (("2" (EXPAND "new_sigma_alg") (("2" (LEMMA "suf_cond_more_gen_sub?_append") (("2" (INST -1 "Nabla" "sigma" "sigma1" "sigma1_alg") (("2" (PROP) (("1" (HIDE -1 2) (("1" (EXPAND "sigma1_alg") (("1" (REWRITE "suf_cond_idempotent") (("1" (HIDE 2) (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "vars_dom_sub") (("1" (REVEAL 4) (("1" (EXPAND "disjoint?" 2) (("1" (EXPAND "empty?" 2) (("1" (SKEEP) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REVEAL -11) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -1 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (HIDE -2) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (REVEAL 5) (("1" (EXPAND "vars_lst") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REVEAL -13 -25) (("1" (REPLACE -2 1) (("1" (HIDE -2) (("1" (LEMMA "term_times_eta") (("1" (INST? -1) (("1" (REPLACE -1 1 RL) (("1" (HIDE -1 -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL -26 5) (("2" (EXPAND "vars_lst") (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REPLACE -1 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "apply_sub_prb_lst_cons_calls") (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -1 2) (("1" (REVEAL -6) (("1" (EXPAND "new_sigma_alg") (("1" (LEMMA "suf_cond_more_gen_sub?_append") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -1 2) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "vars_dom_sub" 1) (("1" (REVEAL 4) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REVEAL -12) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -1 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (REWRITE "vars_lst_append") (("2" (HIDE -2) (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (REVEAL 5) (("1" (EXPAND "vars_lst") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REVEAL -26) (("1" (REVEAL -14) (("1" (LEMMA "term_times_eta") (("1" (INST? -1) (("1" (REPLACE -3 1) (("1" (REPLACE -1 1 RL) (("1" (EXPAND "Vars" 1 2) (("1" (HIDE -1 -2 -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 5) (("2" (EXPAND "vars_lst" 2) (("2" (LIFT-IF) (("2" (PROP) (("2" (REVEAL -27) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (REVEAL 3) (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_dom_sub") (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 -3 -4 -5 2 3) (("3" (EXPAND "sol_prb_quad?") (("3" (PROP) (("3" (HIDE -1 -3 -4) (("3" (EXPAND "new_unif_prb_lst_alg") (("3" (REWRITE "apply_sub_prb_lst_append") (("3" (REWRITE "alpha_eq_lst?_append") (("3" (PROP) (("3" (HIDE -1) (("3" (EXPAND "unif_prb_lst2_alg") (("3" (LEMMA "apply_sub_prb_lst_cons_calls") (("3" (INST? -1) (("3" (PROP) (("1" (HIDE -1 2) (("1" (REVEAL -6) (("1" (LEMMA "suf_cond_more_gen_sub?_append") (("1" (EXPAND "new_sigma_alg") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -1 2) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_range_sub") (("1" (EXPAND "vars_dom_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (LEMMA "Vars_occurs") (("1" (REVEAL 4) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REVEAL -12) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -1 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (HIDE -2) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (REVEAL 5) (("1" (EXPAND "vars_lst" 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REVEAL -14) (("1" (LEMMA "term_times_eta") (("1" (INST? -1) (("1" (REVEAL -27) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1 RL) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (HIDE 2) (("2" (REVEAL 5) (("2" (EXPAND "vars_lst") (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REVEAL -27) (("2" (REPLACE -1 1) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_dom_sub") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (REVEAL -1) (("4" (EXPAND "sol_prb_quad?") (("4" (PROP) (("4" (HIDE -1 -2 -3) (("4" (EXPAND "new_sigma_alg") (("4" (EXPAND "more_gen_sub?") (("4" (SKEEP) (("4" (INST 1 "append(lambda1, sigma1_alg)") (("4" (SKEEP) (("4" (INST? -1) (("4" (REWRITE "Subs_append") (("4" (REWRITE "Subs_append") (("4" (REWRITE "Subs_append") (("4" (REWRITE "Subs_append") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("1" (LEMMA "suf_cond_idempotent?_append") (("1" (EXPAND "new_sigma_alg") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (LEMMA "subs_add_alg_well_behaved?") (("1" (EXPAND "sigma1_alg") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 1) (("1" (REVEAL 3) (("1" (REWRITE "ext_preserves_Vars") (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -6) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REVEAL -6) (("3" (EXPAND "valid_quadruple?") (("3" (PROP) (("3" (HIDE -1) (("3" (EXPAND "disjoint?") (("3" (EXPAND "empty?") (("3" (SKEEP) (("3" (INST -1 "x") (("3" (EXPAND "member") (("3" (EXPAND "intersection") (("3" (PROP) (("3" (HIDE -2) (("3" (REWRITE "vars_lst_append") (("3" (EXPAND "member") (("3" (EXPAND "union") (("3" (PROP) (("1" (REVEAL 3) (("1" (EXPAND "vars_lst" 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE 1 3) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (HIDE 2) (("1" (REVEAL -7) (("1" (REVEAL -19) (("1" (REPLACE -1 1) (("1" (LEMMA "term_times_eta") (("1" (INST -1 "s_alg") (("1" (REPLACE -1 1 RL) (("1" (HIDE -1 -2 -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_lst") (("2" (LIFT-IF) (("2" (REVEAL 4) (("2" (PROP) (("2" (HIDE 1 3) (("2" (EXPAND "t_alg") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "fix_pnt2unif_prb") (("2" (REWRITE "append_null") (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (EXPAND "new_sigma_alg") (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member" -2) (("2" (EXPAND "union" -2) (("2" (PROP) (("1" (LEMMA "vars_dom_sub_append") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -3) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (LEMMA "apply_sub_elim_var") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -3) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 1) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (EXPAND "unif_prb_lst1_alg") (("2" (LEMMA "suf_cond_member_unif_prb_lst") (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -3) (("1" (REVEAL -9) (("1" (EXPAND "valid_quadruple?") (("1" (PROP) (("1" (HIDE -1) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "disjoint?") (("1" (EXPAND "empty?") (("1" (INST -1 "x") (("1" (EXPAND "vars_lst" 1 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (REVEAL -9) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (INST -1 "x") (("2" (REWRITE "vars_lst_append") (("2" (REVEAL 2) (("2" (EXPAND "vars_lst" 2 1) (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 3) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "t_alg") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (LEMMA "vars_dom_sub_append") (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -3) (("1" (LEMMA "apply_sub_elim_var") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -3) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 1) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (LEMMA "suf_cond_member_unif_prb_lst") (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -3) (("1" (REVEAL -9) (("1" (EXPAND "valid_quadruple?") (("1" (PROP) (("1" (HIDE -1) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "disjoint?") (("1" (EXPAND "empty?") (("1" (INST -1 "x") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (REVEAL -9) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?" -1) (("2" (EXPAND "empty?" -1) (("2" (INST -1 "x") (("2" (REVEAL 2) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 2 1) (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 1 3) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "t_alg") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "c_unify_TCC1") (("3" (HIDE -2 -4 -5 -6 2 3 4) (("3" (INST -1 "Delta" "sigma" "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "sigma1_alg") (("1" (PROP) (("1" (INST -1 "Delta1_alg" "bool1_alg") (("1" (PROP) (("1" (INST -1 "new_Delta_alg") (("1" (PROP) (("1" (INST -1 "new_sigma_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst2_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (HIDE 2) (("1" (REVEAL -11) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_lst_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "unif_prb_lst1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_sigma_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_Delta_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "bool1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND "Delta1_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -5) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL 1) (("3" (PROPAX) NIL NIL)) NIL) ("4" (EXPAND "s_alg") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE 1) (("2" (PROP) (("1" (REVEAL -3) (("1" (INST -1 "cdr(x!1)" "x!2") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (PROP) (("1" (HIDE -2 -3 -4 -5 -6 1) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (REVEAL 1) (("1" (EXPAND "apply_sub_prb_lst" 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (REVEAL -1 -3 -7 -8) (("1" (REPLACE -3 1) (("1" (REPLACE -4 1) (("1" (LEMMA "term_at_eta") (("1" (INST? -1) (("1" (REPLACE -1 -2) (("1" (REPLACE -2 1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "alpha_reflexivity") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 2 3) (("2" (LEMMA "valid_quadruple?_cdr") (("2" (INST? -1) (("2" (PROP) (("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (LEMMA "c_unify_TCC2") (("3" (INST -1 "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "a(t_alg)") (("1" (PROP) (("1" (REVEAL -5) (("1" (PROPAX) NIL NIL)) NIL) ("2" (LEMMA "term_at_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -7) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -1) (("2" (GRIND) NIL NIL)) NIL) ("3" (ASSERT) (("3" (NAME-REPLACE "sigma1_alg" "(: (V(t_alg), ext(reverse(p(t_alg)))(s_alg) ) :)") (("3" (NAME-REPLACE "new_sigma_alg" "append(sigma1_alg, sigma)") (("3" (NAME-REPLACE "Delta1_alg" "fresh_subs?(sigma1_alg, Delta)`1") (("3" (NAME-REPLACE "bool1_alg" "fresh_subs?(sigma1_alg, Delta)`2") (("3" (NAME-REPLACE "unif_prb_lst1_alg" "apply_sub_prb_lst(sigma1_alg, cdr(x!1))") (("3" (NAME-REPLACE "unif_prb_lst2_alg" "apply_sub_prb_lst(sigma1_alg, fix_pnt2unif_prb(x!2))") (("3" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("3" (NAME-REPLACE "new_unif_prb_lst_alg" "append(unif_prb_lst1_alg, unif_prb_lst2_alg)") (("3" (LIFT-IF) (("3" (PROP) (("1" (REVEAL -11) (("1" (INST -1 "new_unif_prb_lst_alg" "(::)") (("1" (INST -1 "new_Delta_alg" "Nabla" "new_sigma_alg" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (PROP) (("1" (HIDE -2 -3 -4 -5 -6 1 2 3) (("1" (EXPAND "sol_prb_quad?") (("1" (CASE "more_gen_sub?(Nabla)(sigma1_alg, sigma1)") (("1" (PROP) (("1" (HIDE -1 -3 -4 -5) (("1" (EXPAND "new_Delta_alg") (("1" (REWRITE "fresh_subs_append_context") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4 -5) (("2" (EXPAND "apply_sub_prb_lst" 1) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("1" (HIDE -1) (("1" (REVEAL -2) (("1" (EXPAND "more_gen_sub?") (("1" (SKEEP) (("1" (LEMMA "eq_sub_alpha") (("1" (REVEAL -20 -21) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (HIDE -1 -2) (("1" (INST -1 "Nabla" "append(lambda1, sigma1_alg)" "s_alg" "sigma1" "t_alg") (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "alpha_eq_lst?") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 1) (("3" (HIDE -1) (("3" (REWRITE "Subs_append") (("3" (REWRITE "Subs_append") (("3" (CASE "Subs(sigma1_alg)(s_alg) = s_alg") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "Subs" 1 2) (("1" (EXPAND "Subs" 1 2) (("1" (EXPAND "subs" 1) (("1" (REWRITE "ext_append" :DIR RL) (("1" (LEMMA "alpha_ext_invariance_right") (("1" (REWRITE "Subs_perm_comm") (("1" (HIDE -1) (("1" (LEMMA "alpha_ext_invariance") (("1" (INST -1 "Nabla" "append(p(t_alg), reverse(p(t_alg)))" "(::)" "Subs(lambda1)(s_alg)") (("1" (PROP) (("1" (REWRITE "ext_identity") NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "act_reverse_aux1") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sub_skip_term") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (REVEAL 4) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "alpha_eq_lst?") (("4" (PROPAX) NIL NIL)) NIL) ("5" (HIDE 1) (("5" (HIDE -1) (("5" (CASE "Subs(sigma1_alg)(s_alg) = s_alg") (("1" (REVEAL -1) (("1" (HIDE -2) (("1" (SKEEP) (("1" (INST -1 "X") (("1" (REWRITE "alpha_symmetric") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sub_skip_term") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_dom_sub") (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (REVEAL 4) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("2" (HIDE -2) (("2" (LEMMA "apply_sub_prb_lst_cons_calls") (("2" (EXPAND "unif_prb_lst1_alg") (("2" (INST? -1) (("2" (PROP) (("1" (REVEAL -3) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (LEMMA "suf_cond_idempotent") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (EXPAND "vars_dom_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 3) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 -4 -5) (("3" (EXPAND "new_unif_prb_lst_alg") (("3" (REWRITE "apply_sub_prb_lst_append") (("3" (REWRITE "alpha_eq_lst?_append") (("3" (PROP) (("3" (HIDE -2) (("3" (EXPAND "unif_prb_lst2_alg") (("3" (LEMMA "apply_sub_prb_lst_cons_calls") (("3" (INST? -1) (("3" (PROP) (("3" (HIDE-ALL-BUT 1) (("3" (LEMMA "suf_cond_idempotent") (("3" (INST? -1) (("3" (PROP) (("3" (HIDE 2) (("3" (EXPAND "sigma1_alg") (("3" (EXPAND "vars_range_sub") (("3" (REWRITE "ext_preserves_Vars") (("3" (EXPAND "vars_dom_sub") (("3" (REVEAL 3) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1 -2 -3 -4) (("4" (EXPAND "more_gen_sub?") (("4" (SKEEP) (("4" (EXPAND "new_sigma_alg") (("4" (INST 1 "append(lambda1, sigma1_alg)") (("4" (REWRITE "append_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (PROP) (("2" (HIDE -1 -2 -3) (("2" (EXPAND "new_sigma_alg") (("2" (LEMMA "suf_cond_more_gen_sub?_append") (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -1 2) (("1" (LEMMA "suf_cond_idempotent") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (EXPAND "vars_range_sub") (("1" (REWRITE "ext_preserves_Vars") (("1" (REVEAL 4) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REVEAL -10) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -1 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("1" (EXPAND "vars_lst" 1) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (REVEAL -11) (("1" (LEMMA "term_times_eta") (("1" (INST? -1) (("1" (REVEAL -25) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1 RL) (("1" (HIDE -1 -2 -3 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "vars_lst") (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "s_alg") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 2 3 4 5) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("1" (EXPAND "new_sigma_alg") (("1" (LEMMA "suf_cond_idempotent?_append") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "subs_add_alg_well_behaved?") (("1" (EXPAND "sigma1_alg") (("1" (INST? -1) (("1" (PROP) (("1" (REWRITE "ext_preserves_Vars") (("1" (HIDE 1) (("1" (REVEAL 3) (("1" (LEMMA "Vars_occurs") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 2) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" 1) (("1" (EXPAND "union" 1) (("1" (PROP) (("1" (EXPAND "vars_lst" 1) (("1" (EXPAND "sigma1_alg") (("1" (EXPAND "vars_dom_sub") (("1" (REVEAL -7) (("1" (LEMMA "term_times_eta") (("1" (INST? -1) (("1" (REVEAL -20) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1 RL) (("1" (EXPAND "Vars" 1 1) (("1" (HIDE -1 -2 -3 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (PROP) (("2" (EXPAND "vars_lst" 1) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "s_alg") (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -3 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (EXPAND "new_sigma_alg") (("2" (PROP) (("1" (LEMMA "vars_dom_sub_append") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -2 -4 1) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" -2) (("1" (EXPAND "union" -2) (("1" (PROP) (("1" (EXPAND "member" -1) (("1" (LEMMA "suf_cond_not_prb_lst") (("1" (PROP) (("1" (EXPAND "sigma1_alg" -3) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (INST -2 "V(t_alg)" "sigma1_alg" "ext(reverse(p(t_alg)))(s_alg)" "cdr(x!1)") (("1" (PROP) (("1" (EXPAND "vars_dom_sub" -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (REWRITE "ext_preserves_Vars") (("3" (REVEAL 2) (("3" (HIDE -2 -3) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (INST -2 "V(t_alg)" "sigma1_alg" "ext(reverse(p(t_alg)))(s_alg)" "fix_pnt2unif_prb(x!2)") (("2" (PROP) (("1" (EXPAND "sigma1_alg" -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (REWRITE "ext_preserves_Vars") (("3" (HIDE -2 -3) (("3" (REVEAL 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "fix_pnt2unif_prb") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "vars_dom_sub_append") (("2" (INST? -1) (("2" (PROP) (("1" (HIDE -2) (("1" (HIDE -3 1) (("1" (EXPAND "fix_pnt2unif_prb") (("1" (REWRITE "append_null") (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" -2) (("1" (EXPAND "union" -2) (("1" (LEMMA "suf_cond_not_prb_lst") (("1" (EXPAND "sigma1_alg") (("1" (PROP) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (INST -2 "V(t_alg)" "sigma1_alg" "ext(reverse(p(t_alg)))(s_alg)" "cdr(x!1)") (("1" (PROP) (("1" (EXPAND "vars_dom_sub") (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE -2 -3) (("3" (REWRITE "ext_preserves_Vars") (("3" (REVEAL 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (INST -2 "V(t_alg)" "sigma1_alg" "ext(reverse(p(t_alg)))(s_alg)" "fix_pnt2unif_prb(x!2)") (("2" (PROP) (("1" (EXPAND "vars_dom_sub" -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE -2 -3) (("3" (REWRITE "ext_preserves_Vars") (("3" (REVEAL 2) (("3" (LEMMA "Vars_occurs") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -4) (("2" (LEMMA "suf_cond_member_unif_prb_lst") (("2" (EXPAND "fix_pnt2unif_prb" -3) (("2" (REWRITE "append_null") (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "vars_lst_append" -3) (("2" (EXPAND "member" -3) (("2" (EXPAND "union" -3) (("2" (PROP) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (INST? -2) (("1" (PROP) (("1" (HIDE -2 -3) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "vars_lst" 1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 1) (("2" (REVEAL -6) (("2" (INST -1 "x") (("2" (EXPAND "intersection" 1) (("2" (EXPAND "member" 1) (("2" (PROP) (("1" (EXPAND "member" -2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 1 1) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub" -1) (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "s_alg") (("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (INST? -2) (("2" (PROP) (("1" (HIDE -2 -3) (("1" (REWRITE "vars_lst_append") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -2 1) (("2" (REVEAL -6) (("2" (INST? -1) (("2" (EXPAND "member" 1) (("2" (EXPAND "intersection" 1) (("2" (PROP) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 1 1) (("2" (EXPAND "sigma1_alg") (("2" (EXPAND "vars_range_sub") (("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "s_alg") (("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "c_unify_TCC3") (("3" (HIDE 2 3 4 5) (("3" (HIDE -2 -3 -4 -5 -6) (("3" (INST -1 "Delta" "sigma" "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "p(t_alg)" "V(t_alg)") (("1" (PROP) (("1" (INST -1 "sigma1_alg") (("1" (PROP) (("1" (INST -1 "Delta1_alg" "bool1_alg") (("1" (PROP) (("1" (INST -1 "new_Delta_alg") (("1" (PROP) (("1" (INST -1 "new_sigma_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst2_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (REVEAL -12) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "new_unif_prb_lst_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_sigma_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_Delta_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "bool1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND "Delta1_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -7) (("3" (LEMMA "term_times_eta") (("3" (INST? -1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 5) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1 -2 -4 -5 -6 -7 1 2 3) (("4" (ASSERT) (("4" (NAME-REPLACE "new_fix_pnt_eq_alg" "(: (append(reverse(p(s_alg)), p(t_alg)), V(t_alg)) :)") (("4" (NAME-REPLACE "new_fix_pnt_eq_lst_alg" "append(new_fix_pnt_eq_alg, x!2)") (("4" (REVEAL -10) (("4" (INST -1 "cdr(x!1)" "new_fix_pnt_eq_lst_alg") (("4" (INST -1 "Delta" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("4" (REVEAL -7) (("4" (PROP) (("1" (HIDE -2 -3) (("1" (REVEAL 3) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (LIFT-IF) (("1" (REVEAL 2) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -1 -2 -4) (("1" (EXPAND "new_fix_pnt_eq_lst_alg") (("1" (REWRITE "fix_pnt2unif_prb_append") (("1" (EXPAND "new_fix_pnt_eq_alg") (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "fix_pnt2unif_prb") (("1" (EXPAND "fix_pnt2unif_prb") (("1" (REWRITE "append_null") (("1" (EXPAND "apply_sub_prb_lst" -1) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (HIDE -2) (("1" (LEMMA "Subs_perm_Var_aux") (("1" (INST? -1) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (LEMMA "ext_reverse_alpha") (("1" (REWRITE "ext_append") (("1" (REWRITE "alpha_symmetric" -2) (("1" (INST? -1) (("1" (REPLACE -1 -2 RL) (("1" (HIDE -1) (("1" (REWRITE "Subs_perm_comm" :DIR RL) (("1" (REWRITE "Subs_perm_comm" :DIR RL) (("1" (EXPAND "ext" -1) (("1" (REWRITE "append_null") (("1" (REWRITE "append_null") (("1" (REVEAL -20 -21) (("1" (REVEAL -15 -16 -17) (("1" (LEMMA "term_times_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST -1 "s_alg") (("1" (REPLACE -6 1 NIL T) (("1" (REPLACE -6 1 NIL T) (("1" (REPLACE -1 1 RL) (("1" (REPLACE -2 1 RL) (("1" (HIDE -1 -2 -3 -4 -5) (("1" (REWRITE "alpha_symmetric") (("1" (REVEAL -1) (("1" (REVEAL -19) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -4) (("2" (EXPAND "new_fix_pnt_eq_lst_alg") (("2" (REWRITE "fix_pnt2unif_prb_append") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -8) (("2" (HIDE -2 -3) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (HIDE -1) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (PROP) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "vars_lst" 1) (("1" (LIFT-IF) (("1" (REVEAL 3) (("1" (PROP) (("1" (HIDE 1 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_fix_pnt_eq_lst_alg") (("2" (REWRITE "fix_pnt2unif_prb_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("2" (EXPAND "new_fix_pnt_eq_alg") (("2" (EXPAND "fix_pnt2unif_prb" -1) (("2" (EXPAND "fix_pnt2unif_prb" -1) (("2" (REWRITE "append_null") (("2" (EXPAND "vars_lst" -1) (("2" (EXPAND "vars_lst" -1) (("2" (EXPAND "Vars" -1) (("2" (HIDE 2) (("2" (EXPAND "vars_lst" 1) (("2" (LIFT-IF) (("2" (REVEAL 3) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REVEAL -13 -14) (("2" (REPLACE -1 1) (("2" (REPLACE -2 1) (("2" (HIDE -1 -2) (("2" (REVEAL -10) (("2" (LEMMA "term_times_eta") (("2" (INST -1 "t_alg") (("2" (REPLACE -1 1 RL) (("2" (EXPAND "Vars" 1 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "c_unify_TCC4") (("3" (INST -1 "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "p(t_alg)" "V(t_alg)") (("1" (PROP) (("1" (INST -1 "new_fix_pnt_eq_alg") (("1" (PROP) (("1" (INST -1 "new_fix_pnt_eq_lst_alg") (("1" (PROP) (("1" (EXPAND "new_fix_pnt_eq_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_fix_pnt_eq_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -8) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -9) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -10) (("4" (LEMMA "term_times_eta") (("4" (INST? -1) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -10) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 4) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT -1) (("5" (GRIND) NIL NIL)) NIL) ("6" (HIDE -1 -3 -5 1 2 3 4) (("6" (REVEAL -6) (("6" (INST -1 "cdr(x!1)" "x!2") (("6" (INST -1 "Delta" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("6" (PROP) (("1" (HIDE -3) (("1" (REVEAL 4) (("1" (HIDE -2) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -1 -3 -4) (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 3) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE -1 1) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("1" (REVEAL -8 -9 -11 -12) (("1" (REPLACE -3 1 NIL T) (("1" (REPLACE -3 1 NIL T) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROPAX) NIL NIL)) NIL) ("2" (GRIND) (("2" (LEMMA "term_unit_extensionality") (("2" (INST? -1) (("2" (INST -1 "s_alg") (("2" (REPLACE -1 1) (("2" (REWRITE "alpha_reflexivity") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -4) (("2" (HIDE -2 -3) (("2" (LEMMA "valid_quadruple?_cdr") (("2" (INST? -1) (("2" (PROP) (("2" (REVEAL 3) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "c_unify_TCC5") (("3" (INST -1 "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (REVEAL -5) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REVEAL -6) (("2" (HIDE -2 -3 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (REVEAL 5) (("3" (ASSERT) NIL NIL)) NIL) ("4" (EXPAND "s_alg") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 3) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (HIDE-ALL-BUT -1) (("7" (GRIND) NIL NIL)) NIL) ("8" (HIDE-ALL-BUT -1) (("8" (GRIND) NIL NIL)) NIL) ("9" (HIDE -1 -3 -4 -5 1 2 3 4 5) (("9" (ASSERT) (("9" (NAME-REPLACE "unif_prb1_alg" "(: (term1(t_alg), term1(s_alg)) :)") (("9" (NAME-REPLACE "unif_prb2_alg" "(: (term2(t_alg), term2(s_alg)) :)") (("9" (NAME-REPLACE "new_unif_prb_lst_alg" "append(append(unif_prb1_alg, unif_prb2_alg), cdr(x!1))") (("9" (REVEAL -10) (("9" (INST -1 "new_unif_prb_lst_alg" "x!2") (("9" (INST -1 "Delta" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("9" (REVEAL -7) (("9" (PROP) (("1" (HIDE -2 -3) (("1" (REVEAL 5) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -1 -3 -4) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (LIFT-IF) (("1" (REVEAL 4) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (REVEAL -9 -10 -13 -14) (("1" (REPLACE -3 1 NIL T) (("1" (REPLACE -3 1 NIL T) (("1" (LEMMA "term_pair_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST -1 "s_alg") (("1" (REPLACE -1 1 RL) (("1" (REPLACE -2 1 RL) (("1" (REWRITE "Subs_pair") (("1" (REWRITE "Subs_pair") (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "alpha" 1) (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (FLATTEN) (("2" (HIDE -6) (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (EXPAND "unif_prb1_alg") (("2" (EXPAND "unif_prb2_alg") (("2" (HIDE -1 -2 -3 -4) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2) (("2" (REVEAL -9) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST? -2) (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (HIDE -1) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (EXPAND "vars_lst" 1) (("2" (LIFT-IF) (("2" (REVEAL 5) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (REVEAL -9 -10 -13 -14) (("2" (LEMMA "term_pair_eta") (("2" (INST-CP -1 "t_alg") (("2" (INST -1 "s_alg") (("2" (REPLACE -5 1 NIL T) (("2" (REPLACE -5 1 NIL T) (("2" (REPLACE -1 1 RL) (("2" (REPLACE -2 1 RL) (("2" (EXPAND "Vars" 1) (("2" (EXPAND "unif_prb1_alg") (("2" (EXPAND "unif_prb2_alg") (("2" (HIDE -1 -2 -3 -4) (("2" (EXPAND "vars_lst" -1 1) (("2" (EXPAND "vars_lst" -1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (LEMMA "c_unify_TCC6") (("3" (INST -1 "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "term1(t_alg)" "term2(t_alg)") (("1" (PROP) (("1" (INST -1 "unif_prb1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb2_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -10) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -11) (("3" (LEMMA "term_pair_eta") (("3" (INST? -1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -11) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 6) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 4) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (HIDE-ALL-BUT -1) (("10" (GRIND) NIL NIL)) NIL) ("11" (HIDE-ALL-BUT -2) (("11" (ASSERT) (("11" (NAME-REPLACE "new_unif_prb_alg" "(: (body(t_alg), body(s_alg)) :)") (("11" (NAME-REPLACE "new_unif_prb_lst_alg" "append(new_unif_prb_alg, cdr(x!1))") (("11" (REVEAL -10) (("11" (INST -1 "new_unif_prb_lst_alg" "x!2") (("11" (INST -1 "Delta" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("11" (REVEAL -7) (("11" (PROP) (("1" (HIDE -2) (("1" (REVEAL 6) (("1" (HIDE -2) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -1 -3 -4) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (LIFT-IF) (("1" (REVEAL 5) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "new_unif_prb_alg") (("1" (REVEAL -9 -10 -11 -14 -15) (("1" (REPLACE -4 1 NIL T) (("1" (REPLACE -4 1 NIL T) (("1" (LEMMA "term_abs_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST -1 "s_alg") (("1" (REPLACE -1 1 RL) (("1" (REPLACE -2 1 RL) (("1" (REWRITE "Subs_abs") (("1" (REWRITE "Subs_abs") (("1" (HIDE -1 -2 -3 -4 -5) (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REVEAL -12) (("2" (EXPAND "alpha" 1) (("2" (PROP) (("2" (HIDE -1 -2) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (EXPAND "apply_sub_prb_lst" -1) (("2" (REWRITE "append_null") (("2" (EXPAND "alpha_eq_lst?") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2) (("2" (REVEAL -9) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (HIDE -1) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 1 1) (("2" (LIFT-IF) (("2" (REVEAL 5) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REVEAL -9 -10 -13 -14) (("2" (REPLACE -3 1 NIL T) (("2" (REPLACE -3 1 NIL T) (("2" (LEMMA "term_abs_eta") (("2" (INST-CP -1 "t_alg") (("2" (INST -1 "s_alg") (("2" (HIDE -3 -4) (("2" (REPLACE -1 1 RL) (("2" (REPLACE -2 1 RL) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (EXPAND "new_unif_prb_alg") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" -3 1) (("2" (EXPAND "Vars" 1) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "c_unify_TCC7") (("3" (HIDE -2 -3) (("3" (INST -1 "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "abstr(t_alg)" "body(t_alg)") (("1" (PROP) (("1" (INST -1 "new_unif_prb_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -9) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -10) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -11) (("4" (LEMMA "term_abs_eta") (("4" (INST? -1) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -11) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 7) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 5) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("12" (HIDE-ALL-BUT -1) (("12" (ASSERT) (("12" (NAME-REPLACE "bool1_alg" "fresh?(abstr(t_alg), body(s_alg))`2") (("1" (NAME-REPLACE "Delta1_alg" "fresh?(abstr(t_alg), body(s_alg))`1") (("1" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("1" (NAME-REPLACE "new_unif_prb_alg" "(: (body(t_alg), ext((: (abstr(t_alg), abstr(s_alg)) :)) (body(s_alg))) :)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(new_unif_prb_alg, cdr(x!1))") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -1) (("1" (REVEAL -13) (("1" (INST -1 "new_unif_prb_lst_alg" "x!2") (("1" (INST -1 "new_Delta_alg" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (REVEAL -10) (("1" (PROP) (("1" (HIDE -2 -3) (("1" (REVEAL 7) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -2 -3 -4) (("1" (EXPAND "new_Delta_alg") (("1" (REWRITE "fresh_subs_append_context") (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 -4) (("2" (EXPAND "apply_sub_prb_lst" 1) (("2" (LIFT-IF) (("2" (REVEAL 6) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("1" (REVEAL -16 -17 -12 -13) (("1" (REPLACE -3 1 NIL T) (("1" (REPLACE -3 1 NIL T) (("1" (LEMMA "term_abs_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST -1 "s_alg") (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -6) (("1" (EXPAND "new_unif_prb_alg") (("1" (REWRITE "apply_sub_prb_lst" -5) (("1" (EXPAND "apply_sub_prb_lst" -5) (("1" (REWRITE "append_null") (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "alpha_eq_lst?" -5) (("2" (PROP) (("2" (HIDE -2) (("2" (REPLACE -2 1 RL) (("2" (REPLACE -3 1 RL) (("2" (HIDE -2 -3 -4 -5) (("2" (REWRITE "Subs_abs") (("2" (REWRITE "Subs_abs") (("2" (EXPAND "alpha" 1) (("2" (REVEAL 1) (("2" (PROP) (("1" (REVEAL -6) (("1" (HIDE -2 2 3) (("1" (EXPAND "new_Delta_alg") (("1" (REWRITE "fresh_subs_append_context") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "Delta1_alg") (("1" (LEMMA "aux_lemma_fresh_sub_reverse1") (("1" (REVEAL -18 -13) (("1" (INST? -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "Subs_perm_comm") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -11) (("2" (HIDE -2 -3) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (HIDE -1) (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (HIDE 2) (("2" (EXPAND "vars_lst" 1) (("2" (LIFT-IF) (("2" (REVEAL 7) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (HIDE 1) (("2" (EXPAND "member" 1) (("2" (EXPAND "new_unif_prb_alg") (("2" (EXPAND "vars_lst") (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL -12 -13 -16 -17) (("2" (LEMMA "term_abs_eta") (("2" (INST-CP -1 "t_alg") (("2" (INST -1 "s_alg") (("2" (REPLACE -5 1 NIL T) (("2" (REPLACE -5 1 NIL T) (("2" (REPLACE -1 1 RL T) (("2" (REPLACE -1 1 RL T) (("2" (EXPAND "Vars" 1) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "c_unify_TCC8") (("3" (INST -1 "Delta" "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "abstr(t_alg)" "body(t_alg)") (("1" (PROP) (("1" (INST -1 "Delta1_alg" "bool1_alg") (("1" (PROP) (("1" (INST -1 "new_Delta_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (REVEAL -10) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "new_unif_prb_lst_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_Delta_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "bool1_alg") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND "Delta1_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -12) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -13) (("4" (LEMMA "term_abs_eta") (("4" (INST -1 "t_alg") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -13) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 8) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 6) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (REVEAL 6) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -4) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -5) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -2) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -3) (("3" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL -1) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -2) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("13" (HIDE-ALL-BUT -1) (("13" (GRIND) NIL NIL)) NIL) ("14" (HIDE-ALL-BUT -1) (("14" (GRIND) NIL NIL)) NIL) ("15" (HIDE-ALL-BUT -3) (("15" (ASSERT) (("15" (NAME-REPLACE "new_unif_prb_alg" "(: (arg(t_alg), arg(s_alg)) :)") (("15" (NAME-REPLACE "new_unif_prb_lst_alg" "append(new_unif_prb_alg, cdr(x!1))") (("15" (REVEAL -10) (("15" (INST -1 "new_unif_prb_lst_alg" "x!2") (("15" (INST -1 "Delta" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("15" (REVEAL -7) (("15" (PROP) (("1" (HIDE -2 -3) (("1" (REVEAL 7) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -1 -3 -4) (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (LIFT-IF) (("1" (REVEAL 6) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (REVEAL -8 -10 -13 -14) (("1" (LEMMA "term_app_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST -1 "s_alg") (("1" (REPLACE -5 1 NIL T) (("1" (REPLACE -5 1 NIL T) (("1" (REPLACE -1 1 RL T) (("1" (REPLACE -1 1 RL T) (("1" (REWRITE "Subs_app") (("1" (REWRITE "Subs_app") (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -4) (("1" (EXPAND "new_unif_prb_alg") (("1" (EXPAND "apply_sub_prb_lst") (("1" (EXPAND "apply_sub_prb_lst") (("1" (REWRITE "append_null") (("1" (EXPAND "alpha_eq_lst?") (("1" (PROP) (("1" (REVEAL -13) (("1" (EXPAND "alpha" 1) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_lst_alg") (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2) (("2" (REVEAL -9) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "new_unif_prb_lst_alg") (("2" (EXPAND "vars_lst" 1 1) (("2" (LIFT-IF) (("2" (REVEAL 6) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REVEAL -7 -9 -12 -13) (("2" (LEMMA "term_app_eta") (("2" (INST-CP -1 "t_alg") (("2" (INST -1 "s_alg") (("2" (REPLACE -5 1 NIL T) (("2" (REPLACE -5 1 NIL T) (("2" (REPLACE -1 1 RL T) (("2" (REPLACE -1 1 RL T) (("2" (EXPAND "Vars" 1) (("2" (HIDE -1 -2) (("2" (HIDE -1) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "new_unif_prb_alg") (("2" (EXPAND "vars_lst" -1 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "c_unify_TCC9") (("3" (INST -1 "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "sym(t_alg)" "arg(t_alg)") (("1" (PROP) (("1" (INST -1 "new_unif_prb_alg") (("1" (PROP) (("1" (INST -1 "new_unif_prb_lst_alg") (("1" (PROP) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "new_unif_prb_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -8) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -9) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -10) (("4" (LEMMA "term_app_eta") (("4" (INST? -1) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -10) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 8) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 6) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("16" (HIDE-ALL-BUT -1) (("16" (GRIND) NIL NIL)) NIL) ("17" (HIDE-ALL-BUT -1) (("17" (GRIND) NIL NIL)) NIL) ("18" (HIDE-ALL-BUT -3) (("18" (ASSERT) (("18" (NAME-REPLACE "unif_prb1_1_alg" "(: (term1(c_arg(t_alg)), term1(c_arg(s_alg))) :)") (("18" (NAME-REPLACE "unif_prb2_2_alg" "(: (term2(c_arg(t_alg)), term2(c_arg(s_alg))) :)") (("18" (NAME-REPLACE "unif_prb_lst1_alg" "append(append(unif_prb1_1_alg, unif_prb2_2_alg),cdr(x!1))") (("18" (NAME-REPLACE "unif_prb1_2_alg" "(: (term1(c_arg(t_alg)), term2(c_arg(s_alg))) :)") (("18" (NAME-REPLACE "unif_prb2_1_alg" "(: (term2(c_arg(t_alg)), term1(c_arg(s_alg))) :)") (("18" (NAME-REPLACE "unif_prb_lst2_alg" "append(append(unif_prb1_2_alg, unif_prb2_1_alg),cdr(x!1))") (("18" (NAME-REPLACE "sol1_alg" "c_unify(Delta, sigma, unif_prb_lst1_alg, x!2)") (("18" (NAME-REPLACE "sol2_alg" "c_unify(Delta, sigma, unif_prb_lst2_alg, x!2)") (("18" (LEMMA "append_member" ("x" "(Delta_sol, sigma_sol, fix_pnt_eq_lst_sol)")) (("18" (INST? -1) (("18" (REPLACE -1 -2) (("18" (HIDE -1) (("18" (PROP) (("1" (EXPAND "sol1_alg") (("1" (REVEAL -17) (("1" (INST -1 "unif_prb_lst1_alg" "x!2") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (REVEAL -14) (("1" (PROP) (("1" (HIDE -2 -3) (("1" (REVEAL 8) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -1 -3 -4) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (LIFT-IF) (("1" (REVEAL 7) (("1" (PROP) (("1" (HIDE 1 3) (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (REVEAL -17 -18) (("1" (CASE "c_app?(t_alg)") (("1" (LEMMA "term_c_app_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST -1 "s_alg") (("1" (REVEAL -22 -23) (("1" (REPLACE -1 1 NIL T) (("1" (REPLACE -1 1 NIL T) (("1" (REPLACE -1 1 RL T) (("1" (REPLACE -1 1 RL T) (("1" (CASE "c_arg(t_alg) = pair(term1(c_arg(t_alg)), term2(c_arg(t_alg)))") (("1" (CASE "c_arg(s_alg) = pair(term1(c_arg(s_alg)), term2(c_arg(s_alg)))") (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REWRITE "Subs_c_app") (("1" (REWRITE "Subs_c_app") (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "alpha") (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (FLATTEN) (("2" (HIDE 2) (("2" (REWRITE "Subs_pair") (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) (("1" (EXPAND "unif_prb1_1_alg") (("1" (EXPAND "unif_prb2_2_alg") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_1_alg") (("2" (EXPAND "unif_prb2_2_alg") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c_arg(s_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c_arg(t_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 2 3 4 5 6 7) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2) (("2" (REVEAL -16) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 1 1) (("2" (LIFT-IF) (("2" (REVEAL 7) (("2" (PROP) (("2" (HIDE 1 3) (("2" (REVEAL -15 -19 -20) (("2" (EXPAND "unif_prb_lst1_alg") (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (CASE "c_app?(t_alg)") (("1" (LEMMA "term_c_app_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST -1 "s_alg") (("1" (EXPAND "unif_prb1_1_alg") (("1" (EXPAND "unif_prb2_2_alg") (("1" (HIDE -7) (("1" (REPLACE -5 1 NIL T) (("1" (REPLACE -5 1 NIL T) (("1" (CASE "c_arg(s_alg) = pair(term1(c_arg(s_alg)), term2(c_arg(s_alg)))") (("1" (CASE "c_arg(t_alg) = pair(term1(c_arg(t_alg)), term2(c_arg(t_alg)))") (("1" (REPLACE -3 1 RL T) (("1" (REPLACE -3 1 RL T) (("1" (EXPAND "Vars" 1) (("1" (REPLACE -1 1 NIL T) (("1" (REPLACE -1 1 NIL T) (("1" (HIDE -1 -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c_arg(t_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c_arg(s_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL 2 3 4 5 6 7) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2) (("3" (LEMMA "c_unify_TCC10") (("3" (INST -1 "x!1" "x!2") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "c_sym(t_alg)" "c_arg(t_alg)") (("1" (PROP) (("1" (INST -1 "unif_prb1_1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb2_2_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb2_2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -17) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -18) (("3" (PROPAX) NIL NIL)) NIL) ("4" (CASE "c_app?(t_alg)") (("1" (LEMMA "term_c_app_eta") (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2 3) (("2" (REVEAL 3 4 5 6 7 8) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REVEAL 2 3 4 5 6 7) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 9) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 7) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sol2_alg") (("2" (CASE "c_app?(t_alg)") (("1" (REVEAL -11) (("1" (LEMMA "term_c_app_eta") (("1" (INST-CP -1 "t_alg") (("1" (INST -1 "s_alg") (("1" (CASE "c_arg(t_alg) = pair(term1(c_arg(t_alg)), term2(c_arg(t_alg)))") (("1" (CASE "c_arg(s_alg) = pair(term1(c_arg(s_alg)), term2(c_arg(s_alg)))") (("1" (HIDE -1 -2 -3 -4 -5 -6) (("1" (REVEAL -23) (("1" (INST -1 "unif_prb_lst2_alg" "x!2") (("1" (INST -1 "Delta" "Nabla" "sigma" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (REVEAL -20) (("1" (PROP) (("1" (REVEAL 8) (("1" (HIDE -2 -3) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (HIDE -1 -3 -4) (("1" (EXPAND "apply_sub_prb_lst" 1) (("1" (LIFT-IF) (("1" (REVEAL 7) (("1" (PROP) (("1" (HIDE 1 3) (("1" (EXPAND "unif_prb_lst2_alg") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (EXPAND "unif_prb1_2_alg") (("1" (EXPAND "unif_prb2_1_alg") (("1" (REVEAL -7 -8 -9 -10 -27 -28) (("1" (REPLACE -5 1 NIL T) (("1" (REPLACE -5 1 NIL T) (("1" (REPLACE -3 1 RL T) (("1" (REPLACE -3 1 RL T) (("1" (REPLACE -1 1) (("1" (REPLACE -2 1) (("1" (REWRITE "Subs_c_app") (("1" (REWRITE "Subs_c_app") (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "alpha" 1) (("2" (REVEAL -24) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (FLATTEN) (("2" (HIDE 1) (("2" (ASSERT) (("2" (REWRITE "Subs_pair") (("2" (REWRITE "Subs_pair") (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "apply_sub_prb_lst_append") (("2" (REWRITE "alpha_eq_lst?_append") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2) (("2" (REVEAL -22) (("2" (EXPAND "valid_quadruple?") (("2" (PROP) (("2" (HIDE -1) (("2" (EXPAND "disjoint?") (("2" (EXPAND "empty?") (("2" (SKEEP) (("2" (INST -2 "x") (("2" (EXPAND "member") (("2" (EXPAND "intersection") (("2" (PROP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 1 1) (("2" (LIFT-IF) (("2" (REVEAL 7) (("2" (PROP) (("2" (HIDE 1 3) (("2" (EXPAND "unif_prb_lst2_alg") (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "unif_prb1_2_alg") (("2" (EXPAND "unif_prb2_1_alg") (("2" (REVEAL -5 -6 -7 -8 -9) (("2" (REVEAL -25 -26) (("2" (REPLACE -1 1 NIL T) (("2" (REPLACE -1 1 NIL T) (("2" (REPLACE -3 1 RL T) (("2" (REPLACE -3 1 RL T) (("2" (EXPAND "Vars" 1) (("2" (REPLACE -1 1 NIL T) (("2" (REPLACE -1 1 NIL T) (("2" (EXPAND "Vars" 1) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 2) (("3" (HIDE -1) (("3" (LEMMA "c_unify_TCC11") (("3" (INST -1 "Delta" "sigma" "x!1" "x!2" "c_unify") (("3" (PROP) (("1" (INST -1 "t_alg") (("1" (PROP) (("1" (INST -1 "s_alg") (("1" (PROP) (("1" (INST -1 "c_sym(t_alg)" "c_arg(t_alg)") (("1" (PROP) (("1" (INST -1 "unif_prb1_1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb2_2_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst1_alg") (("1" (PROP) (("1" (INST -1 "sol1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb1_2_alg") (("1" (PROP) (("1" (INST -1 "unif_prb2_1_alg") (("1" (PROP) (("1" (INST -1 "unif_prb_lst2_alg") (("1" (PROP) (("1" (EXPAND "unif_prb_lst2_alg") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb2_1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sol1_alg") (("2" (ASSERT) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb_lst1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb2_2_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "unif_prb1_1_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -23) (("2" (PROPAX) NIL NIL)) NIL) ("3" (REVEAL -24) (("3" (PROPAX) NIL NIL)) NIL) ("4" (REVEAL -10) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REVEAL -11) (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 9) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "s_alg") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "t_alg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 7) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c_arg(s_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "c_arg(t_alg)") (("2" (HIDE -1) (("2" (LEMMA "term_pair_eta") (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (REVEAL 1 2 3 4 5 6) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 3) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((CAR ADT-ACCESSOR-DECL "[(cons?) -> T]" LIST_ADT NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (P ADT-ACCESSOR-DECL "[(susp?) -> perm]" TERM_ADT NIL) (REVERSE DEF-DECL "list[T]" LIST_PROPS NIL) (EXT DEF-DECL "term" NOMINAL_TERM NIL) (V ADT-ACCESSOR-DECL "[(susp?) -> variable]" TERM_ADT NIL) (SUSP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (CONS ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" LIST_ADT NIL) (FRESH_SUBS? DEF-DECL "[fresh_context, bool]" SUBSTITUTION NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (APPLY_SUB_PRB_LST DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (C_UNIFY_TCC1 TERMINATION-TCC NIL NOMINALUNIF NIL) (S_ALG SKOLEM-CONST-DECL "term[atom, perm, variable, symbol, commutative_symbol]" NOMINALUNIF NIL) (DELTA1_ALG SKOLEM-CONST-DECL "fresh_context" NOMINALUNIF NIL) (BOOL1_ALG SKOLEM-CONST-DECL "bool" NOMINALUNIF NIL) (SUBS_ADD_ALG_WELL_BEHAVED? FORMULA-DECL NIL SUBSTITUTION NIL) (T_ALG SKOLEM-CONST-DECL "term[atom, perm, variable, symbol, commutative_symbol]" NOMINALUNIF NIL) (SUF_COND_IDEMPOTENT?_APPEND FORMULA-DECL NIL SUBSTITUTION NIL) (APPEND_NULL FORMULA-DECL NIL LIST_PROPS NIL) (SUF_COND_MEMBER_UNIF_PRB_LST FORMULA-DECL NIL NOMINALUNIF NIL) (APPLY_SUB_ELIM_VAR FORMULA-DECL NIL NOMINALUNIF NIL) (VARS_DOM_SUB_APPEND FORMULA-DECL NIL SUBSTITUTION NIL) (FRESH_SUBS_APPEND_CONTEXT FORMULA-DECL NIL SUBSTITUTION NIL) (NEW_DELTA_ALG SKOLEM-CONST-DECL "list[[atom, variable]]" NOMINALUNIF NIL) (APPLY_SUB_PRB_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (MORE_GEN_SUB? CONST-DECL "bool" SUBSTITUTION NIL) (ALPHA_EQ_LST? DEF-DECL "bool" NOMINALUNIF NIL) (ALPHA_TRANSITIVE FORMULA-DECL NIL ALPHA_EQUIVALENCE NIL) (ALPHA_SYMMETRIC FORMULA-DECL NIL ALPHA_EQUIVALENCE NIL) (* ADT-CONSTRUCTOR-DECL "[[perm, variable] -> (susp?)]" TERM_ADT NIL) (VARS_DOM_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (VARS_OCCURS FORMULA-DECL NIL NOMINAL_TERM NIL) (REAL_GE_IS_TOTAL_ORDER NAME-JUDGEMENT "(total_order?[real])" REAL_PROPS NIL) (NOT CONST-DECL "[bool -> bool]" BOOLEANS NIL) (DISJOINT? CONST-DECL "bool" SETS NIL) (EMPTY? CONST-DECL "bool" SETS NIL) (INTERSECTION CONST-DECL "set" SETS NIL) (UNION CONST-DECL "set" SETS NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (SINGLETON CONST-DECL "(singleton?)" SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (NONEMPTY_FINITE_UNION1 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (NONEMPTY_SINGLETON_FINITE APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (FINITE_INTERSECTION1 APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (SUB_SKIP_TERM FORMULA-DECL NIL SUBSTITUTION NIL) (SIGMA1_ALG SKOLEM-CONST-DECL "(cons?[[variable, term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (TERM_TIMES_ETA FORMULA-DECL NIL TERM_ADT NIL) (ALPHA_EXT_INVARIANCE_RIGHT FORMULA-DECL NIL ALPHA_EQUIVALENCE NIL) (SUBS_PERM_COMM FORMULA-DECL NIL SUBSTITUTION NIL) (EXT_IDENTITY FORMULA-DECL NIL NOMINAL_TERM NIL) (ALPHA_REFLEXIVITY FORMULA-DECL NIL ALPHA_EQUIVALENCE NIL) (ACT_REVERSE_AUX1 FORMULA-DECL NIL ATOMS NIL) (EXT_APPEND FORMULA-DECL NIL NOMINAL_TERM NIL) (SUBS DEF-DECL "term" SUBSTITUTION NIL) (SUBS_APPEND FORMULA-DECL NIL SUBSTITUTION NIL) (ALPHA_SUBS_INVARIANCE FORMULA-DECL NIL SUBSTITUTION NIL) (SUF_COND_MORE_GEN_SUB?_APPEND FORMULA-DECL NIL SUBSTITUTION NIL) (EXT_PRESERVES_VARS FORMULA-DECL NIL NOMINAL_TERM NIL) (VARS_RANGE_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (SUF_COND_IDEMPOTENT FORMULA-DECL NIL SUBSTITUTION NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (NONEMPTY_FINITE_UNION2 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (NEW_SIGMA_ALG SKOLEM-CONST-DECL "list[[variable, term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (APPLY_SUB_PRB_LST_CONS_CALLS FORMULA-DECL NIL NOMINALUNIF NIL) (SUBS DEF-DECL "term" SUBSTITUTION NIL) (UNIF_PRB_LST1_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (ALPHA_EQ_LST?_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (UNIF_PRB_LST2_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (C_ARG ADT-ACCESSOR-DECL "[(c_app?) -> pair]" TERM_ADT NIL) (C_APP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (APPEND_MEMBER FORMULA-DECL NIL STRUCTURE_EXTRA NIL) (UNIF_PRB_LST1_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (TERM_C_APP_ETA FORMULA-DECL NIL TERM_ADT NIL) (PAIR ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" TERM_ADT NIL) (C_SYM ADT-ACCESSOR-DECL "[(c_app?) -> commutative_symbol]" TERM_ADT NIL) (SUBS_C_APP FORMULA-DECL NIL SUBSTITUTION NIL) (UNIF_PRB1_1_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (UNIF_PRB2_2_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (C_UNIFY_TCC10 TERMINATION-TCC NIL NOMINALUNIF NIL) (SOL1_ALG SKOLEM-CONST-DECL "list[nominal_sol_typ]" NOMINALUNIF NIL) (UNIF_PRB2_1_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (UNIF_PRB1_2_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (UNIF_PRB_LST2_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (RESTRICT CONST-DECL "R" RESTRICT NIL) (C_UNIFY_TCC11 TERMINATION-TCC NIL NOMINALUNIF NIL) (SOL2_ALG SKOLEM-CONST-DECL "list[nominal_sol_typ]" NOMINALUNIF NIL) (ARG ADT-ACCESSOR-DECL "[(app?) -> term]" TERM_ADT NIL) (APP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (TERM_APP_ETA FORMULA-DECL NIL TERM_ADT NIL) (NEW_UNIF_PRB_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (SUBS_APP FORMULA-DECL NIL SUBSTITUTION NIL) (SYM ADT-ACCESSOR-DECL "[(app?) -> symbol]" TERM_ADT NIL) (C_UNIFY_TCC9 TERMINATION-TCC NIL NOMINALUNIF NIL) (FRESH? DEF-DECL "[fresh_context, bool]" FRESHNESS NIL) (NEW_DELTA_ALG SKOLEM-CONST-DECL "list[[atom, variable]]" NOMINALUNIF NIL) (NEW_UNIF_PRB_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (AUX_LEMMA_FRESH_SUB_REVERSE1 FORMULA-DECL NIL SUBSTITUTION NIL) (DELTA1_ALG SKOLEM-CONST-DECL "fresh_context" NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (BOOL1_ALG SKOLEM-CONST-DECL "bool" NOMINALUNIF NIL) (C_UNIFY_TCC8 TERMINATION-TCC NIL NOMINALUNIF NIL) (BODY ADT-ACCESSOR-DECL "[(abs?) -> term]" TERM_ADT NIL) (ABS? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (ABSTR ADT-ACCESSOR-DECL "[(abs?) -> atom]" TERM_ADT NIL) (SUBS_ABS FORMULA-DECL NIL SUBSTITUTION NIL) (TERM_ABS_ETA FORMULA-DECL NIL TERM_ADT NIL) (NEW_UNIF_PRB_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (C_UNIFY_TCC7 TERMINATION-TCC NIL NOMINALUNIF NIL) (TERM1 ADT-ACCESSOR-DECL "[pair -> term]" TERM_ADT NIL) (PAIR TYPE-EQ-DECL NIL TERM_ADT NIL) (PAIR? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (C_UNIFY_TCC6 TERMINATION-TCC NIL NOMINALUNIF NIL) (TERM_PAIR_ETA FORMULA-DECL NIL TERM_ADT NIL) (UNIF_PRB1_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (UNIF_PRB2_ALG SKOLEM-CONST-DECL "(cons?
     [[term[atom, perm, variable, symbol, commutative_symbol],
       term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (ALPHA DEF-DECL "bool" ALPHA_EQUIVALENCE NIL) (SUBS_PAIR FORMULA-DECL NIL SUBSTITUTION NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list
    [[term[atom, perm, variable, symbol, commutative_symbol],
      term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (TERM2 ADT-ACCESSOR-DECL "[pair -> term]" TERM_ADT NIL) (UNIT? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (TERM_UNIT_EXTENSIONALITY FORMULA-DECL NIL TERM_ADT NIL) (C_UNIFY_TCC5 TERMINATION-TCC NIL NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (SUBS_PERM_VAR_AUX FORMULA-DECL NIL SUBSTITUTION NIL) (EXT_REVERSE_ALPHA FORMULA-DECL NIL ALPHA_EQUIVALENCE NIL) (OCCURS DEF-DECL "bool" NOMINAL_TERM NIL) (NEW_FIX_PNT_EQ_ALG SKOLEM-CONST-DECL "(cons?[[list[[atom, atom]], variable]])" NOMINALUNIF NIL) (NEW_FIX_PNT_EQ_LST_ALG SKOLEM-CONST-DECL "list[[list[[atom, atom]], variable]]" NOMINALUNIF NIL) (NONEMPTY_UNION2 APPLICATION-JUDGEMENT "(nonempty?)" SETS NIL) (C_UNIFY_TCC4 TERMINATION-TCC NIL NOMINALUNIF NIL) (NEW_DELTA_ALG SKOLEM-CONST-DECL "list[[atom, variable]]" NOMINALUNIF NIL) (SIGMA1_ALG SKOLEM-CONST-DECL "(cons?[[variable, term[atom, perm, variable, symbol, commutative_symbol]]])" NOMINALUNIF NIL) (ALPHA_EXT_INVARIANCE FORMULA-DECL NIL ALPHA_EQUIVALENCE NIL) (EQ_SUB_ALPHA FORMULA-DECL NIL SUBSTITUTION NIL) (UNIF_PRB_LST1_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (NEW_UNIF_PRB_LST_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (UNIF_PRB_LST2_ALG SKOLEM-CONST-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (NEW_SIGMA_ALG SKOLEM-CONST-DECL "list[[variable, term[atom, perm, variable, symbol, commutative_symbol]]]" NOMINALUNIF NIL) (APPEND_ASSOC FORMULA-DECL NIL LIST_PROPS NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (SUF_COND_NOT_PRB_LST FORMULA-DECL NIL NOMINALUNIF NIL) (DELTA1_ALG SKOLEM-CONST-DECL "fresh_context" NOMINALUNIF NIL) (BOOL1_ALG SKOLEM-CONST-DECL "bool" NOMINALUNIF NIL) (C_UNIFY_TCC3 TERMINATION-TCC NIL NOMINALUNIF NIL) (A ADT-ACCESSOR-DECL "[(atom?) -> atom]" TERM_ADT NIL) (C_UNIFY_TCC2 TERMINATION-TCC NIL NOMINALUNIF NIL) (VALID_QUADRUPLE?_CDR FORMULA-DECL NIL NOMINALUNIF NIL) (ATOM? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (TERM_AT_ETA FORMULA-DECL NIL TERM_ADT NIL) (FRESH_CONTEXT TYPE-EQ-DECL NIL FRESHNESS NIL) (SUB TYPE-EQ-DECL NIL SUBSTITUTION NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (MEMBER DEF-DECL "bool" LIST_PROPS NIL) (FIX_PNT_EQ TYPE-EQ-DECL NIL ALPHA_EQUIVALENCE NIL) (NOMINAL_SOL_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (C_UNIFY DEF-DECL "list[nominal_sol_typ]" NOMINALUNIF NIL) (SOL_PRB_QUAD? CONST-DECL "bool" NOMINALUNIF NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (VALID_QUADRUPLE? CONST-DECL "bool" NOMINALUNIF NIL) (WELL_FOUNDED_LE FORMULA-DECL NIL ORDINALS NIL) (< DEF-DECL "bool" ORDINALS NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (LEX2 CONST-DECL "ordinal" LEX2 NIL) (ORDINAL NONEMPTY-TYPE-EQ-DECL NIL ORDINALS NIL) (ORDINAL? DEF-DECL "bool" ORDINALS NIL) (ORDSTRUCT TYPE-DECL NIL ORDSTRUCT_ADT NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (>= CONST-DECL "bool" REALS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (MEASURE_INDUCTION FORMULA-DECL NIL MEASURE_INDUCTION NIL) (WELL_FOUNDED? CONST-DECL "bool" ORDERS NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL)) NIL NIL NIL SHOSTAK) (|c_unify_sound-2| "no" 3754221953 NIL ("" (MEASURE-INDUCT+ "lex2(card(vars_lst(append(unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))), size_lst(unif_prb_lst))" ("unif_prb_lst" "fix_pnt_eq_lst")) (("" (HIDE -1) (("" (SKEEP) (("" (EXPAND "sol_prb_quad?" 1) (("" (PROP) (("1" (LEMMA "ctxt_ret_big_init_ctxt") (("1" (LEMMA "fresh_subs_subset") (("1" (EXPAND "sol_prb_quad?" -4) (("1" (PROP) (("1" (HIDE -5 -6) (("1" (INST -1 "sigma1" "Nabla" "Delta" "Delta_sol") (("1" (PROP) (("1" (INST -1 "Delta" "x!2" "sigma" "x!1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (PROP) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "c_unify") (("2" (LIFT-IF) (("2" (SPLIT) (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN -1) (("2" (SPLIT) (("1" (PROP) (("1" (NAME-REPLACE "t_alg" "car(x!1)`1") (("1" (NAME-REPLACE "s_alg" "car(x!1)`2") (("1" (NAME-REPLACE "sigma1_alg" "(: (V(s_alg), ext(reverse(p(s_alg)))(t_alg) ) :)") (("1" (NAME-REPLACE "new_sigma_alg" "append(sigma1_alg, sigma)") (("1" (NAME-REPLACE "Delta1_alg" "fresh_subs?(sigma1_alg, Delta)`1") (("1" (NAME-REPLACE "bool1_alg" "fresh_subs?(sigma1_alg, Delta)`2") (("1" (NAME-REPLACE "unif_prb_lst1_alg" "apply_sub_prb_lst(sigma1_alg, cdr(x!1))") (("1" (NAME-REPLACE "unif_prb_lst2_alg" "apply_sub_prb_lst(sigma1_alg, fix_pnt2unif_prb(x!2))") (("1" (NAME-REPLACE "new_Delta_alg" "append(Delta1_alg, Delta)") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(unif_prb_lst1_alg, unif_prb_lst2_alg)") (("1" (HIDE -1 -3 1 2) (("1" (REVEAL -13) (("1" (INST -1 "new_unif_prb_lst_alg" "(::)") (("1" (INST -1 "new_Delta_alg" "Nabla" "new_sigma_alg" "sigma1" "Delta_sol" "sigma_sol" "fix_pnt_eq_lst_sol") (("1" (PROP) (("1" (HIDE -2 -3) (("1" (EXPAND "sol_prb_quad?" -1) (("1" (PROP) (("1" (EXPAND "alpha_eq_lst?" 1) (("1" (PROP) (("1" (HIDE -1 -2 -4 2) (("1" (EXPAND "new_unif_prb_lst_alg") (("1" (REWRITE "apply_sub_prb_lst_append") (("1" (REWRITE "alpha_eq_lst?_append") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "unif_prb_lst1_alg") (("1" (CASE "more_gen_sub?(Nabla)(sigma1_alg, sigma1)") (("1" (POSTPONE) NIL NIL) ("2" (HIDE -1 2) (("2" (REVEAL -5) (("2" (EXPAND "new_sigma_alg") (("2" (EXPAND "more_gen_sub?") (("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN -1) (("2" (HIDE 1) (("2" (PROP) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL) ("8" (POSTPONE) NIL NIL) ("9" (POSTPONE) NIL NIL) ("10" (POSTPONE) NIL NIL) ("11" (POSTPONE) NIL NIL) ("12" (POSTPONE) NIL NIL) ("13" (POSTPONE) NIL NIL) ("14" (POSTPONE) NIL NIL) ("15" (POSTPONE) NIL NIL) ("16" (POSTPONE) NIL NIL) ("17" (POSTPONE) NIL NIL) ("18" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK) (|c_unify_sound-1| NIL 3754038916 NIL ("" (MEASURE-INDUCT+ "lex2(card(vars_lst(unif_prb_lst)), size_lst(unif_prb_lst))" "unif_prb_lst") (("" (SKOLEM! 1) (("" (PROP) (("" (EXPAND "c_unify") (("" (HIDE -1 -3) (("" (LIFT-IF -1) (("" (SPLIT) (("1" (PROP) (("1" (EXPAND "member") (("1" (PROP) (("1" (REVEAL -2) (("1" (EXPAND "fix_pnt2unif_prb") (("1" (LIFT-IF -1) (("1" (SPLIT) (("1" (PROP) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (PROP) (("2" (HIDE -1 -2 -3 -5 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT) (("1" (HIDE 1) (("1" (NAME-REPLACE "s1" "car(x!1)`2") (("1" (NAME-REPLACE "t1" "car(x!1)`1") (("1" (PROP) (("1" (NAME-REPLACE "new_Delta_alg" "fresh_subs?((: (V(s1), ext(reverse(p(s1)))(t1)) :), Delta!1)`1") (("1" (NAME-REPLACE "sigma1_alg" "(: (V(s1), ext(reverse(p(s1)))(t1)) :)") (("1" (NAME-REPLACE "bool1" "fresh_subs?(sigma1_alg, Delta!1)`2") (("1" (NAME-REPLACE "new_sigma_alg" "append(sigma1_alg, sigma!1)") (("1" (NAME-REPLACE "unif_prb_lst1_alg" "apply_sub_prb_lst(sigma1_alg, cdr(x!1))") (("1" (NAME-REPLACE "unif_prb_lst2_alg" "fix_pnt2unif_prb_via_sub(sigma1_alg, (: :))") (("1" (NAME-REPLACE "new_unif_prb_lst_alg" "append(unif_prb_lst1_alg, unif_prb_lst2_alg)") (("1" (HIDE -1 -3 1) (("1" (EXPAND "sol_prb_quad?") (("1" (PROP) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC11| 0 (|c_unify_TCC11-1| NIL 3754037948 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (HIDE-ALL-BUT 3) (("" (REWRITE "lex2_lt") (("" (FLATTEN) (("" (HIDE 1) (("" (PROP) (("1" (CASE "vars_lst(append[unif_prb_typ]
                        (unif_prb_lst2, fix_pnt2unif_prb(fix_pnt_eq_lst))) = vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))") (("1" (REPLACE -1 1 NIL T) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "subset_antisymmetric" ("a" "vars_lst(append[unif_prb_typ]
                   (unif_prb_lst2, fix_pnt2unif_prb(fix_pnt_eq_lst)))" "b" "vars_lst(append[unif_prb_typ]
                    (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))")) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (PROP) (("1" (REVEAL -10 -11 -12) (("1" (REPLACE -3 -4 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" -3) (("1" (EXPAND "union" -3) (("1" (PROP) (("1" (EXPAND "member" -1) (("1" (REPLACE -2 -1 NIL T) (("1" (REPLACE -2 -1 NIL T) (("1" (PROP) (("1" (EXPAND "vars_lst" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (EXPAND "vars_lst" 1) (("2" (HIDE 2) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (REVEAL 5) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -1 -2 -3 -4 -5) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("3" (REVEAL 5) (("3" (PROPAX) NIL NIL)) NIL) ("4" (HIDE 1) (("4" (REVEAL -1 -2 -3 -4 -5) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "vars_lst" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (HIDE 2) (("2" (REVEAL -1 -2 -3 -4 -5) (("2" (EXPAND "vars_lst" 1) (("2" (LIFT-IF) (("2" (SPLIT 1) (("1" (FLATTEN 1) (("1" (REVEAL 5) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 2) (("2" (EXPAND "vars_lst" 1) (("2" (REVEAL 5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (EXPAND "vars_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (HIDE 2) (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("1" (REVEAL -12) (("1" (REPLACE -1 1 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (REVEAL -10 -11 -12) (("2" (REPLACE -3 1 NIL T) (("2" (REPLACE -2 1 NIL T) (("2" (REPLACE -1 1 NIL T) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (REVEAL -1 -2 -3 -4 -5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -1 -2 -3 -4 -5) (("2" (REVEAL -10 -11 -12) (("2" (REPLACE -3 1 NIL T) (("2" (EXPAND "size_lst" 1 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REPLACE -1 1) (("2" (REPLACE -2 1) (("2" (EXPAND "append") (("2" (EXPAND "append") (("2" (EXPAND "append") (("2" (REVEAL 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((SUBSET? CONST-DECL "bool" SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (UNION CONST-DECL "set" SETS NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (C_ARG ADT-ACCESSOR-DECL "[(c_app?) -> pair]" TERM_ADT NIL) (C_APP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (TERM2 ADT-ACCESSOR-DECL "[pair -> term]" TERM_ADT NIL) (TERM1 ADT-ACCESSOR-DECL "[pair -> term]" TERM_ADT NIL) (PAIR TYPE-EQ-DECL NIL TERM_ADT NIL) (PAIR? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (CONS ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" LIST_ADT NIL) (SUBSET_ANTISYMMETRIC FORMULA-DECL NIL SETS_LEMMAS NIL) (NNINT_PLUS_NNINT_IS_NNINT APPLICATION-JUDGEMENT "nonneg_int" INTEGERS NIL) (SIZE DEF-DECL "nat" NOMINAL_TERM NIL) (POSINT_PLUS_NNINT_IS_POSINT APPLICATION-JUDGEMENT "posint" INTEGERS NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (>= CONST-DECL "bool" REALS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (LEX2_LT FORMULA-DECL NIL LEX2 NIL)) NIL NIL NIL NIL))("nominalunif" |nominalunif| |c_unify_TCC10| 0 (|c_unify_TCC10-1| NIL 3754037948 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REWRITE "lex2_lt") (("" (PROP) (("1" (HIDE 2 3 4) (("1" (CASE "vars_lst(append[unif_prb_typ]
                        (unif_prb_lst1, fix_pnt2unif_prb(fix_pnt_eq_lst))) = 
vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))") (("1" (REPLACE -1 1 NIL T) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "subset_antisymmetric" ("a" "vars_lst(append[unif_prb_typ]
                   (unif_prb_lst1, fix_pnt2unif_prb(fix_pnt_eq_lst)))" "b" "vars_lst(append[unif_prb_typ]
                    (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))")) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (PROP) (("1" (HIDE 2) (("1" (REVEAL -8) (("1" (REPLACE -1 -2 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (REVEAL -6 -7) (("1" (EXPAND "vars_lst" 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 5) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (EXPAND "member") (("2" (PROP) (("1" (HIDE 1) (("1" (HIDE -3) (("1" (REPLACE -2 -1 NIL T) (("1" (EXPAND "vars_lst" -1) (("1" (REVEAL -1 -2 -3 -4 -5) (("1" (REPLACE -1 2 RL T) (("1" (REPLACE -1 3 RL T) (("1" (EXPAND "union" -4) (("1" (EXPAND "member" -4) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACE -4 2 NIL T) (("2" (EXPAND "Vars" 2) (("2" (EXPAND "Vars" 2) (("2" (HIDE -2 -3 1 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "term_c_app_eta") (("3" (INST -1 "s") (("3" (REPLACE -1 3 RL T) (("3" (HIDE -4 1 2) (("3" (EXPAND "Vars" 1) (("3" (HIDE -3) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -3 -1 NIL T) (("2" (HIDE -2 1 2) (("2" (EXPAND "vars_lst") (("2" (EXPAND "union") (("2" (PROP) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (PROP) (("1" (REVEAL -1 -5) (("1" (REPLACE -1 1 RL T) (("1" (REPLACE -1 1 NIL T) (("1" (HIDE 2) (("1" (EXPAND "Vars" 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -2) (("2" (REVEAL -3) (("2" (REPLACE -2 2 RL T) (("2" (HIDE 1) (("2" (LEMMA "term_c_app_eta") (("2" (INST -1 "s") (("2" (REPLACE -1 -2 RL) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (EXPAND "vars_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("1" (REVEAL -8) (("1" (REPLACE -1 1 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (REVEAL -1 -2 -3 -4 -5 -6 -7 -8) (("2" (REPLACE -8 1 NIL T) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (REPLACE -6 1 NIL T) (("2" (REPLACE -6 1 NIL T) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (HIDE 2 3) (("3" (HIDE -1) (("3" (CASE "vars_lst(append[unif_prb_typ]
                        (unif_prb_lst1, fix_pnt2unif_prb(fix_pnt_eq_lst))) = 
vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))") (("1" (REPLACE -1 1 NIL T) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "subset_antisymmetric" ("a" "vars_lst(append[unif_prb_typ]
                   (unif_prb_lst1, fix_pnt2unif_prb(fix_pnt_eq_lst)))" "b" "vars_lst(append[unif_prb_typ]
                    (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))")) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (PROP) (("1" (REVEAL -6 -7 -8) (("1" (REPLACE -3 -4 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (EXPAND "member" -3) (("1" (PROP) (("1" (REPLACE -2 -1 NIL T) (("1" (HIDE -2) (("1" (EXPAND "vars_lst" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "vars_lst") (("1" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -1 -5) (("2" (REPLACE -1 1 RL T) (("2" (REPLACE -1 1 NIL T) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "vars_lst" 1) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REVEAL -2 -3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (REPLACE -2 -1 NIL T) (("2" (EXPAND "vars_lst" -1) (("2" (HIDE 2) (("2" (EXPAND "vars_lst") (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -1 -2 -3 -4 -5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 -3 2) (("3" (EXPAND "vars_lst" 1) (("3" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (EXPAND "vars_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 3) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("1" (HIDE 1 3) (("1" (REVEAL -8) (("1" (REPLACE -1 1 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 1) (("2" (EXPAND "member") (("2" (REVEAL -6 -7 -8) (("2" (REPLACE -3 1 NIL T) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (REPLACE -1 1 NIL T) (("2" (REPLACE -1 1 NIL T) (("2" (REVEAL -1 -2 -3 -4 -5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((LEX2_LT FORMULA-DECL NIL LEX2 NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (>= CONST-DECL "bool" REALS NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (OCCURS DEF-DECL "bool" NOMINAL_TERM NIL) (SIZE DEF-DECL "nat" NOMINAL_TERM NIL) (NNINT_PLUS_NNINT_IS_NNINT APPLICATION-JUDGEMENT "nonneg_int" INTEGERS NIL) (POSINT_PLUS_NNINT_IS_POSINT APPLICATION-JUDGEMENT "posint" INTEGERS NIL) (SUBSET? CONST-DECL "bool" SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (C_APP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (TERM_C_APP_ETA FORMULA-DECL NIL TERM_ADT NIL) (UNION CONST-DECL "set" SETS NIL) (SUBSET_ANTISYMMETRIC FORMULA-DECL NIL SETS_LEMMAS NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC9| 0 (|c_unify_TCC9-1| NIL 3754037948 NIL ("" (TCC) NIL NIL) NIL ((CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (NNINT_PLUS_NNINT_IS_NNINT APPLICATION-JUDGEMENT "nonneg_int" INTEGERS NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (< DEF-DECL "bool" ORDINALS NIL) (SIZE DEF-DECL "nat" NOMINAL_TERM NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (OCCURS DEF-DECL "bool" NOMINAL_TERM NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (POSINT_PLUS_NNINT_IS_POSINT APPLICATION-JUDGEMENT "posint" INTEGERS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (>= CONST-DECL "bool" REALS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (NOT CONST-DECL "[bool -> bool]" BOOLEANS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (/= CONST-DECL "boolean" NOTEQUAL NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (LEX2 CONST-DECL "ordinal" LEX2 NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC8| 0 (|c_unify_TCC8-1| NIL 3754037948 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REWRITE "lex2_lt") (("" (FLATTEN) (("" (HIDE 4) (("" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (CASE "vars_lst(append[unif_prb_typ]
                        (new_unif_prb_lst,
                         fix_pnt2unif_prb(fix_pnt_eq_lst))) = vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))") (("1" (REPLACE -1 1 NIL T) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "subset_antisymmetric" ("a" "vars_lst(append[unif_prb_typ]
                   (new_unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))" "b" "vars_lst(append[unif_prb_typ]
                    (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))")) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (PROP) (("1" (HIDE 2) (("1" (REVEAL -8 -10) (("1" (REPLACE -2 -3 NIL T) (("1" (REPLACE -1 -2 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (EXPAND "vars_lst" -1) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "vars_lst" 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 5) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (PROP) (("2" (EXPAND "member" 2) (("2" (PROP) (("2" (REVEAL -1) (("2" (REVEAL -4) (("2" (HIDE 1 3) (("2" (REPLACE -2 1 RL T) (("2" (REPLACE -1 1 NIL T) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REVEAL 5) (("3" (PROPAX) NIL NIL)) NIL) ("4" (EXPAND "member" 2) (("4" (EXPAND "union" 2) (("4" (PROP) (("4" (HIDE 1) (("4" (EXPAND "member" 2) (("4" (PROP) (("4" (HIDE 1) (("4" (REVEAL -2 -3) (("4" (REPLACE -1 2 RL T) (("4" (HIDE 1) (("4" (ASSERT) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -3) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (EXPAND "vars_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (HIDE 1 3) (("1" (REVEAL -10) (("1" (REPLACE -1 1 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 1 3) (("2" (REVEAL -8 -10) (("2" (REVEAL -1 -2 -3 -4) (("2" (EXPAND "member" -7) (("2" (REPLACE -6 1 NIL T) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (REPLACE -5 1 NIL T) (("2" (REPLACE -2 -5 RL T) (("2" (REPLACE -1 -4 RL T) (("2" (EXPAND "vars_lst" 1 1) (("2" (REWRITE "ext_preserves_Vars") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (CASE "vars_lst(append[unif_prb_typ]
                        (new_unif_prb_lst,
                         fix_pnt2unif_prb(fix_pnt_eq_lst))) = vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))") (("1" (REPLACE -1 1 NIL T) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "subset_antisymmetric" ("a" "vars_lst(append[unif_prb_typ]
                   (new_unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))" "b" "vars_lst(append[unif_prb_typ]
                    (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))")) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" 1) (("1" (EXPAND "union" 1) (("1" (PROP) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (REVEAL -11) (("1" (REVEAL -9) (("1" (REPLACE -2 -3 NIL T) (("1" (REPLACE -1 -2 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (HIDE 2) (("1" (EXPAND "vars_lst" -1 1) (("1" (REWRITE "ext_preserves_Vars") (("1" (EXPAND "vars_lst" 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -2 -3 -4 -5 4 5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "vars_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -11 -9) (("2" (REPLACE -2 1 NIL T) (("2" (REPLACE -1 1 NIL T) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "vars_lst" 1 1) (("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL -2 -3 -4 -5 4 5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((SUBSET_ANTISYMMETRIC FORMULA-DECL NIL SETS_LEMMAS NIL) (UNION CONST-DECL "set" SETS NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (BODY ADT-ACCESSOR-DECL "[(abs?) -> term]" TERM_ADT NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (ABSTR ADT-ACCESSOR-DECL "[(abs?) -> atom]" TERM_ADT NIL) (ABS? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (EXT DEF-DECL "term" NOMINAL_TERM NIL) (CONS ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" LIST_ADT NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (EXT_PRESERVES_VARS FORMULA-DECL NIL NOMINAL_TERM NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (MEMBER CONST-DECL "bool" SETS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (SUBSET? CONST-DECL "bool" SETS NIL) (POSINT_PLUS_NNINT_IS_POSINT APPLICATION-JUDGEMENT "posint" INTEGERS NIL) (NNINT_PLUS_NNINT_IS_NNINT APPLICATION-JUDGEMENT "nonneg_int" INTEGERS NIL) (SIZE DEF-DECL "nat" NOMINAL_TERM NIL) (OCCURS DEF-DECL "bool" NOMINAL_TERM NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (>= CONST-DECL "bool" REALS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (LEX2_LT FORMULA-DECL NIL LEX2 NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC7| 0 (|c_unify_TCC7-1| NIL 3754037948 NIL ("" (TERMINATION-TCC) NIL NIL) NIL ((CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (NNINT_PLUS_NNINT_IS_NNINT APPLICATION-JUDGEMENT "nonneg_int" INTEGERS NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (< DEF-DECL "bool" ORDINALS NIL) (SIZE DEF-DECL "nat" NOMINAL_TERM NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (OCCURS DEF-DECL "bool" NOMINAL_TERM NIL) (REAL_GE_IS_TOTAL_ORDER NAME-JUDGEMENT "(total_order?[real])" REAL_PROPS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (POSINT_PLUS_NNINT_IS_POSINT APPLICATION-JUDGEMENT "posint" INTEGERS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (>= CONST-DECL "bool" REALS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (NOT CONST-DECL "[bool -> bool]" BOOLEANS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (LEX2 CONST-DECL "ordinal" LEX2 NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC6| 0 (|c_unify_TCC6-1| NIL 3754037948 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REWRITE "lex2_lt") (("" (FLATTEN 3) (("" (HIDE 3) (("" (HIDE-ALL-BUT 3) (("" (PROP) (("1" (CASE "vars_lst(append[unif_prb_typ]
                        (new_unif_prb_lst,
                         fix_pnt2unif_prb(fix_pnt_eq_lst))) = vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))") (("1" (REPLACE -1 1 NIL T) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "subset_antisymmetric" ("a" "vars_lst(append[unif_prb_typ]
                   (new_unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))" "b" "vars_lst(append[unif_prb_typ]
                    (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))")) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (PROP) (("1" (REVEAL -7) (("1" (REPLACE -1 -2 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (HIDE 2) (("1" (REVEAL -1 -2 -3 -4 -5 -6 4 5) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (HIDE 2) (("2" (REVEAL -1 -2 -3 -4 -5 -6 -7 4 5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -1 -2 -3 -4 -5 -6 -7 1 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((LEX2_LT FORMULA-DECL NIL LEX2 NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (>= CONST-DECL "bool" REALS NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (SUBSET? CONST-DECL "bool" SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (UNION CONST-DECL "set" SETS NIL) (SUBSET_ANTISYMMETRIC FORMULA-DECL NIL SETS_LEMMAS NIL) (SIZE DEF-DECL "nat" NOMINAL_TERM NIL) (NNINT_PLUS_NNINT_IS_NNINT APPLICATION-JUDGEMENT "nonneg_int" INTEGERS NIL) (POSINT_PLUS_NNINT_IS_POSINT APPLICATION-JUDGEMENT "posint" INTEGERS NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC5| 0 (|c_unify_TCC5-1| NIL 3754037948 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REWRITE "lex2_lt") (("" (FLATTEN) (("" (HIDE 3) (("" (HIDE 2) (("" (PROP) (("1" (HIDE 2) (("1" (CASE "vars_lst(append[unif_prb_typ]
                        (cdr[unif_prb_typ](unif_prb_lst),
                         fix_pnt2unif_prb(fix_pnt_eq_lst))) = vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))") (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "subset_antisymmetric" ("a" "vars_lst(append[unif_prb_typ]
                   (cdr[unif_prb_typ](unif_prb_lst),
                    fix_pnt2unif_prb(fix_pnt_eq_lst)))" "b" "vars_lst(append[unif_prb_typ]
                    (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))")) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (PROP) (("1" (HIDE 2) (("1" (HIDE -2 -3 -4 -5) (("1" (EXPAND "vars_lst" 1) (("1" (LIFT-IF) (("1" (REVEAL 4) (("1" (PROP) (("1" (HIDE 1 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (EXPAND "vars_lst" -1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 3) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REPLACE -2 -1 RL T) (("2" (REPLACE -4 -1 RL T) (("2" (REPLACE -2 -1 NIL T) (("2" (REPLACE -2 -1 NIL T) (("2" (EXPAND "Vars" -1) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE "cdr_smaller_size") (("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((LEX2_LT FORMULA-DECL NIL LEX2 NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (>= CONST-DECL "bool" REALS NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (SUBSET_ANTISYMMETRIC FORMULA-DECL NIL SETS_LEMMAS NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (UNION CONST-DECL "set" SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (SUBSET? CONST-DECL "bool" SETS NIL) (CDR_SMALLER_SIZE FORMULA-DECL NIL NOMINALUNIF NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC4| 0 (|c_unify_TCC4-1| NIL 3754037948 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REWRITE "lex2_lt") (("" (FLATTEN) (("" (HIDE-ALL-BUT 4) (("" (PROP) (("1" (CASE "vars_lst(append[unif_prb_typ]
                        (cdr[unif_prb_typ](unif_prb_lst),
                         fix_pnt2unif_prb(new_fix_pnt_eq_lst))) = vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))") (("1" (REPLACE -1 1 NIL T) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "subset_antisymmetric" ("a" "vars_lst(append[unif_prb_typ]
                   (cdr[unif_prb_typ](unif_prb_lst),
                    fix_pnt2unif_prb(new_fix_pnt_eq_lst)))" "b" "vars_lst(append[unif_prb_typ]
                    (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst)))")) (("2" (PROP) (("1" (HIDE 2) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (REWRITE "vars_lst_append") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (PROP) (("1" (HIDE 2) (("1" (EXPAND "vars_lst" 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -6 -7) (("2" (REPLACE -2 -3 NIL T) (("2" (EXPAND "fix_pnt2unif_prb" -2) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (REWRITE "vars_lst_append" -1) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (EXPAND "append" -1) (("2" (PROP) (("1" (HIDE 1) (("1" (EXPAND "vars_lst" -1) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (PROP) (("1" (REPLACE -2 -1 NIL T) (("1" (EXPAND "Vars" -1) (("1" (HIDE 2) (("1" (EXPAND "vars_lst") (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 2) (("1" (REVEAL 5) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL -1 -5) (("2" (REPLACE -1 2 RL T) (("2" (REPLACE -1 2 NIL T) (("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 -1 NIL T) (("2" (EXPAND "Vars") (("2" (HIDE 2) (("2" (EXPAND "vars_lst") (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 5) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -1 -5) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 -1) (("2" (HIDE 1) (("2" (EXPAND "append" -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (REWRITE "vars_lst_append") (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("1" (EXPAND "vars_lst" -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 3) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("2" (EXPAND "member" -1) (("2" (HIDE 1) (("2" (HIDE 1) (("2" (REVEAL -6 -7) (("2" (EXPAND "fix_pnt2unif_prb" 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE -2 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (HIDE -2 -3) (("2" (REVEAL -1) (("2" (REPLACE -1 -2 RL T) (("2" (REVEAL -5) (("2" (REVEAL -6 -7) (("2" (REWRITE "vars_lst_append" 1) (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (PROP) (("2" (HIDE 2) (("2" (REPLACE -2 1 NIL T) (("2" (REPLACE -1 1 NIL T) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 1) (("3" (GRIND) NIL NIL)) NIL) ("4" (REVEAL -2) (("4" (REPLACE -1 -2 RL T) (("4" (REVEAL -3) (("4" (HIDE 1) (("4" (REWRITE "vars_lst_append") (("4" (EXPAND "member" 1) (("4" (EXPAND "union" 1) (("4" (PROP) (("4" (HIDE 2) (("4" (REPLACE -4 1 NIL T) (("4" (REPLACE -3 1 NIL T) (("4" (REVEAL 7) (("4" (PROP) (("4" (REVEAL -5) (("4" (REPLACE -1 -2 NIL T) (("4" (REWRITE "Vars_occurs") (("4" (HIDE -2) (("4" (REVEAL -3) (("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 1) (("2" (EXPAND "vars_lst" 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE -2 1) (("1" (GRIND) (("1" (REVEAL -7 -8) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -7) (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (PROP) (("2" (HIDE 2) (("2" (REPLACE -1 1 NIL T) (("2" (EXPAND "fix_pnt2unif_prb" 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (EXPAND "append" 1 1) (("2" (EXPAND "append" 1 1) (("2" (EXPAND "append") (("2" (REVEAL -6) (("2" (REPLACE -1 1 NIL T) (("2" (EXPAND "append" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "cdr_smaller_size") (("2" (REVEAL 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((SUBSET? CONST-DECL "bool" SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (CAR ADT-ACCESSOR-DECL "[(cons?) -> T]" LIST_ADT NIL) (* ADT-CONSTRUCTOR-DECL "[[perm, variable] -> (susp?)]" TERM_ADT NIL) (SUSP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (CONS ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" LIST_ADT NIL) (NONEMPTY_FINITE_UNION1 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (NONEMPTY_FINITE_UNION2 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (NONEMPTY_SINGLETON_FINITE APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (SINGLETON CONST-DECL "(singleton?)" SETS NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (LIST2SET DEF-DECL "set[T]" LIST2SET NIL) (UNION CONST-DECL "set" SETS NIL) (OCCURS DEF-DECL "bool" NOMINAL_TERM NIL) (VARS_OCCURS FORMULA-DECL NIL NOMINAL_TERM NIL) (SUBSET_ANTISYMMETRIC FORMULA-DECL NIL SETS_LEMMAS NIL) (CDR_SMALLER_SIZE FORMULA-DECL NIL NOMINALUNIF NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (>= CONST-DECL "bool" REALS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (LEX2_LT FORMULA-DECL NIL LEX2 NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC3| 0 (|c_unify_TCC3-1| NIL 3754037948 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (HIDE-ALL-BUT 4) (("" (REWRITE "lex2_lt") (("" (FLATTEN 1) (("" (HIDE 2) (("" (LEMMA "card_strict_subset" ("A" "vars_lst(append[unif_prb_typ]
                        (new_unif_prb_lst, fix_pnt2unif_prb((: :))))" "B" "vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst))) ")) (("" (PROP) (("" (HIDE 2) (("" (EXPAND "strict_subset?") (("" (PROP) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (EXPAND "fix_pnt2unif_prb" -1) (("1" (REWRITE "append_null") (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" 1) (("1" (EXPAND "union" 1) (("1" (PROP) (("1" (REVEAL -12) (("1" (REPLACE -1 -2 NIL T) (("1" (REWRITE "vars_lst_append") (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (REVEAL -9) (("1" (REPLACE -1 -2 NIL T) (("1" (LEMMA "vars_lst_sub_subset") (("1" (INST? -1) (("1" (EXPAND "subset?") (("1" (INST? -1) (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (REVEAL -7) (("1" (REPLACE -1 -2 NIL T) (("1" (EXPAND "vars_range_sub") (("1" (EXPAND "vars_range_sub" -1) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL) ("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_lst" 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 3) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1 3) (("2" (REVEAL -5) (("2" (REPLACE -1 1 RL T) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "vars_lst" 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -10) (("2" (REPLACE -1 -2 NIL T) (("2" (LEMMA "vars_lst_sub_subset") (("2" (INST? -1) (("2" (EXPAND "subset?") (("2" (INST? -1) (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("2" (REVEAL -7) (("2" (REPLACE -1 -2 NIL T) (("2" (EXPAND "vars_range_sub" -1) (("2" (EXPAND "vars_range_sub" -1) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL) ("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_lst" 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 3) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -5) (("2" (REPLACE -1 1 RL T) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "vars_lst_append") (("2" (INST -1 "unif_prb_lst" "fix_pnt2unif_prb(fix_pnt_eq_lst)") (("2" (REPLACE -1 -2) (("2" (HIDE -1) (("2" (EXPAND "vars_lst" -1 2) (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 3) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -3 -4 -5) (("2" (REPLACE -1 -4 RL) (("2" (REPLACE -2 -4 RL) (("2" (REPLACE -3 -4) (("2" (HIDE -1 -2 -3) (("2" (CASE "member(X, union(union(vars_lst(cdr(unif_prb_lst)),
                   union(Vars(pm * X), Vars(s))),
             vars_lst(fix_pnt2unif_prb(fix_pnt_eq_lst))))") (("1" (CASE "NOT member(X, vars_lst(append[unif_prb_typ]
                   (new_unif_prb_lst, fix_pnt2unif_prb((: :)))))") (("1" (ASSERT) NIL NIL) ("2" (HIDE -2 -3) (("2" (EXPAND "fix_pnt2unif_prb") (("2" (REWRITE "append_null") (("2" (REVEAL -16) (("2" (REPLACE -1 -2) (("2" (HIDE -1) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (REVEAL -13) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (LEMMA "apply_sub_elim_var") (("1" (INST?) (("1" (PROP) (("1" (REVEAL -9) (("1" (REPLACE -1 1 NIL T) (("1" (EXPAND "vars_dom_sub") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -9) (("2" (REPLACE -1 -2 NIL T) (("2" (EXPAND "vars_range_sub" -1) (("2" (EXPAND "vars_range_sub") (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL) ("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 5) (("2" (HIDE -2) (("2" (LEMMA "Vars_occurs") (("2" (INST? -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -14) (("2" (REPLACE -1 -2 NIL T) (("2" (LEMMA "apply_sub_elim_var") (("2" (INST? -1) (("2" (PROP) (("1" (REVEAL -9) (("1" (REPLACE -1 1 NIL T) (("1" (HIDE -1) (("1" (EXPAND "vars_dom_sub") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (REVEAL -10) (("2" (REPLACE -1 -2 NIL T) (("2" (EXPAND "vars_range_sub" -1) (("2" (EXPAND "vars_range_sub" -1) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL 5) (("2" (LEMMA "Vars_occurs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((CARD_STRICT_SUBSET FORMULA-DECL NIL FINITE_SETS NIL) (APPEND_NULL FORMULA-DECL NIL LIST_PROPS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (SUB TYPE-EQ-DECL NIL SUBSTITUTION NIL) (VARS_RANGE_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (EXT_PRESERVES_VARS FORMULA-DECL NIL NOMINAL_TERM NIL) (REVERSE DEF-DECL "list[T]" LIST_PROPS NIL) (VARS_LST_SUB_SUBSET FORMULA-DECL NIL NOMINALUNIF NIL) (UNION CONST-DECL "set" SETS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (SUBSET? CONST-DECL "bool" SETS NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (SUSP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (* ADT-CONSTRUCTOR-DECL "[[perm, variable] -> (susp?)]" TERM_ADT NIL) (VARS_OCCURS FORMULA-DECL NIL NOMINAL_TERM NIL) (VARS_DOM_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (NONEMPTY_FINITE_UNION1 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (NONEMPTY_SINGLETON_FINITE APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (SINGLETON CONST-DECL "(singleton?)" SETS NIL) (APPLY_SUB_ELIM_VAR FORMULA-DECL NIL NOMINALUNIF NIL) (NOT CONST-DECL "[bool -> bool]" BOOLEANS NIL) (NONEMPTY_FINITE_UNION2 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (STRICT_SUBSET? CONST-DECL "bool" SETS NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (>= CONST-DECL "bool" REALS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (LEX2_LT FORMULA-DECL NIL LEX2 NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC2| 0 (|c_unify_TCC2-1| NIL 3754037948 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (HIDE-ALL-BUT 3) (("" (REWRITE "lex2_lt") (("" (PROP) (("1" (HIDE 2) (("1" (LEMMA "vars_lst_append") (("1" (INST -1 "cdr(unif_prb_lst)" "fix_pnt2unif_prb(fix_pnt_eq_lst)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (LEMMA "vars_lst_append") (("1" (INST -1 "unif_prb_lst" "fix_pnt2unif_prb(fix_pnt_eq_lst)") (("1" (REPLACE -1 1) (("1" (HIDE -1) (("1" (EXPAND "vars_lst" 1 3) (("1" (LIFT-IF) (("1" (PROP) (("1" (REVEAL 2) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -4 -5 -6 -7) (("2" (REPLACE -1 1 RL) (("2" (REPLACE -2 1 RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (EXPAND "Vars" 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "union" 1) (("2" (EXPAND "member") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cdr_smaller_size") (("2" (INST? -1) (("2" (PROP) (("2" (REVEAL 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((LEX2_LT FORMULA-DECL NIL LEX2 NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (>= CONST-DECL "bool" REALS NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (CDR_SMALLER_SIZE FORMULA-DECL NIL NOMINALUNIF NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (UNION CONST-DECL "set" SETS NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (MEMBER CONST-DECL "bool" SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |c_unify_TCC1| 0 (|c_unify_TCC1-6| NIL 3755115139 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (HIDE-ALL-BUT 3) (("" (REWRITE "lex2_lt") (("" (FLATTEN) (("" (HIDE 2) (("" (EXPAND "fix_pnt2unif_prb" 1 1) (("" (REWRITE "append_null") (("" (CASE "strict_subset?(vars_lst(new_unif_prb_lst), vars_lst(append[unif_prb_typ]
                         (unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst))))") (("1" (REWRITE "card_strict_subset") NIL NIL) ("2" (HIDE 2) (("2" (EXPAND "strict_subset?") (("2" (PROP) (("1" (REVEAL -12) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "subset?") (("1" (SKEEP) (("1" (LEMMA "vars_lst_append") (("1" (INST -1 "unif_prb_lst1" "unif_prb_lst2") (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (PROP) (("1" (LEMMA "vars_lst_append") (("1" (INST -1 "unif_prb_lst" "fix_pnt2unif_prb(fix_pnt_eq_lst)") (("1" (REPLACE -1 1) (("1" (EXPAND "member" 1) (("1" (EXPAND "union" 1) (("1" (PROP) (("1" (HIDE -1) (("1" (HIDE 2) (("1" (REVEAL -12) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (LEMMA "vars_lst_sub_subset") (("1" (INST -1 "sigma1" "cdr(unif_prb_lst)") (("1" (EXPAND "subset?") (("1" (INST -1 "x") (("1" (PROP) (("1" (HIDE -2) (("1" (EXPAND* "member" "union" 1) (("1" (PROP) (("1" (REVEAL -10) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (EXPAND "vars_range_sub") (("1" (EXPAND "vars_range_sub") (("1" (ASSERT) (("1" (EXPAND* "member" "union") (("1" (PROP) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL) ("2" (LEMMA "ext_preserves_Vars") (("2" (INST? -1) (("2" (REPLACE -1 -2) (("2" (HIDE -1) (("2" (EXPAND "vars_lst") (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -9) (("2" (REPLACE -1 1 RL) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "vars_lst" 1) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member" 1) (("2" (EXPAND "union" 1) (("2" (PROP) (("2" (REVEAL -12) (("2" (REPLACE -1 -2) (("2" (HIDE -1) (("2" (LEMMA "vars_lst_sub_subset") (("2" (INST? -1) (("2" (EXPAND "subset?") (("2" (INST -1 "x") (("2" (PROP) (("2" (HIDE -2) (("2" (EXPAND "member" -1) (("2" (EXPAND "union" -1) (("2" (PROP) (("2" (HIDE 2) (("2" (REVEAL -9) (("2" (REPLACE -1 -2) (("2" (HIDE -1) (("2" (EXPAND "vars_range_sub") (("2" (EXPAND "vars_range_sub") (("2" (EXPAND* "member" "union") (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (REWRITE "ext_preserves_Vars") (("2" (EXPAND "vars_lst") (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -6) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "member(V(s), vars_lst(append(unif_prb_lst, fix_pnt2unif_prb(fix_pnt_eq_lst))))") (("1" (CASE "NOT member(V(s), vars_lst(new_unif_prb_lst))") (("1" (ASSERT) NIL NIL) ("2" (HIDE -2 -3) (("2" (LEMMA "apply_sub_elim_var") (("2" (REVEAL -14) (("2" (REPLACE -1 -3) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "union" -3) (("2" (EXPAND "member" -3) (("2" (PROP) (("1" (HIDE -2) (("1" (REVEAL -11) (("1" (REPLACE -1 -2) (("1" (HIDE -1) (("1" (INST -2 "V(s)" "sigma1" "cdr(unif_prb_lst)") (("1" (PROP) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL) ("2" (REVEAL -5 -6 -7) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE -2) (("3" (REVEAL -8) (("3" (REPLACE -1 -2) (("3" (HIDE -1) (("3" (EXPAND "vars_range_sub") (("3" (EXPAND "union") (("3" (EXPAND "member") (("3" (PROP) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL) ("2" (REWRITE "ext_preserves_Vars") (("2" (REVEAL -6 4) (("2" (GRIND) (("2" (GRIND) (("2" (REWRITE "Vars_occurs") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (REVEAL -12) (("2" (REPLACE -1 -2) (("2" (HIDE -1) (("2" (INST -2 "V(s)" "sigma1" "fix_pnt2unif_prb(fix_pnt_eq_lst)") (("2" (PROP) (("1" (EXPAND "member" 1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REVEAL -7) (("2" (REPLACE -1 1) (("2" (EXPAND "vars_dom_sub") (("2" (ASSERT) (("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2) (("3" (REVEAL -8) (("3" (REPLACE -1 -2) (("3" (HIDE -1) (("3" (EXPAND "vars_range_sub") (("3" (REWRITE "ext_preserves_Vars") (("3" (REVEAL 4) (("3" (EXPAND* "member" "union") (("3" (PROP) (("1" (GRIND) NIL NIL) ("2" (EXPAND "member") (("2" (REWRITE "Vars_occurs") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (REWRITE "vars_lst_append") (("2" (EXPAND "member") (("2" (EXPAND "union") (("2" (PROP) (("2" (HIDE 2) (("2" (EXPAND "vars_lst") (("2" (LIFT-IF) (("2" (PROP) (("1" (REVEAL 4) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 1) (("2" (REVEAL -4) (("2" (REPLACE -1 1) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (EXPAND "union") (("2" (EXPAND "member") (("2" (PROP) (("2" (HIDE 1 2) (("2" (GRIND) (("2" (REVEAL -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REVEAL -2) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL ((LEX2_LT FORMULA-DECL NIL LEX2 NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (>= CONST-DECL "bool" REALS NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (SET TYPE-EQ-DECL NIL SETS NIL) (IS_FINITE CONST-DECL "bool" FINITE_SETS NIL) (FINITE_SET TYPE-EQ-DECL NIL FINITE_SETS NIL) (= CONST-DECL "[T, T -> boolean]" EQUALITIES NIL) (CARD CONST-DECL "nat" FINITE_SETS NIL) (CARD CONST-DECL "{n: nat | n = Card(S)}" FINITE_SETS NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (EVERY ADT-DEF-DECL "boolean" TERM_ADT NIL) (AND CONST-DECL "[bool, bool -> bool]" BOOLEANS NIL) (TRUE CONST-DECL "bool" BOOLEANS NIL) (UNIF_PRB_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (VARS_LST DEF-DECL "finite_set[variable]" NOMINALUNIF NIL) (APPEND DEF-DECL "list[T]" LIST_PROPS NIL) (FIX_PNT_EQ_TYP TYPE-EQ-DECL NIL NOMINALUNIF NIL) (FIX_PNT2UNIF_PRB DEF-DECL "list[unif_prb_typ]" NOMINALUNIF NIL) (NULL? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (NULL ADT-CONSTRUCTOR-DECL "(null?)" LIST_ADT NIL) (SIZE_LST DEF-DECL "nat" NOMINALUNIF NIL) (REAL_LT_IS_STRICT_TOTAL_ORDER NAME-JUDGEMENT "(strict_total_order?[real])" REAL_PROPS NIL) (APPEND_NULL FORMULA-DECL NIL LIST_PROPS NIL) (SUBSET? CONST-DECL "bool" SETS NIL) (VARS_LST_APPEND FORMULA-DECL NIL NOMINALUNIF NIL) (MEMBER CONST-DECL "bool" SETS NIL) (VARS_LST_SUB_SUBSET FORMULA-DECL NIL NOMINALUNIF NIL) (EXT_PRESERVES_VARS FORMULA-DECL NIL NOMINAL_TERM NIL) (REVERSE DEF-DECL "list[T]" LIST_PROPS NIL) (SUSP? ADT-RECOGNIZER-DECL "[term -> boolean]" TERM_ADT NIL) (P ADT-ACCESSOR-DECL "[(susp?) -> perm]" TERM_ADT NIL) (EMPTYSET CONST-DECL "set" SETS NIL) (FINITE_UNION APPLICATION-JUDGEMENT "finite_set" FINITE_SETS NIL) (FINITE_EMPTYSET NAME-JUDGEMENT "finite_set" FINITE_SETS NIL) (VARS_RANGE_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (SUB TYPE-EQ-DECL NIL SUBSTITUTION NIL) (CONS? ADT-RECOGNIZER-DECL "[list -> boolean]" LIST_ADT NIL) (CDR ADT-ACCESSOR-DECL "[(cons?) -> list]" LIST_ADT NIL) (UNION CONST-DECL "set" SETS NIL) (VARS DEF-DECL "finite_set[variable]" NOMINAL_TERM NIL) (NOT CONST-DECL "[bool -> bool]" BOOLEANS NIL) (APPLY_SUB_ELIM_VAR FORMULA-DECL NIL NOMINALUNIF NIL) (NONEMPTY_SINGLETON_FINITE APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (NONEMPTY_FINITE_UNION1 APPLICATION-JUDGEMENT "non_empty_finite_set" FINITE_SETS NIL) (VARS_DOM_SUB DEF-DECL "finite_set[variable]" SUBSTITUTION NIL) (SINGLETON CONST-DECL "(singleton?)" SETS NIL) (VARS_OCCURS FORMULA-DECL NIL NOMINAL_TERM NIL) (V ADT-ACCESSOR-DECL "[(susp?) -> variable]" TERM_ADT NIL) (CARD_STRICT_SUBSET FORMULA-DECL NIL FINITE_SETS NIL) (STRICT_SUBSET? CONST-DECL "bool" SETS NIL)) NIL NIL NIL NIL) (|c_unify_TCC1-5| NIL 3755114379 NIL ("" (POSTPONE) NIL NIL) NIL NIL NIL NIL NIL NIL) (|c_unify_TCC1-4| NIL 3755113278 NIL ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL NIL NIL NIL NIL) (|c_unify_TCC1-3| NIL 3755112298 NIL ("" (SKEEP) (("" (POSTPONE) NIL NIL)) NIL) NIL NIL NIL NIL NIL NIL) (|c_unify_TCC1-2| NIL 3755112191 NIL ("" (POSTPONE) NIL NIL) NIL NIL NIL NIL NIL NIL) (|c_unify_TCC1-1| NIL 3754037948 NIL ("" (TCC)) NIL ((BOOLEAN NONEMPTY-TYPE-DECL NIL BOOLEANS NIL) (BOOL NONEMPTY-TYPE-EQ-DECL NIL BOOLEANS NIL) (NUMBER NONEMPTY-TYPE-DECL NIL NUMBERS NIL) (PRED TYPE-EQ-DECL NIL DEFINED_TYPES NIL) (NUMBER_FIELD_PRED CONST-DECL "[number -> boolean]" NUMBER_FIELDS NIL) (NUMBER_FIELD NONEMPTY-TYPE-FROM-DECL NIL NUMBER_FIELDS NIL) (REAL_PRED CONST-DECL "[number_field -> boolean]" REALS NIL) (REAL NONEMPTY-TYPE-FROM-DECL NIL REALS NIL) (RATIONAL_PRED CONST-DECL "[real -> boolean]" RATIONALS NIL) (RATIONAL NONEMPTY-TYPE-FROM-DECL NIL RATIONALS NIL) (INTEGER_PRED CONST-DECL "[rational -> boolean]" INTEGERS NIL) (INT NONEMPTY-TYPE-EQ-DECL NIL INTEGERS NIL) (>= CONST-DECL "bool" REALS NIL) (ATOM TYPE-EQ-DECL NIL ATOMS NIL) (LIST TYPE-DECL NIL LIST_ADT NIL) (PERM TYPE-EQ-DECL NIL ATOMS NIL) (NAT NONEMPTY-TYPE-EQ-DECL NIL NATURALNUMBERS NIL) (BELOW TYPE-EQ-DECL NIL NAT_TYPES NIL) (CHARACTER TYPE-DECL NIL CHARACTER_ADT NIL) (CHAR? ADT-RECOGNIZER-DECL "[character -> boolean]" CHARACTER_ADT NIL) (CHAR TYPE-EQ-DECL NIL STRINGS NIL) (SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (COMMUTATIVE_SYMBOL TYPE-EQ-DECL NIL NOMINAL_TERM NIL) (TERM TYPE-DECL NIL TERM_ADT NIL) (VARIABLE TYPE-EQ-DECL NIL NOMINAL_TERM NIL)) NIL NIL NIL SHOSTAK))("nominalunif" |nominalunif| |apply_sub_lhs_prb_lst_TCC3| 0 (|apply_sub_lhs_prb_lst_TCC3-1| NIL 3788682815 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("nominalunif" |nominalunif| |apply_sub_lhs_prb_lst_TCC2| 0 (|apply_sub_lhs_prb_lst_TCC2-1| NIL 3788682815 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("nominalunif" |nominalunif| |vars_rhs_lst_TCC4| 0 (|vars_rhs_lst_TCC4-1| NIL 3788683997 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("nominalunif" |nominalunif| |vars_rhs_lst_TCC3| 0 (|vars_rhs_lst_TCC3-1| NIL 3788683997 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("nominalunif" |nominalunif| |vars_rhs_lst_TCC2| 0 (|vars_rhs_lst_TCC2-1| NIL 3788683997 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("nominal_term" |nominal_term| |ext_reverse| 0 (|ext_reverse-1| NIL 3788707906 NIL ("" (INDUCT "t") (("1" (SKEEP) (("1" (SKEEP) (("1" (EXPAND "ext") (("1" (LEMMA "act_reverse") (("1" (INST? -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL) ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))("nominal_term" |nominal_term| |depth_TCC5| 0 (|depth_TCC5-1| NIL 3788707894 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("nominal_term" |nominal_term| |depth_TCC4| 0 (|depth_TCC4-1| NIL 3788707894 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("nominal_term" |nominal_term| |depth_TCC3| 0 (|depth_TCC3-1| NIL 3788707894 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("nominal_term" |nominal_term| |depth_TCC2| 0 (|depth_TCC2-1| NIL 3788707894 NIL ("" (TERMINATION-TCC) NIL NIL) NIL NIL NIL NIL NIL NIL))("substitution" |substitution| |disjoint?_more_gen_sub?| 0 (|disjoint?_more_gen_sub?-1| NIL 3788730448 NIL ("" (SKEEP) (("" (EXPAND "more_gen_sub?") (("" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL NIL NIL NIL SHOSTAK))